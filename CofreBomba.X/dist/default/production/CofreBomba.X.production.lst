

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Dec 10 15:55:21 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text24,global,reloc=2,class=CODE,delta=1
    34                           	psect	text25,global,reloc=2,class=CODE,delta=1
    35                           	psect	text26,global,reloc=2,class=CODE,delta=1
    36                           	psect	text27,global,reloc=2,class=CODE,delta=1
    37                           	psect	text28,global,reloc=2,class=CODE,delta=1
    38                           	psect	text29,global,reloc=2,class=CODE,delta=1
    39                           	psect	text30,global,reloc=2,class=CODE,delta=1
    40                           	psect	text31,global,reloc=2,class=CODE,delta=1
    41                           	psect	text32,global,reloc=2,class=CODE,delta=1
    42                           	psect	text33,global,reloc=2,class=CODE,delta=1
    43                           	psect	text34,global,reloc=2,class=CODE,delta=1
    44                           	psect	text35,global,reloc=2,class=CODE,delta=1
    45                           	psect	text36,global,reloc=2,class=CODE,delta=1
    46                           	psect	text37,global,reloc=2,class=CODE,delta=1
    47                           	psect	text38,global,reloc=2,class=CODE,delta=1
    48                           	psect	text39,global,reloc=2,class=CODE,delta=1
    49                           	psect	text40,global,reloc=2,class=CODE,delta=1
    50                           	psect	text41,global,reloc=2,class=CODE,delta=1
    51                           	psect	text42,global,reloc=2,class=CODE,delta=1
    52                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    53                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    54                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    55                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    56  0000                     
    57                           ; Version 2.20
    58                           ; Generated 12/02/2020 GMT
    59                           ; 
    60                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    61                           ; All rights reserved.
    62                           ; 
    63                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    64                           ; 
    65                           ; Redistribution and use in source and binary forms, with or without modification, are
    66                           ; permitted provided that the following conditions are met:
    67                           ; 
    68                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    69                           ;        conditions and the following disclaimer.
    70                           ; 
    71                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    72                           ;        of conditions and the following disclaimer in the documentation and/or other
    73                           ;        materials provided with the distribution.
    74                           ; 
    75                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    76                           ;        software without specific prior written permission.
    77                           ; 
    78                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    79                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    80                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    81                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    82                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    83                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    84                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    85                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    86                           ; 
    87                           ; 
    88                           ; Code-generator required, PIC18F4520 Definitions
    89                           ; 
    90                           ; SFR Addresses
    91  0000                     
    92                           	psect	smallconst
    93  000600                     __psmallconst:
    94                           	callstack 0
    95  000600  00                 	db	0
    96  000601                     _valor:
    97                           	callstack 0
    98  000601  3F                 	db	63
    99  000602  06                 	db	6
   100  000603  5B                 	db	91
   101  000604  4F                 	db	79
   102  000605  66                 	db	102
   103  000606  6D                 	db	109
   104  000607  7D                 	db	125
   105  000608  07                 	db	7
   106  000609  7F                 	db	127
   107  00060A  6F                 	db	111
   108  00060B  77                 	db	119
   109  00060C  7C                 	db	124
   110  00060D  39                 	db	57
   111  00060E  5E                 	db	94
   112  00060F  79                 	db	121
   113  000610  71                 	db	113
   114  000611  00                 	db	0
   115  000612                     __end_of_valor:
   116                           	callstack 0
   117  000612                     _charKey:
   118                           	callstack 0
   119  000612  55                 	db	85
   120  000613  4C                 	db	76
   121  000614  44                 	db	68
   122  000615  52                 	db	82
   123  000616  53                 	db	83
   124  000617  58                 	db	88
   125  000618  41                 	db	65
   126  000619  42                 	db	66
   127  00061A  59                 	db	89
   128  00061B  73                 	db	115
   129  00061C                     __end_of_charKey:
   130                           	callstack 0
   131  0000                     _T0CON	set	4053
   132  0000                     _TMR0L	set	4054
   133  0000                     _TMR0H	set	4055
   134  0000                     _INTCON	set	4082
   135  0000                     _T2CON	set	4042
   136  0000                     _CCP2CON	set	4026
   137  0000                     _CCPR2L	set	4027
   138  0000                     _PR2	set	4043
   139  0000                     _ADCON1	set	4033
   140  0000                     _TRISE	set	3990
   141  0000                     _TRISD	set	3989
   142  0000                     _TRISC	set	3988
   143  0000                     _TRISB	set	3987
   144  0000                     _TRISA	set	3986
   145  0000                     _PORTE	set	3972
   146  0000                     _PORTD	set	3971
   147  0000                     _PORTC	set	3970
   148  0000                     _PORTB	set	3969
   149  0000                     _PORTA	set	3968
   150  00061C  50                 	db	80	;'P'
   151  00061D  52                 	db	82	;'R'
   152  00061E  45                 	db	69	;'E'
   153  00061F  53                 	db	83	;'S'
   154  000620  53                 	db	83	;'S'
   155  000621  20                 	db	32
   156  000622  4B                 	db	75	;'K'
   157  000623  45                 	db	69	;'E'
   158  000624  59                 	db	89	;'Y'
   159  000625  20                 	db	32
   160  000626  54                 	db	84	;'T'
   161  000627  4F                 	db	79	;'O'
   162  000628  20                 	db	32
   163  000629  43                 	db	67	;'C'
   164  00062A  4C                 	db	76	;'L'
   165  00062B  4F                 	db	79	;'O'
   166  00062C  53                 	db	83	;'S'
   167  00062D  45                 	db	69	;'E'
   168  00062E  00                 	db	0
   169  00062F                     STR_3:
   170  00062F  41                 	db	65	;'A'
   171  000630  63                 	db	99	;'c'
   172  000631  63                 	db	99	;'c'
   173  000632  65                 	db	101	;'e'
   174  000633  73                 	db	115	;'s'
   175  000634  73                 	db	115	;'s'
   176  000635  20                 	db	32
   177  000636  47                 	db	71	;'G'
   178  000637  72                 	db	114	;'r'
   179  000638  61                 	db	97	;'a'
   180  000639  6E                 	db	110	;'n'
   181  00063A  74                 	db	116	;'t'
   182  00063B  65                 	db	101	;'e'
   183  00063C  64                 	db	100	;'d'
   184  00063D  00                 	db	0
   185  00063E                     STR_5:
   186  00063E  54                 	db	84	;'T'
   187  00063F  6F                 	db	111	;'o'
   188  000640  6F                 	db	111	;'o'
   189  000641  20                 	db	32
   190  000642  6D                 	db	109	;'m'
   191  000643  61                 	db	97	;'a'
   192  000644  6E                 	db	110	;'n'
   193  000645  79                 	db	121	;'y'
   194  000646  20                 	db	32
   195  000647  74                 	db	116	;'t'
   196  000648  72                 	db	114	;'r'
   197  000649  69                 	db	105	;'i'
   198  00064A  65                 	db	101	;'e'
   199  00064B  73                 	db	115	;'s'
   200  00064C  00                 	db	0
   201  00064D                     STR_4:
   202  00064D  41                 	db	65	;'A'
   203  00064E  63                 	db	99	;'c'
   204  00064F  63                 	db	99	;'c'
   205  000650  65                 	db	101	;'e'
   206  000651  73                 	db	115	;'s'
   207  000652  73                 	db	115	;'s'
   208  000653  20                 	db	32
   209  000654  44                 	db	68	;'D'
   210  000655  65                 	db	101	;'e'
   211  000656  6E                 	db	110	;'n'
   212  000657  69                 	db	105	;'i'
   213  000658  65                 	db	101	;'e'
   214  000659  64                 	db	100	;'d'
   215  00065A  00                 	db	0
   216  00065B                     STR_6:
   217  00065B  45                 	db	69	;'E'
   218  00065C  58                 	db	88	;'X'
   219  00065D  50                 	db	80	;'P'
   220  00065E  4C                 	db	76	;'L'
   221  00065F  4F                 	db	79	;'O'
   222  000660  44                 	db	68	;'D'
   223  000661  49                 	db	73	;'I'
   224  000662  4E                 	db	78	;'N'
   225  000663  47                 	db	71	;'G'
   226  000664  2E                 	db	46
   227  000665  2E                 	db	46
   228  000666  2E                 	db	46
   229  000667  00                 	db	0
   230  000668                     STR_8:
   231  000668  43                 	db	67	;'C'
   232  000669  6F                 	db	111	;'o'
   233  00066A  6E                 	db	110	;'n'
   234  00066B  66                 	db	102	;'f'
   235  00066C  69                 	db	105	;'i'
   236  00066D  67                 	db	103	;'g'
   237  00066E  75                 	db	117	;'u'
   238  00066F  72                 	db	114	;'r'
   239  000670  65                 	db	101	;'e'
   240  000671  3A                 	db	58	;':'
   241  000672  00                 	db	0
   242  000673                     STR_2:
   243  000673  50                 	db	80	;'P'
   244  000674  61                 	db	97	;'a'
   245  000675  73                 	db	115	;'s'
   246  000676  73                 	db	115	;'s'
   247  000677  77                 	db	119	;'w'
   248  000678  6F                 	db	111	;'o'
   249  000679  72                 	db	114	;'r'
   250  00067A  64                 	db	100	;'d'
   251  00067B  3A                 	db	58	;':'
   252  00067C  00                 	db	0
   253  00067D                     STR_7:
   254  00067D  42                 	db	66	;'B'
   255  00067E  4F                 	db	79	;'O'
   256  00067F  4F                 	db	79	;'O'
   257  000680  4D                 	db	77	;'M'
   258  000681  21                 	db	33
   259  000682  21                 	db	33
   260  000683  00                 	db	0
   261  000684  00                 	db	0	; dummy byte at the end
   262  0000                     
   263                           ; #config settings
   264                           
   265                           	psect	cinit
   266  001DCC                     __pcinit:
   267                           	callstack 0
   268  001DCC                     start_initialization:
   269                           	callstack 0
   270  001DCC                     __initialization:
   271                           	callstack 0
   272                           
   273                           ; Clear objects allocated to COMRAM (30 bytes)
   274  001DCC  EE00  F001         	lfsr	0,__pbssCOMRAM
   275  001DD0  0E1E               	movlw	30
   276  001DD2                     clear_0:
   277  001DD2  6AEE               	clrf	postinc0,c
   278  001DD4  06E8               	decf	wreg,f,c
   279  001DD6  E1FD               	bnz	clear_0
   280  001DD8                     end_of_initialization:
   281                           	callstack 0
   282  001DD8                     __end_of__initialization:
   283                           	callstack 0
   284  001DD8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   285  001DDA  6EF8               	movwf	tblptru,c
   286  001DDC  0100               	movlb	0
   287  001DDE  EFA2  F009         	goto	_main	;jump to C main() function
   288                           
   289                           	psect	bssCOMRAM
   290  000001                     __pbssCOMRAM:
   291                           	callstack 0
   292  000001                     _input:
   293                           	callstack 0
   294  000001                     	ds	8
   295  000009                     _password:
   296                           	callstack 0
   297  000009                     	ds	8
   298  000011                     kpDebounce@oldRead:
   299                           	callstack 0
   300  000011                     	ds	2
   301  000013                     kpDebounce@newRead:
   302                           	callstack 0
   303  000013                     	ds	2
   304  000015                     _keys:
   305                           	callstack 0
   306  000015                     	ds	2
   307  000017                     _try:
   308                           	callstack 0
   309  000017                     	ds	1
   310  000018                     _v3:
   311                           	callstack 0
   312  000018                     	ds	1
   313  000019                     _v2:
   314                           	callstack 0
   315  000019                     	ds	1
   316  00001A                     _v1:
   317                           	callstack 0
   318  00001A                     	ds	1
   319  00001B                     _v0:
   320                           	callstack 0
   321  00001B                     	ds	1
   322  00001C                     _display:
   323                           	callstack 0
   324  00001C                     	ds	1
   325  00001D                     kpDebounce@tempo:
   326                           	callstack 0
   327  00001D                     	ds	1
   328  00001E                     _started:
   329                           	callstack 0
   330  00001E                     	ds	1
   331                           
   332                           	psect	cstackCOMRAM
   333  00001F                     __pcstackCOMRAM:
   334                           	callstack 0
   335  00001F                     ??_kpReadKey:
   336  00001F                     ?_digitalRead:
   337                           	callstack 0
   338  00001F                     ?_kpRead:
   339                           	callstack 0
   340  00001F                     ?___wmul:
   341                           	callstack 0
   342  00001F                     ?___awdiv:
   343                           	callstack 0
   344  00001F                     ?___lwdiv:
   345                           	callstack 0
   346  00001F                     ?___aldiv:
   347                           	callstack 0
   348  00001F                     digitalWrite@pin:
   349                           	callstack 0
   350  00001F                     digitalRead@pin:
   351                           	callstack 0
   352  00001F                     pinMode@pin:
   353                           	callstack 0
   354  00001F                     delayMicro@a:
   355                           	callstack 0
   356  00001F                     delayMili@a:
   357                           	callstack 0
   358  00001F                     timerReset@tempo:
   359                           	callstack 0
   360  00001F                     atraso_ms@num:
   361                           	callstack 0
   362  00001F                     ___wmul@multiplier:
   363                           	callstack 0
   364  00001F                     ___awdiv@dividend:
   365                           	callstack 0
   366  00001F                     ___lwdiv@dividend:
   367                           	callstack 0
   368  00001F                     ___aldiv@dividend:
   369                           	callstack 0
   370                           
   371                           ; 4 bytes @ 0x0
   372  00001F                     	ds	2
   373  000021                     ??_digitalRead:
   374  000021                     ??_delayMili:
   375  000021                     digitalWrite@value:
   376                           	callstack 0
   377  000021                     pinMode@type:
   378                           	callstack 0
   379  000021                     timerReset@ciclos:
   380                           	callstack 0
   381  000021                     atraso_ms@i:
   382                           	callstack 0
   383  000021                     ___wmul@multiplicand:
   384                           	callstack 0
   385  000021                     ___awdiv@divisor:
   386                           	callstack 0
   387  000021                     ___lwdiv@divisor:
   388                           	callstack 0
   389                           
   390                           ; 2 bytes @ 0x2
   391  000021                     	ds	1
   392  000022                     kpReadKey@i:
   393                           	callstack 0
   394  000022                     delayMili@i:
   395                           	callstack 0
   396                           
   397                           ; 2 bytes @ 0x3
   398  000022                     	ds	1
   399  000023                     ??_pinMode:
   400  000023                     ??_digitalWrite:
   401  000023                     atraso_ms@j:
   402                           	callstack 0
   403  000023                     ___awdiv@counter:
   404                           	callstack 0
   405  000023                     ___wmul@product:
   406                           	callstack 0
   407  000023                     ___lwdiv@quotient:
   408                           	callstack 0
   409  000023                     ___aldiv@divisor:
   410                           	callstack 0
   411                           
   412                           ; 4 bytes @ 0x4
   413  000023                     	ds	1
   414  000024                     atraso_ms@k:
   415                           	callstack 0
   416  000024                     ___awdiv@sign:
   417                           	callstack 0
   418                           
   419                           ; 1 bytes @ 0x5
   420  000024                     	ds	1
   421  000025                     ___lwdiv@counter:
   422                           	callstack 0
   423  000025                     soWrite@value:
   424                           	callstack 0
   425  000025                     turnOn@led:
   426                           	callstack 0
   427  000025                     turnOff@led:
   428                           	callstack 0
   429  000025                     ___awdiv@quotient:
   430                           	callstack 0
   431                           
   432                           ; 2 bytes @ 0x6
   433  000025                     	ds	1
   434  000026                     ??_pwmSet:
   435  000026                     ?___lwmod:
   436                           	callstack 0
   437  000026                     ___lwmod@dividend:
   438                           	callstack 0
   439                           
   440                           ; 2 bytes @ 0x7
   441  000026                     	ds	1
   442  000027                     ?___awmod:
   443                           	callstack 0
   444  000027                     soWrite@i:
   445                           	callstack 0
   446  000027                     ___aldiv@counter:
   447                           	callstack 0
   448  000027                     ___awmod@dividend:
   449                           	callstack 0
   450                           
   451                           ; 2 bytes @ 0x8
   452  000027                     	ds	1
   453  000028                     ??_kpDebounce:
   454  000028                     ??_ssdUpdate:
   455  000028                     pwmSet@porcento:
   456                           	callstack 0
   457  000028                     ___aldiv@sign:
   458                           	callstack 0
   459  000028                     pushNibble@rs:
   460                           	callstack 0
   461  000028                     pushByte@rs:
   462                           	callstack 0
   463  000028                     ___lwmod@divisor:
   464                           	callstack 0
   465                           
   466                           ; 2 bytes @ 0x9
   467  000028                     	ds	1
   468  000029                     pwmSet@val:
   469                           	callstack 0
   470  000029                     ___awmod@divisor:
   471                           	callstack 0
   472  000029                     ___aldiv@quotient:
   473                           	callstack 0
   474                           
   475                           ; 4 bytes @ 0xA
   476  000029                     	ds	1
   477  00002A                     ??_pushByte:
   478  00002A                     pushNibble@value:
   479                           	callstack 0
   480  00002A                     ___lwmod@counter:
   481                           	callstack 0
   482                           
   483                           ; 1 bytes @ 0xB
   484  00002A                     	ds	1
   485  00002B                     pushByte@value:
   486                           	callstack 0
   487  00002B                     ___awmod@counter:
   488                           	callstack 0
   489  00002B                     kpDebounce@i:
   490                           	callstack 0
   491                           
   492                           ; 2 bytes @ 0xC
   493  00002B                     	ds	1
   494  00002C                     lcdCommand@value:
   495                           	callstack 0
   496  00002C                     lcdChar@value:
   497                           	callstack 0
   498  00002C                     ___awmod@sign:
   499                           	callstack 0
   500                           
   501                           ; 1 bytes @ 0xD
   502  00002C                     	ds	1
   503  00002D                     ssdDigit@pos:
   504                           	callstack 0
   505  00002D                     lcdString@msg:
   506                           	callstack 0
   507  00002D                     pwmFrequency@freq:
   508                           	callstack 0
   509  00002D                     setPassword@key:
   510                           	callstack 0
   511                           
   512                           ; 2 bytes @ 0xE
   513  00002D                     	ds	1
   514  00002E                     ssdDigit@val:
   515                           	callstack 0
   516                           
   517                           ; 1 bytes @ 0xF
   518  00002E                     	ds	1
   519  00002F                     ??_lcdString:
   520  00002F                     setPassword@i:
   521                           	callstack 0
   522                           
   523                           ; 1 bytes @ 0x10
   524  00002F                     	ds	2
   525  000031                     lcdString@i:
   526                           	callstack 0
   527                           
   528                           ; 2 bytes @ 0x12
   529  000031                     	ds	2
   530  000033                     explosion@cont:
   531                           	callstack 0
   532                           
   533                           ; 2 bytes @ 0x14
   534  000033                     	ds	2
   535  000035                     checkPassword@newkey:
   536                           	callstack 0
   537  000035                     explosion@i:
   538                           	callstack 0
   539                           
   540                           ; 2 bytes @ 0x16
   541  000035                     	ds	2
   542  000037                     checkPassword@correct:
   543                           	callstack 0
   544                           
   545                           ; 2 bytes @ 0x18
   546  000037                     	ds	2
   547  000039                     checkPassword@i:
   548                           	callstack 0
   549                           
   550                           ; 1 bytes @ 0x1A
   551  000039                     	ds	1
   552  00003A                     ??_main:
   553                           
   554                           ; 1 bytes @ 0x1B
   555  00003A                     	ds	2
   556  00003C                     main@slot:
   557                           	callstack 0
   558                           
   559                           ; 1 bytes @ 0x1D
   560  00003C                     	ds	1
   561                           
   562 ;;
   563 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   564 ;;
   565 ;; *************** function _main *****************
   566 ;; Defined at:
   567 ;;		line 137 in file "main.c"
   568 ;; Parameters:    Size  Location     Type
   569 ;;		None
   570 ;; Auto vars:     Size  Location     Type
   571 ;;  slot            1   29[COMRAM] unsigned char 
   572 ;; Return value:  Size  Location     Type
   573 ;;                  1    wreg      void 
   574 ;; Registers used:
   575 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   576 ;; Tracked objects:
   577 ;;		On entry : 0/0
   578 ;;		On exit  : 0/0
   579 ;;		Unchanged: 0/0
   580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   581 ;;      Params:         0       0       0       0       0       0       0
   582 ;;      Locals:         1       0       0       0       0       0       0
   583 ;;      Temps:          2       0       0       0       0       0       0
   584 ;;      Totals:         3       0       0       0       0       0       0
   585 ;;Total ram usage:        3 bytes
   586 ;; Hardware stack levels required when called: 7
   587 ;; This function calls:
   588 ;;		_checkPassword
   589 ;;		_explosion
   590 ;;		_kpDebounce
   591 ;;		_kpInit
   592 ;;		_lcdCommand
   593 ;;		_lcdInit
   594 ;;		_lcdString
   595 ;;		_pwmInit
   596 ;;		_rgbInit
   597 ;;		_setPassword
   598 ;;		_ssdInit
   599 ;;		_ssdUpdate
   600 ;;		_timerInit
   601 ;;		_timerReset
   602 ;;		_timerWait
   603 ;;		_turnOff
   604 ;; This function is called by:
   605 ;;		Startup code after reset
   606 ;; This function uses a non-reentrant model
   607 ;;
   608                           
   609                           	psect	text0
   610  001344                     __ptext0:
   611                           	callstack 0
   612  001344                     _main:
   613                           	callstack 24
   614  001344                     
   615                           ;main.c: 138:     char slot;;main.c: 139:     lcdInit();
   616  001344  EC6D  F00A         	call	_lcdInit	;wreg free
   617                           
   618                           ;main.c: 140:     kpInit();
   619  001348  EC16  F00E         	call	_kpInit	;wreg free
   620                           
   621                           ;main.c: 141:     ssdInit();
   622  00134C  EC3A  F00D         	call	_ssdInit	;wreg free
   623                           
   624                           ;main.c: 142:     timerInit();
   625  001350  ECFE  F00E         	call	_timerInit	;wreg free
   626                           
   627                           ;main.c: 143:     rgbInit();
   628  001354  ECD8  F00D         	call	_rgbInit	;wreg free
   629                           
   630                           ;main.c: 144:     pwmInit();
   631  001358  ECD9  F00E         	call	_pwmInit	;wreg free
   632  00135C                     
   633                           ;main.c: 145:     (*(volatile __near unsigned char*) 0xF95) = 0x00;
   634  00135C  0E00               	movlw	0
   635  00135E  6E95               	movwf	149,c	;volatile
   636  001360                     
   637                           ;main.c: 147:     lcdCommand(0x80);
   638  001360  0E80               	movlw	128
   639  001362  ECCA  F00E         	call	_lcdCommand
   640  001366                     
   641                           ;main.c: 148:     lcdString("Configure:");
   642  001366  0E68               	movlw	low STR_8
   643  001368  6E2D               	movwf	lcdString@msg^0,c
   644  00136A  0E06               	movlw	high STR_8
   645  00136C  6E2E               	movwf	(lcdString@msg+1)^0,c
   646  00136E  EC65  F00D         	call	_lcdString	;wreg free
   647  001372                     
   648                           ;main.c: 149:     lcdCommand(0xC0);
   649  001372  0EC0               	movlw	192
   650  001374  ECCA  F00E         	call	_lcdCommand
   651  001378                     
   652                           ;main.c: 150:     setPassword();
   653  001378  EC1F  F00B         	call	_setPassword	;wreg free
   654  00137C                     l2969:
   655                           
   656                           ;main.c: 153:         timerReset(5000);
   657  00137C  0E13               	movlw	19
   658  00137E  6E20               	movwf	(timerReset@tempo+1)^0,c
   659  001380  0E88               	movlw	136
   660  001382  6E1F               	movwf	timerReset@tempo^0,c
   661  001384  ECAA  F00E         	call	_timerReset	;wreg free
   662  001388                     
   663                           ;main.c: 154:         ssdUpdate();
   664  001388  EC68  F006         	call	_ssdUpdate	;wreg free
   665                           
   666                           ;main.c: 155:         switch (slot) {
   667  00138C  EFEA  F009         	goto	l2989
   668  001390                     l2973:
   669                           
   670                           ;main.c: 157:                 kpDebounce();
   671  001390  EC81  F008         	call	_kpDebounce	;wreg free
   672  001394                     
   673                           ;main.c: 158:                 slot = 1;
   674  001394  0E01               	movlw	1
   675  001396  6E3C               	movwf	main@slot^0,c
   676                           
   677                           ;main.c: 159:                 break;
   678  001398  EF03  F00A         	goto	l2991
   679  00139C                     l2977:
   680                           
   681                           ;main.c: 161:                 checkPassword();
   682  00139C  ECD3  F007         	call	_checkPassword	;wreg free
   683  0013A0                     
   684                           ;main.c: 162:                 slot = 2;
   685  0013A0  0E02               	movlw	2
   686  0013A2  6E3C               	movwf	main@slot^0,c
   687                           
   688                           ;main.c: 163:                 break;
   689  0013A4  EF03  F00A         	goto	l2991
   690  0013A8                     l2981:
   691                           
   692                           ;main.c: 165:                 turnOff(1);
   693  0013A8  0E00               	movlw	0
   694  0013AA  6E26               	movwf	(turnOff@led+1)^0,c
   695  0013AC  0E01               	movlw	1
   696  0013AE  6E25               	movwf	turnOff@led^0,c
   697  0013B0  EC49  F00C         	call	_turnOff	;wreg free
   698                           
   699                           ;main.c: 166:                 turnOff(2);
   700  0013B4  0E00               	movlw	0
   701  0013B6  6E26               	movwf	(turnOff@led+1)^0,c
   702  0013B8  0E02               	movlw	2
   703  0013BA  6E25               	movwf	turnOff@led^0,c
   704  0013BC  EC49  F00C         	call	_turnOff	;wreg free
   705                           
   706                           ;main.c: 167:                 turnOff(3);
   707  0013C0  0E00               	movlw	0
   708  0013C2  6E26               	movwf	(turnOff@led+1)^0,c
   709  0013C4  0E03               	movlw	3
   710  0013C6  6E25               	movwf	turnOff@led^0,c
   711  0013C8  EC49  F00C         	call	_turnOff	;wreg free
   712  0013CC                     l2983:
   713                           
   714                           ;main.c: 168:                 slot = 0;
   715  0013CC  0E00               	movlw	0
   716  0013CE  6E3C               	movwf	main@slot^0,c
   717                           
   718                           ;main.c: 169:                 break;
   719  0013D0  EF03  F00A         	goto	l2991
   720  0013D4                     l2989:
   721  0013D4  503C               	movf	main@slot^0,w,c
   722  0013D6  6E3A               	movwf	??_main^0,c
   723  0013D8  6A3B               	clrf	(??_main+1)^0,c
   724                           
   725                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   726                           ; Switch size 1, requested type "simple"
   727                           ; Number of cases is 1, Range of values is 0 to 0
   728                           ; switch strategies available:
   729                           ; Name         Instructions Cycles
   730                           ; simple_byte            4     3 (average)
   731                           ;	Chosen strategy is simple_byte
   732  0013DA  503B               	movf	(??_main+1)^0,w,c
   733  0013DC  0A00               	xorlw	0	; case 0
   734  0013DE  B4D8               	btfsc	status,2,c
   735  0013E0  EFF4  F009         	goto	l3025
   736  0013E4  EFE6  F009         	goto	l2983
   737  0013E8                     l3025:
   738                           
   739                           ; Switch size 1, requested type "simple"
   740                           ; Number of cases is 3, Range of values is 0 to 2
   741                           ; switch strategies available:
   742                           ; Name         Instructions Cycles
   743                           ; simple_byte           10     6 (average)
   744                           ;	Chosen strategy is simple_byte
   745  0013E8  503A               	movf	??_main^0,w,c
   746  0013EA  0A00               	xorlw	0	; case 0
   747  0013EC  B4D8               	btfsc	status,2,c
   748  0013EE  EFC8  F009         	goto	l2973
   749  0013F2  0A01               	xorlw	1	; case 1
   750  0013F4  B4D8               	btfsc	status,2,c
   751  0013F6  EFCE  F009         	goto	l2977
   752  0013FA  0A03               	xorlw	3	; case 2
   753  0013FC  B4D8               	btfsc	status,2,c
   754  0013FE  EFD4  F009         	goto	l2981
   755  001402  EFE6  F009         	goto	l2983
   756  001406                     l2991:
   757                           
   758                           ;main.c: 174:         timerWait();
   759  001406  ECF1  F00E         	call	_timerWait	;wreg free
   760  00140A                     
   761                           ;main.c: 175:         explosion();
   762  00140A  EC91  F005         	call	_explosion	;wreg free
   763                           
   764                           ;main.c: 177:     }
   765  00140E  EFBE  F009         	goto	l2969
   766  001412  EF00  F000         	goto	start
   767  001416                     __end_of_main:
   768                           	callstack 0
   769                           
   770 ;; *************** function _timerWait *****************
   771 ;; Defined at:
   772 ;;		line 31 in file "timer.c"
   773 ;; Parameters:    Size  Location     Type
   774 ;;		None
   775 ;; Auto vars:     Size  Location     Type
   776 ;;		None
   777 ;; Return value:  Size  Location     Type
   778 ;;                  1    wreg      void 
   779 ;; Registers used:
   780 ;;		None
   781 ;; Tracked objects:
   782 ;;		On entry : 0/0
   783 ;;		On exit  : 0/0
   784 ;;		Unchanged: 0/0
   785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   786 ;;      Params:         0       0       0       0       0       0       0
   787 ;;      Locals:         0       0       0       0       0       0       0
   788 ;;      Temps:          0       0       0       0       0       0       0
   789 ;;      Totals:         0       0       0       0       0       0       0
   790 ;;Total ram usage:        0 bytes
   791 ;; Hardware stack levels used: 1
   792 ;; This function calls:
   793 ;;		Nothing
   794 ;; This function is called by:
   795 ;;		_main
   796 ;; This function uses a non-reentrant model
   797 ;;
   798                           
   799                           	psect	text1
   800  001DE2                     __ptext1:
   801                           	callstack 0
   802  001DE2                     _timerWait:
   803                           	callstack 30
   804  001DE2                     l358:
   805  001DE2  A4F2               	btfss	242,2,c	;volatile
   806  001DE4  EFF6  F00E         	goto	u1131
   807  001DE8  EFF8  F00E         	goto	u1130
   808  001DEC                     u1131:
   809  001DEC  EFF1  F00E         	goto	l358
   810  001DF0                     u1130:
   811  001DF0  0012               	return		;funcret
   812  001DF2                     __end_of_timerWait:
   813                           	callstack 0
   814                           
   815 ;; *************** function _timerReset *****************
   816 ;; Defined at:
   817 ;;		line 37 in file "timer.c"
   818 ;; Parameters:    Size  Location     Type
   819 ;;  tempo           2    0[COMRAM] unsigned int 
   820 ;; Auto vars:     Size  Location     Type
   821 ;;  ciclos          2    2[COMRAM] unsigned int 
   822 ;; Return value:  Size  Location     Type
   823 ;;                  1    wreg      void 
   824 ;; Registers used:
   825 ;;		wreg, status,2, status,0
   826 ;; Tracked objects:
   827 ;;		On entry : 0/0
   828 ;;		On exit  : 0/0
   829 ;;		Unchanged: 0/0
   830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   831 ;;      Params:         2       0       0       0       0       0       0
   832 ;;      Locals:         2       0       0       0       0       0       0
   833 ;;      Temps:          0       0       0       0       0       0       0
   834 ;;      Totals:         4       0       0       0       0       0       0
   835 ;;Total ram usage:        4 bytes
   836 ;; Hardware stack levels used: 1
   837 ;; This function calls:
   838 ;;		Nothing
   839 ;; This function is called by:
   840 ;;		_main
   841 ;; This function uses a non-reentrant model
   842 ;;
   843                           
   844                           	psect	text2
   845  001D54                     __ptext2:
   846                           	callstack 0
   847  001D54                     _timerReset:
   848                           	callstack 30
   849  001D54                     
   850                           ;timer.c: 37: void timerReset(unsigned int tempo);timer.c: 38: {;timer.c: 39:     unsign
      +                          ed int ciclos;;timer.c: 42:     ciclos = tempo * 2;
   851  001D54  90D8               	bcf	status,0,c
   852  001D56  341F               	rlcf	timerReset@tempo^0,w,c
   853  001D58  6E21               	movwf	timerReset@ciclos^0,c
   854  001D5A  3420               	rlcf	(timerReset@tempo+1)^0,w,c
   855  001D5C  6E22               	movwf	(timerReset@ciclos+1)^0,c
   856  001D5E                     
   857                           ;timer.c: 44:  ciclos = 65535 - ciclos;
   858  001D5E  1E21               	comf	timerReset@ciclos^0,f,c
   859  001D60  1E22               	comf	(timerReset@ciclos+1)^0,f,c
   860  001D62                     
   861                           ;timer.c: 47:     ciclos -=50;
   862  001D62  0E32               	movlw	50
   863  001D64  5E21               	subwf	timerReset@ciclos^0,f,c
   864  001D66  0E00               	movlw	0
   865  001D68  5A22               	subwfb	(timerReset@ciclos+1)^0,f,c
   866  001D6A                     
   867                           ;timer.c: 49:  TMR0H = (ciclos >> 8);
   868  001D6A  5022               	movf	(timerReset@ciclos+1)^0,w,c
   869  001D6C  6ED7               	movwf	215,c	;volatile
   870  001D6E                     
   871                           ;timer.c: 50:  TMR0L = (ciclos & 0x00FF);
   872  001D6E  C021  FFD6         	movff	timerReset@ciclos,4054	;volatile
   873  001D72                     
   874                           ;timer.c: 52:  ((INTCON) &= ~(1<<(2)));
   875  001D72  94F2               	bcf	242,2,c	;volatile
   876  001D74  0012               	return		;funcret
   877  001D76                     __end_of_timerReset:
   878                           	callstack 0
   879                           
   880 ;; *************** function _timerInit *****************
   881 ;; Defined at:
   882 ;;		line 55 in file "timer.c"
   883 ;; Parameters:    Size  Location     Type
   884 ;;		None
   885 ;; Auto vars:     Size  Location     Type
   886 ;;		None
   887 ;; Return value:  Size  Location     Type
   888 ;;                  1    wreg      void 
   889 ;; Registers used:
   890 ;;		wreg, status,2, status,0
   891 ;; Tracked objects:
   892 ;;		On entry : 0/0
   893 ;;		On exit  : 0/0
   894 ;;		Unchanged: 0/0
   895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   896 ;;      Params:         0       0       0       0       0       0       0
   897 ;;      Locals:         0       0       0       0       0       0       0
   898 ;;      Temps:          0       0       0       0       0       0       0
   899 ;;      Totals:         0       0       0       0       0       0       0
   900 ;;Total ram usage:        0 bytes
   901 ;; Hardware stack levels used: 1
   902 ;; This function calls:
   903 ;;		Nothing
   904 ;; This function is called by:
   905 ;;		_main
   906 ;; This function uses a non-reentrant model
   907 ;;
   908                           
   909                           	psect	text3
   910  001DFC                     __ptext3:
   911                           	callstack 0
   912  001DFC                     _timerInit:
   913                           	callstack 30
   914  001DFC                     
   915                           ;timer.c: 57:  T0CON = 0b00001000;
   916  001DFC  0E08               	movlw	8
   917  001DFE  6ED5               	movwf	213,c	;volatile
   918  001E00                     
   919                           ;timer.c: 58:  ((T0CON) |= (1<<(7)));
   920  001E00  8ED5               	bsf	213,7,c	;volatile
   921  001E02  0012               	return		;funcret
   922  001E04                     __end_of_timerInit:
   923                           	callstack 0
   924                           
   925 ;; *************** function _ssdInit *****************
   926 ;; Defined at:
   927 ;;		line 94 in file "ssd.c"
   928 ;; Parameters:    Size  Location     Type
   929 ;;		None
   930 ;; Auto vars:     Size  Location     Type
   931 ;;		None
   932 ;; Return value:  Size  Location     Type
   933 ;;                  1    wreg      void 
   934 ;; Registers used:
   935 ;;		wreg, status,2, status,0, cstack
   936 ;; Tracked objects:
   937 ;;		On entry : 0/0
   938 ;;		On exit  : 0/0
   939 ;;		Unchanged: 0/0
   940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   941 ;;      Params:         0       0       0       0       0       0       0
   942 ;;      Locals:         0       0       0       0       0       0       0
   943 ;;      Temps:          0       0       0       0       0       0       0
   944 ;;      Totals:         0       0       0       0       0       0       0
   945 ;;Total ram usage:        0 bytes
   946 ;; Hardware stack levels used: 1
   947 ;; Hardware stack levels required when called: 2
   948 ;; This function calls:
   949 ;;		_pinMode
   950 ;;		_soInit
   951 ;; This function is called by:
   952 ;;		_main
   953 ;; This function uses a non-reentrant model
   954 ;;
   955                           
   956                           	psect	text4
   957  001A74                     __ptext4:
   958                           	callstack 0
   959  001A74                     _ssdInit:
   960                           	callstack 28
   961  001A74                     
   962                           ;ssd.c: 96:     pinMode(PIN_D0, 0);
   963  001A74  0E00               	movlw	0
   964  001A76  6E20               	movwf	(pinMode@pin+1)^0,c
   965  001A78  0E18               	movlw	24
   966  001A7A  6E1F               	movwf	pinMode@pin^0,c
   967  001A7C  0E00               	movlw	0
   968  001A7E  6E22               	movwf	(pinMode@type+1)^0,c
   969  001A80  0E00               	movlw	0
   970  001A82  6E21               	movwf	pinMode@type^0,c
   971  001A84  EC43  F003         	call	_pinMode	;wreg free
   972                           
   973                           ;ssd.c: 97:     pinMode(PIN_D1, 0);
   974  001A88  0E00               	movlw	0
   975  001A8A  6E20               	movwf	(pinMode@pin+1)^0,c
   976  001A8C  0E19               	movlw	25
   977  001A8E  6E1F               	movwf	pinMode@pin^0,c
   978  001A90  0E00               	movlw	0
   979  001A92  6E22               	movwf	(pinMode@type+1)^0,c
   980  001A94  0E00               	movlw	0
   981  001A96  6E21               	movwf	pinMode@type^0,c
   982  001A98  EC43  F003         	call	_pinMode	;wreg free
   983                           
   984                           ;ssd.c: 98:     pinMode(PIN_D2, 0);
   985  001A9C  0E00               	movlw	0
   986  001A9E  6E20               	movwf	(pinMode@pin+1)^0,c
   987  001AA0  0E1A               	movlw	26
   988  001AA2  6E1F               	movwf	pinMode@pin^0,c
   989  001AA4  0E00               	movlw	0
   990  001AA6  6E22               	movwf	(pinMode@type+1)^0,c
   991  001AA8  0E00               	movlw	0
   992  001AAA  6E21               	movwf	pinMode@type^0,c
   993  001AAC  EC43  F003         	call	_pinMode	;wreg free
   994                           
   995                           ;ssd.c: 99:     pinMode(PIN_D3, 0);
   996  001AB0  0E00               	movlw	0
   997  001AB2  6E20               	movwf	(pinMode@pin+1)^0,c
   998  001AB4  0E1B               	movlw	27
   999  001AB6  6E1F               	movwf	pinMode@pin^0,c
  1000  001AB8  0E00               	movlw	0
  1001  001ABA  6E22               	movwf	(pinMode@type+1)^0,c
  1002  001ABC  0E00               	movlw	0
  1003  001ABE  6E21               	movwf	pinMode@type^0,c
  1004  001AC0  EC43  F003         	call	_pinMode	;wreg free
  1005                           
  1006                           ;ssd.c: 102:     soInit();
  1007  001AC4  ECF7  F00D         	call	_soInit	;wreg free
  1008  001AC8  0012               	return		;funcret
  1009  001ACA                     __end_of_ssdInit:
  1010                           	callstack 0
  1011                           
  1012 ;; *************** function _setPassword *****************
  1013 ;; Defined at:
  1014 ;;		line 117 in file "main.c"
  1015 ;; Parameters:    Size  Location     Type
  1016 ;;		None
  1017 ;; Auto vars:     Size  Location     Type
  1018 ;;  key             2   14[COMRAM] unsigned int 
  1019 ;;  i               1   16[COMRAM] unsigned char 
  1020 ;; Return value:  Size  Location     Type
  1021 ;;                  1    wreg      void 
  1022 ;; Registers used:
  1023 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1024 ;; Tracked objects:
  1025 ;;		On entry : 0/0
  1026 ;;		On exit  : 0/0
  1027 ;;		Unchanged: 0/0
  1028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1029 ;;      Params:         0       0       0       0       0       0       0
  1030 ;;      Locals:         3       0       0       0       0       0       0
  1031 ;;      Temps:          0       0       0       0       0       0       0
  1032 ;;      Totals:         3       0       0       0       0       0       0
  1033 ;;Total ram usage:        3 bytes
  1034 ;; Hardware stack levels used: 1
  1035 ;; Hardware stack levels required when called: 5
  1036 ;; This function calls:
  1037 ;;		_atraso_ms
  1038 ;;		_kpDebounce
  1039 ;;		_kpRead
  1040 ;;		_kpReadKey
  1041 ;;		_lcdChar
  1042 ;;		_lcdCommand
  1043 ;; This function is called by:
  1044 ;;		_main
  1045 ;; This function uses a non-reentrant model
  1046 ;;
  1047                           
  1048                           	psect	text5
  1049  00163E                     __ptext5:
  1050                           	callstack 0
  1051  00163E                     _setPassword:
  1052                           	callstack 25
  1053  00163E                     
  1054                           ;main.c: 118:     char i = 0;
  1055  00163E  0E00               	movlw	0
  1056  001640  6E2F               	movwf	setPassword@i^0,c
  1057                           
  1058                           ;main.c: 119:     unsigned int key = 0;
  1059  001642  0E00               	movlw	0
  1060  001644  6E2E               	movwf	(setPassword@key+1)^0,c
  1061  001646  0E00               	movlw	0
  1062  001648  6E2D               	movwf	setPassword@key^0,c
  1063  00164A                     
  1064                           ;main.c: 120:     lcdCommand(0xC0);
  1065  00164A  0EC0               	movlw	192
  1066  00164C  ECCA  F00E         	call	_lcdCommand
  1067                           
  1068                           ;main.c: 121:     while (i < 8) {
  1069  001650  EF57  F00B         	goto	l2855
  1070  001654                     l2841:
  1071                           
  1072                           ;main.c: 122:         kpDebounce();
  1073  001654  EC81  F008         	call	_kpDebounce	;wreg free
  1074  001658                     
  1075                           ;main.c: 123:         if ((kpReadKey() != 0) && (kpRead() != key)) {
  1076  001658  EC69  F00B         	call	_kpReadKey	;wreg free
  1077  00165C  0900               	iorlw	0
  1078  00165E  B4D8               	btfsc	status,2,c
  1079  001660  EF34  F00B         	goto	u2561
  1080  001664  EF36  F00B         	goto	u2560
  1081  001668                     u2561:
  1082  001668  EF57  F00B         	goto	l2855
  1083  00166C                     u2560:
  1084  00166C  ECF9  F00E         	call	_kpRead	;wreg free
  1085  001670  502D               	movf	setPassword@key^0,w,c
  1086  001672  181F               	xorwf	?_kpRead^0,w,c
  1087  001674  E109               	bnz	u2570
  1088  001676  502E               	movf	(setPassword@key+1)^0,w,c
  1089  001678  1820               	xorwf	(?_kpRead+1)^0,w,c
  1090  00167A  B4D8               	btfsc	status,2,c
  1091  00167C  EF42  F00B         	goto	u2571
  1092  001680  EF44  F00B         	goto	u2570
  1093  001684                     u2571:
  1094  001684  EF57  F00B         	goto	l2855
  1095  001688                     u2570:
  1096  001688                     
  1097                           ;main.c: 124:             key = kpRead();
  1098  001688  ECF9  F00E         	call	_kpRead	;wreg free
  1099  00168C  C01F  F02D         	movff	?_kpRead,setPassword@key
  1100  001690  C020  F02E         	movff	?_kpRead+1,setPassword@key+1
  1101  001694                     
  1102                           ;main.c: 125:             password[i] = kpReadKey();
  1103  001694  0E09               	movlw	low _password
  1104  001696  242F               	addwf	setPassword@i^0,w,c
  1105  001698  6ED9               	movwf	fsr2l,c
  1106  00169A  6ADA               	clrf	fsr2h,c
  1107  00169C  0E00               	movlw	high _password
  1108  00169E  22DA               	addwfc	fsr2h,f,c
  1109  0016A0  EC69  F00B         	call	_kpReadKey	;wreg free
  1110  0016A4  6EDF               	movwf	indf2,c
  1111  0016A6                     
  1112                           ;main.c: 126:             lcdChar('*');
  1113  0016A6  0E2A               	movlw	42
  1114  0016A8  ECBB  F00E         	call	_lcdChar
  1115  0016AC                     
  1116                           ;main.c: 127:             i++;
  1117  0016AC  2A2F               	incf	setPassword@i^0,f,c
  1118  0016AE                     l2855:
  1119                           
  1120                           ;main.c: 121:     while (i < 8) {
  1121  0016AE  0E07               	movlw	7
  1122  0016B0  642F               	cpfsgt	setPassword@i^0,c
  1123  0016B2  EF5D  F00B         	goto	u2581
  1124  0016B6  EF5F  F00B         	goto	u2580
  1125  0016BA                     u2581:
  1126  0016BA  EF2A  F00B         	goto	l2841
  1127  0016BE                     u2580:
  1128  0016BE                     
  1129                           ;main.c: 130:     atraso_ms(1000);
  1130  0016BE  0E03               	movlw	3
  1131  0016C0  6E20               	movwf	(atraso_ms@num+1)^0,c
  1132  0016C2  0EE8               	movlw	232
  1133  0016C4  6E1F               	movwf	atraso_ms@num^0,c
  1134  0016C6  ECAF  F00C         	call	_atraso_ms	;wreg free
  1135                           
  1136                           ;main.c: 131:     lcdCommand(0x01);
  1137  0016CA  0E01               	movlw	1
  1138  0016CC  ECCA  F00E         	call	_lcdCommand
  1139  0016D0  0012               	return		;funcret
  1140  0016D2                     __end_of_setPassword:
  1141                           	callstack 0
  1142                           
  1143 ;; *************** function _rgbInit *****************
  1144 ;; Defined at:
  1145 ;;		line 45 in file "rgb.c"
  1146 ;; Parameters:    Size  Location     Type
  1147 ;;		None
  1148 ;; Auto vars:     Size  Location     Type
  1149 ;;		None
  1150 ;; Return value:  Size  Location     Type
  1151 ;;                  1    wreg      void 
  1152 ;; Registers used:
  1153 ;;		wreg, status,2, status,0, cstack
  1154 ;; Tracked objects:
  1155 ;;		On entry : 0/0
  1156 ;;		On exit  : 0/0
  1157 ;;		Unchanged: 0/0
  1158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1159 ;;      Params:         0       0       0       0       0       0       0
  1160 ;;      Locals:         0       0       0       0       0       0       0
  1161 ;;      Temps:          0       0       0       0       0       0       0
  1162 ;;      Totals:         0       0       0       0       0       0       0
  1163 ;;Total ram usage:        0 bytes
  1164 ;; Hardware stack levels used: 1
  1165 ;; Hardware stack levels required when called: 1
  1166 ;; This function calls:
  1167 ;;		_pinMode
  1168 ;; This function is called by:
  1169 ;;		_main
  1170 ;; This function uses a non-reentrant model
  1171 ;;
  1172                           
  1173                           	psect	text6
  1174  001BB0                     __ptext6:
  1175                           	callstack 0
  1176  001BB0                     _rgbInit:
  1177                           	callstack 29
  1178  001BB0                     
  1179                           ;rgb.c: 46:  pinMode(PIN_D0, 0);
  1180  001BB0  0E00               	movlw	0
  1181  001BB2  6E20               	movwf	(pinMode@pin+1)^0,c
  1182  001BB4  0E18               	movlw	24
  1183  001BB6  6E1F               	movwf	pinMode@pin^0,c
  1184  001BB8  0E00               	movlw	0
  1185  001BBA  6E22               	movwf	(pinMode@type+1)^0,c
  1186  001BBC  0E00               	movlw	0
  1187  001BBE  6E21               	movwf	pinMode@type^0,c
  1188  001BC0  EC43  F003         	call	_pinMode	;wreg free
  1189                           
  1190                           ;rgb.c: 47:  pinMode(PIN_D1, 0);
  1191  001BC4  0E00               	movlw	0
  1192  001BC6  6E20               	movwf	(pinMode@pin+1)^0,c
  1193  001BC8  0E19               	movlw	25
  1194  001BCA  6E1F               	movwf	pinMode@pin^0,c
  1195  001BCC  0E00               	movlw	0
  1196  001BCE  6E22               	movwf	(pinMode@type+1)^0,c
  1197  001BD0  0E00               	movlw	0
  1198  001BD2  6E21               	movwf	pinMode@type^0,c
  1199  001BD4  EC43  F003         	call	_pinMode	;wreg free
  1200                           
  1201                           ;rgb.c: 48:  pinMode(PIN_D2, 0);
  1202  001BD8  0E00               	movlw	0
  1203  001BDA  6E20               	movwf	(pinMode@pin+1)^0,c
  1204  001BDC  0E1A               	movlw	26
  1205  001BDE  6E1F               	movwf	pinMode@pin^0,c
  1206  001BE0  0E00               	movlw	0
  1207  001BE2  6E22               	movwf	(pinMode@type+1)^0,c
  1208  001BE4  0E00               	movlw	0
  1209  001BE6  6E21               	movwf	pinMode@type^0,c
  1210  001BE8  EC43  F003         	call	_pinMode	;wreg free
  1211  001BEC  0012               	return		;funcret
  1212  001BEE                     __end_of_rgbInit:
  1213                           	callstack 0
  1214                           
  1215 ;; *************** function _pwmInit *****************
  1216 ;; Defined at:
  1217 ;;		line 51 in file "pwm.c"
  1218 ;; Parameters:    Size  Location     Type
  1219 ;;		None
  1220 ;; Auto vars:     Size  Location     Type
  1221 ;;		None
  1222 ;; Return value:  Size  Location     Type
  1223 ;;                  1    wreg      void 
  1224 ;; Registers used:
  1225 ;;		wreg, status,2, status,0, cstack
  1226 ;; Tracked objects:
  1227 ;;		On entry : 0/0
  1228 ;;		On exit  : 0/0
  1229 ;;		Unchanged: 0/0
  1230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1231 ;;      Params:         0       0       0       0       0       0       0
  1232 ;;      Locals:         0       0       0       0       0       0       0
  1233 ;;      Temps:          0       0       0       0       0       0       0
  1234 ;;      Totals:         0       0       0       0       0       0       0
  1235 ;;Total ram usage:        0 bytes
  1236 ;; Hardware stack levels used: 1
  1237 ;; Hardware stack levels required when called: 2
  1238 ;; This function calls:
  1239 ;;		_pwmFrequency
  1240 ;; This function is called by:
  1241 ;;		_main
  1242 ;; This function uses a non-reentrant model
  1243 ;;
  1244                           
  1245                           	psect	text7
  1246  001DB2                     __ptext7:
  1247                           	callstack 0
  1248  001DB2                     _pwmInit:
  1249                           	callstack 28
  1250  001DB2                     
  1251                           ;pwm.c: 53:  ((TRISC) &= ~(1<<(1)));
  1252  001DB2  9294               	bcf	148,1,c	;volatile
  1253  001DB4                     
  1254                           ;pwm.c: 55:  T2CON |= 0b00000011;
  1255  001DB4  0E03               	movlw	3
  1256  001DB6  12CA               	iorwf	202,f,c	;volatile
  1257  001DB8                     
  1258                           ;pwm.c: 56:  ((T2CON) |= (1<<(2)));
  1259  001DB8  84CA               	bsf	202,2,c	;volatile
  1260  001DBA                     
  1261                           ;pwm.c: 58:  CCP2CON = 0b00001100;
  1262  001DBA  0E0C               	movlw	12
  1263  001DBC  6EBA               	movwf	186,c	;volatile
  1264  001DBE                     
  1265                           ;pwm.c: 60:     pwmFrequency(100);
  1266  001DBE  0E00               	movlw	0
  1267  001DC0  6E2E               	movwf	(pwmFrequency@freq+1)^0,c
  1268  001DC2  0E64               	movlw	100
  1269  001DC4  6E2D               	movwf	pwmFrequency@freq^0,c
  1270  001DC6  EC97  F00E         	call	_pwmFrequency	;wreg free
  1271  001DCA  0012               	return		;funcret
  1272  001DCC                     __end_of_pwmInit:
  1273                           	callstack 0
  1274                           
  1275 ;; *************** function _lcdInit *****************
  1276 ;; Defined at:
  1277 ;;		line 72 in file "lcd.c"
  1278 ;; Parameters:    Size  Location     Type
  1279 ;;		None
  1280 ;; Auto vars:     Size  Location     Type
  1281 ;;		None
  1282 ;; Return value:  Size  Location     Type
  1283 ;;                  1    wreg      void 
  1284 ;; Registers used:
  1285 ;;		wreg, status,2, status,0, cstack
  1286 ;; Tracked objects:
  1287 ;;		On entry : 0/0
  1288 ;;		On exit  : 0/0
  1289 ;;		Unchanged: 0/0
  1290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1291 ;;      Params:         0       0       0       0       0       0       0
  1292 ;;      Locals:         0       0       0       0       0       0       0
  1293 ;;      Temps:          0       0       0       0       0       0       0
  1294 ;;      Totals:         0       0       0       0       0       0       0
  1295 ;;Total ram usage:        0 bytes
  1296 ;; Hardware stack levels used: 1
  1297 ;; Hardware stack levels required when called: 5
  1298 ;; This function calls:
  1299 ;;		_delayMicro
  1300 ;;		_delayMili
  1301 ;;		_lcdCommand
  1302 ;;		_pinMode
  1303 ;;		_pushNibble
  1304 ;;		_soInit
  1305 ;; This function is called by:
  1306 ;;		_main
  1307 ;; This function uses a non-reentrant model
  1308 ;;
  1309                           
  1310                           	psect	text8
  1311  0014DA                     __ptext8:
  1312                           	callstack 0
  1313  0014DA                     _lcdInit:
  1314                           	callstack 25
  1315  0014DA                     
  1316                           ;lcd.c: 73:  pinMode(PIN_D4, 0);
  1317  0014DA  0E00               	movlw	0
  1318  0014DC  6E20               	movwf	(pinMode@pin+1)^0,c
  1319  0014DE  0E1C               	movlw	28
  1320  0014E0  6E1F               	movwf	pinMode@pin^0,c
  1321  0014E2  0E00               	movlw	0
  1322  0014E4  6E22               	movwf	(pinMode@type+1)^0,c
  1323  0014E6  0E00               	movlw	0
  1324  0014E8  6E21               	movwf	pinMode@type^0,c
  1325  0014EA  EC43  F003         	call	_pinMode	;wreg free
  1326                           
  1327                           ;lcd.c: 74:  pinMode(PIN_D5, 0);
  1328  0014EE  0E00               	movlw	0
  1329  0014F0  6E20               	movwf	(pinMode@pin+1)^0,c
  1330  0014F2  0E1D               	movlw	29
  1331  0014F4  6E1F               	movwf	pinMode@pin^0,c
  1332  0014F6  0E00               	movlw	0
  1333  0014F8  6E22               	movwf	(pinMode@type+1)^0,c
  1334  0014FA  0E00               	movlw	0
  1335  0014FC  6E21               	movwf	pinMode@type^0,c
  1336  0014FE  EC43  F003         	call	_pinMode	;wreg free
  1337                           
  1338                           ;lcd.c: 75:  soInit();
  1339  001502  ECF7  F00D         	call	_soInit	;wreg free
  1340                           
  1341                           ;lcd.c: 76:  delayMili(15);
  1342  001506  0E00               	movlw	0
  1343  001508  6E20               	movwf	(delayMili@a+1)^0,c
  1344  00150A  0E0F               	movlw	15
  1345  00150C  6E1F               	movwf	delayMili@a^0,c
  1346  00150E  EC2F  F00E         	call	_delayMili	;wreg free
  1347                           
  1348                           ;lcd.c: 78:  pushNibble(0x03, 0);
  1349  001512  0E00               	movlw	0
  1350  001514  6E29               	movwf	(pushNibble@rs+1)^0,c
  1351  001516  0E00               	movlw	0
  1352  001518  6E28               	movwf	pushNibble@rs^0,c
  1353  00151A  0E03               	movlw	3
  1354  00151C  EC71  F00E         	call	_pushNibble
  1355                           
  1356                           ;lcd.c: 79:  delayMili(5);
  1357  001520  0E00               	movlw	0
  1358  001522  6E20               	movwf	(delayMili@a+1)^0,c
  1359  001524  0E05               	movlw	5
  1360  001526  6E1F               	movwf	delayMili@a^0,c
  1361  001528  EC2F  F00E         	call	_delayMili	;wreg free
  1362                           
  1363                           ;lcd.c: 80:  pushNibble(0x03, 0);
  1364  00152C  0E00               	movlw	0
  1365  00152E  6E29               	movwf	(pushNibble@rs+1)^0,c
  1366  001530  0E00               	movlw	0
  1367  001532  6E28               	movwf	pushNibble@rs^0,c
  1368  001534  0E03               	movlw	3
  1369  001536  EC71  F00E         	call	_pushNibble
  1370  00153A                     
  1371                           ;lcd.c: 81:  delayMicro(160);
  1372  00153A  0E00               	movlw	0
  1373  00153C  6E20               	movwf	(delayMicro@a+1)^0,c
  1374  00153E  0EA0               	movlw	160
  1375  001540  6E1F               	movwf	delayMicro@a^0,c
  1376  001542  EC02  F00F         	call	_delayMicro	;wreg free
  1377  001546                     
  1378                           ;lcd.c: 82:  pushNibble(0x03, 0);
  1379  001546  0E00               	movlw	0
  1380  001548  6E29               	movwf	(pushNibble@rs+1)^0,c
  1381  00154A  0E00               	movlw	0
  1382  00154C  6E28               	movwf	pushNibble@rs^0,c
  1383  00154E  0E03               	movlw	3
  1384  001550  EC71  F00E         	call	_pushNibble
  1385                           
  1386                           ;lcd.c: 83:  delayMicro(160);
  1387  001554  0E00               	movlw	0
  1388  001556  6E20               	movwf	(delayMicro@a+1)^0,c
  1389  001558  0EA0               	movlw	160
  1390  00155A  6E1F               	movwf	delayMicro@a^0,c
  1391  00155C  EC02  F00F         	call	_delayMicro	;wreg free
  1392  001560                     
  1393                           ;lcd.c: 85:  pushNibble(0x02, 0);
  1394  001560  0E00               	movlw	0
  1395  001562  6E29               	movwf	(pushNibble@rs+1)^0,c
  1396  001564  0E00               	movlw	0
  1397  001566  6E28               	movwf	pushNibble@rs^0,c
  1398  001568  0E02               	movlw	2
  1399  00156A  EC71  F00E         	call	_pushNibble
  1400  00156E                     
  1401                           ;lcd.c: 86:  delayMili(10);
  1402  00156E  0E00               	movlw	0
  1403  001570  6E20               	movwf	(delayMili@a+1)^0,c
  1404  001572  0E0A               	movlw	10
  1405  001574  6E1F               	movwf	delayMili@a^0,c
  1406  001576  EC2F  F00E         	call	_delayMili	;wreg free
  1407  00157A                     
  1408                           ;lcd.c: 88:  lcdCommand(0x28);
  1409  00157A  0E28               	movlw	40
  1410  00157C  ECCA  F00E         	call	_lcdCommand
  1411  001580                     
  1412                           ;lcd.c: 89:  lcdCommand(0x08 + 0x04);
  1413  001580  0E0C               	movlw	12
  1414  001582  ECCA  F00E         	call	_lcdCommand
  1415  001586                     
  1416                           ;lcd.c: 90:  lcdCommand(0x01);
  1417  001586  0E01               	movlw	1
  1418  001588  ECCA  F00E         	call	_lcdCommand
  1419  00158C  0012               	return		;funcret
  1420  00158E                     __end_of_lcdInit:
  1421                           	callstack 0
  1422                           
  1423 ;; *************** function _pushNibble *****************
  1424 ;; Defined at:
  1425 ;;		line 25 in file "lcd.c"
  1426 ;; Parameters:    Size  Location     Type
  1427 ;;  value           1    wreg     unsigned char 
  1428 ;;  rs              2    9[COMRAM] int 
  1429 ;; Auto vars:     Size  Location     Type
  1430 ;;  value           1   11[COMRAM] unsigned char 
  1431 ;; Return value:  Size  Location     Type
  1432 ;;                  1    wreg      void 
  1433 ;; Registers used:
  1434 ;;		wreg, status,2, status,0, cstack
  1435 ;; Tracked objects:
  1436 ;;		On entry : 0/0
  1437 ;;		On exit  : 0/0
  1438 ;;		Unchanged: 0/0
  1439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1440 ;;      Params:         2       0       0       0       0       0       0
  1441 ;;      Locals:         1       0       0       0       0       0       0
  1442 ;;      Temps:          0       0       0       0       0       0       0
  1443 ;;      Totals:         3       0       0       0       0       0       0
  1444 ;;Total ram usage:        3 bytes
  1445 ;; Hardware stack levels used: 1
  1446 ;; Hardware stack levels required when called: 3
  1447 ;; This function calls:
  1448 ;;		_digitalWrite
  1449 ;;		_pulseEnablePin
  1450 ;;		_soWrite
  1451 ;; This function is called by:
  1452 ;;		_lcdInit
  1453 ;; This function uses a non-reentrant model
  1454 ;;
  1455                           
  1456                           	psect	text9
  1457  001CE2                     __ptext9:
  1458                           	callstack 0
  1459  001CE2                     _pushNibble:
  1460                           	callstack 26
  1461                           
  1462                           ;incstack = 0
  1463                           ;pushNibble@value stored from wreg
  1464  001CE2  6E2A               	movwf	pushNibble@value^0,c
  1465  001CE4                     
  1466                           ;lcd.c: 26:  soWrite(value);
  1467  001CE4  C02A  F025         	movff	pushNibble@value,soWrite@value
  1468  001CE8  6A26               	clrf	(soWrite@value+1)^0,c
  1469  001CEA  EC90  F00D         	call	_soWrite	;wreg free
  1470                           
  1471                           ;lcd.c: 27:  digitalWrite(PIN_D5, rs);
  1472  001CEE  0E00               	movlw	0
  1473  001CF0  6E20               	movwf	(digitalWrite@pin+1)^0,c
  1474  001CF2  0E1D               	movlw	29
  1475  001CF4  6E1F               	movwf	digitalWrite@pin^0,c
  1476  001CF6  C028  F021         	movff	pushNibble@rs,digitalWrite@value
  1477  001CFA  C029  F022         	movff	pushNibble@rs+1,digitalWrite@value+1
  1478  001CFE  EC6A  F004         	call	_digitalWrite	;wreg free
  1479                           
  1480                           ;lcd.c: 28:  pulseEnablePin();
  1481  001D02  ECB7  F00D         	call	_pulseEnablePin	;wreg free
  1482  001D06  0012               	return		;funcret
  1483  001D08                     __end_of_pushNibble:
  1484                           	callstack 0
  1485                           
  1486 ;; *************** function _kpInit *****************
  1487 ;; Defined at:
  1488 ;;		line 54 in file "keypad.c"
  1489 ;; Parameters:    Size  Location     Type
  1490 ;;		None
  1491 ;; Auto vars:     Size  Location     Type
  1492 ;;		None
  1493 ;; Return value:  Size  Location     Type
  1494 ;;                  1    wreg      void 
  1495 ;; Registers used:
  1496 ;;		wreg, status,2, status,0, cstack
  1497 ;; Tracked objects:
  1498 ;;		On entry : 0/0
  1499 ;;		On exit  : 0/0
  1500 ;;		Unchanged: 0/0
  1501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1502 ;;      Params:         0       0       0       0       0       0       0
  1503 ;;      Locals:         0       0       0       0       0       0       0
  1504 ;;      Temps:          0       0       0       0       0       0       0
  1505 ;;      Totals:         0       0       0       0       0       0       0
  1506 ;;Total ram usage:        0 bytes
  1507 ;; Hardware stack levels used: 1
  1508 ;; Hardware stack levels required when called: 2
  1509 ;; This function calls:
  1510 ;;		_pinMode
  1511 ;;		_soInit
  1512 ;; This function is called by:
  1513 ;;		_main
  1514 ;; This function uses a non-reentrant model
  1515 ;;
  1516                           
  1517                           	psect	text10
  1518  001C2C                     __ptext10:
  1519                           	callstack 0
  1520  001C2C                     _kpInit:
  1521                           	callstack 28
  1522  001C2C                     
  1523                           ;keypad.c: 55:   soInit();
  1524  001C2C  ECF7  F00D         	call	_soInit	;wreg free
  1525                           
  1526                           ;keypad.c: 56:   pinMode(PIN_B2, 1);
  1527  001C30  0E00               	movlw	0
  1528  001C32  6E20               	movwf	(pinMode@pin+1)^0,c
  1529  001C34  0E0A               	movlw	10
  1530  001C36  6E1F               	movwf	pinMode@pin^0,c
  1531  001C38  0E00               	movlw	0
  1532  001C3A  6E22               	movwf	(pinMode@type+1)^0,c
  1533  001C3C  0E01               	movlw	1
  1534  001C3E  6E21               	movwf	pinMode@type^0,c
  1535  001C40  EC43  F003         	call	_pinMode	;wreg free
  1536                           
  1537                           ;keypad.c: 57:   pinMode(PIN_B1, 1);
  1538  001C44  0E00               	movlw	0
  1539  001C46  6E20               	movwf	(pinMode@pin+1)^0,c
  1540  001C48  0E09               	movlw	9
  1541  001C4A  6E1F               	movwf	pinMode@pin^0,c
  1542  001C4C  0E00               	movlw	0
  1543  001C4E  6E22               	movwf	(pinMode@type+1)^0,c
  1544  001C50  0E01               	movlw	1
  1545  001C52  6E21               	movwf	pinMode@type^0,c
  1546  001C54  EC43  F003         	call	_pinMode	;wreg free
  1547  001C58                     
  1548                           ;keypad.c: 58:   ADCON1 = 0b00001100;
  1549  001C58  0E0C               	movlw	12
  1550  001C5A  6EC1               	movwf	193,c	;volatile
  1551  001C5C  0012               	return		;funcret
  1552  001C5E                     __end_of_kpInit:
  1553                           	callstack 0
  1554                           
  1555 ;; *************** function _soInit *****************
  1556 ;; Defined at:
  1557 ;;		line 3 in file "so.c"
  1558 ;; Parameters:    Size  Location     Type
  1559 ;;		None
  1560 ;; Auto vars:     Size  Location     Type
  1561 ;;		None
  1562 ;; Return value:  Size  Location     Type
  1563 ;;                  1    wreg      void 
  1564 ;; Registers used:
  1565 ;;		wreg, status,2, status,0, cstack
  1566 ;; Tracked objects:
  1567 ;;		On entry : 0/0
  1568 ;;		On exit  : 0/0
  1569 ;;		Unchanged: 0/0
  1570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1571 ;;      Params:         0       0       0       0       0       0       0
  1572 ;;      Locals:         0       0       0       0       0       0       0
  1573 ;;      Temps:          0       0       0       0       0       0       0
  1574 ;;      Totals:         0       0       0       0       0       0       0
  1575 ;;Total ram usage:        0 bytes
  1576 ;; Hardware stack levels used: 1
  1577 ;; Hardware stack levels required when called: 1
  1578 ;; This function calls:
  1579 ;;		_pinMode
  1580 ;; This function is called by:
  1581 ;;		_kpInit
  1582 ;;		_lcdInit
  1583 ;;		_ssdInit
  1584 ;; This function uses a non-reentrant model
  1585 ;;
  1586                           
  1587                           	psect	text11
  1588  001BEE                     __ptext11:
  1589                           	callstack 0
  1590  001BEE                     _soInit:
  1591                           	callstack 28
  1592  001BEE                     
  1593                           ;so.c: 4:  pinMode(PIN_D7, 0);
  1594  001BEE  0E00               	movlw	0
  1595  001BF0  6E20               	movwf	(pinMode@pin+1)^0,c
  1596  001BF2  0E1F               	movlw	31
  1597  001BF4  6E1F               	movwf	pinMode@pin^0,c
  1598  001BF6  0E00               	movlw	0
  1599  001BF8  6E22               	movwf	(pinMode@type+1)^0,c
  1600  001BFA  0E00               	movlw	0
  1601  001BFC  6E21               	movwf	pinMode@type^0,c
  1602  001BFE  EC43  F003         	call	_pinMode	;wreg free
  1603                           
  1604                           ;so.c: 5:  pinMode(PIN_B0, 0);
  1605  001C02  0E00               	movlw	0
  1606  001C04  6E20               	movwf	(pinMode@pin+1)^0,c
  1607  001C06  0E08               	movlw	8
  1608  001C08  6E1F               	movwf	pinMode@pin^0,c
  1609  001C0A  0E00               	movlw	0
  1610  001C0C  6E22               	movwf	(pinMode@type+1)^0,c
  1611  001C0E  0E00               	movlw	0
  1612  001C10  6E21               	movwf	pinMode@type^0,c
  1613  001C12  EC43  F003         	call	_pinMode	;wreg free
  1614                           
  1615                           ;so.c: 6:  pinMode(PIN_D6, 0);
  1616  001C16  0E00               	movlw	0
  1617  001C18  6E20               	movwf	(pinMode@pin+1)^0,c
  1618  001C1A  0E1E               	movlw	30
  1619  001C1C  6E1F               	movwf	pinMode@pin^0,c
  1620  001C1E  0E00               	movlw	0
  1621  001C20  6E22               	movwf	(pinMode@type+1)^0,c
  1622  001C22  0E00               	movlw	0
  1623  001C24  6E21               	movwf	pinMode@type^0,c
  1624  001C26  EC43  F003         	call	_pinMode	;wreg free
  1625  001C2A  0012               	return		;funcret
  1626  001C2C                     __end_of_soInit:
  1627                           	callstack 0
  1628                           
  1629 ;; *************** function _pinMode *****************
  1630 ;; Defined at:
  1631 ;;		line 54 in file "io.c"
  1632 ;; Parameters:    Size  Location     Type
  1633 ;;  pin             2    0[COMRAM] int 
  1634 ;;  type            2    2[COMRAM] int 
  1635 ;; Auto vars:     Size  Location     Type
  1636 ;;		None
  1637 ;; Return value:  Size  Location     Type
  1638 ;;                  1    wreg      void 
  1639 ;; Registers used:
  1640 ;;		wreg, status,2, status,0
  1641 ;; Tracked objects:
  1642 ;;		On entry : 0/0
  1643 ;;		On exit  : 0/0
  1644 ;;		Unchanged: 0/0
  1645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1646 ;;      Params:         4       0       0       0       0       0       0
  1647 ;;      Locals:         0       0       0       0       0       0       0
  1648 ;;      Temps:          2       0       0       0       0       0       0
  1649 ;;      Totals:         6       0       0       0       0       0       0
  1650 ;;Total ram usage:        6 bytes
  1651 ;; Hardware stack levels used: 1
  1652 ;; This function calls:
  1653 ;;		Nothing
  1654 ;; This function is called by:
  1655 ;;		_kpInit
  1656 ;;		_lcdInit
  1657 ;;		_soInit
  1658 ;;		_ssdInit
  1659 ;;		_rgbInit
  1660 ;;		_i2cInit
  1661 ;;		_read_SCL
  1662 ;;		_read_SDA
  1663 ;;		_clear_SCL
  1664 ;;		_clear_SDA
  1665 ;; This function uses a non-reentrant model
  1666 ;;
  1667                           
  1668                           	psect	text12
  1669  000686                     __ptext12:
  1670                           	callstack 0
  1671  000686                     _pinMode:
  1672                           	callstack 28
  1673  000686                     
  1674                           ;io.c: 56:     if(pin <8){
  1675  000686  BE20               	btfsc	(pinMode@pin+1)^0,7,c
  1676  000688  EF51  F003         	goto	u1600
  1677  00068C  5020               	movf	(pinMode@pin+1)^0,w,c
  1678  00068E  E107               	bnz	u1601
  1679  000690  0E08               	movlw	8
  1680  000692  5C1F               	subwf	pinMode@pin^0,w,c
  1681  000694  B0D8               	btfsc	status,0,c
  1682  000696  EF4F  F003         	goto	u1601
  1683  00069A  EF51  F003         	goto	u1600
  1684  00069E                     u1601:
  1685  00069E  EF7B  F003         	goto	l2193
  1686  0006A2                     u1600:
  1687  0006A2                     
  1688                           ;io.c: 57:         if (type){ ((TRISA) |= (1<<(pin)));}
  1689  0006A2  5021               	movf	pinMode@type^0,w,c
  1690  0006A4  1022               	iorwf	(pinMode@type+1)^0,w,c
  1691  0006A6  B4D8               	btfsc	status,2,c
  1692  0006A8  EF58  F003         	goto	u1611
  1693  0006AC  EF5A  F003         	goto	u1610
  1694  0006B0                     u1611:
  1695  0006B0  EF6A  F003         	goto	l2191
  1696  0006B4                     u1610:
  1697  0006B4  C01F  F023         	movff	pinMode@pin,??_pinMode
  1698  0006B8  0E01               	movlw	1
  1699  0006BA  6E24               	movwf	(??_pinMode+1)^0,c
  1700  0006BC  2A23               	incf	??_pinMode^0,f,c
  1701  0006BE  EF63  F003         	goto	u1624
  1702  0006C2                     u1625:
  1703  0006C2  90D8               	bcf	status,0,c
  1704  0006C4  3624               	rlcf	(??_pinMode+1)^0,f,c
  1705  0006C6                     u1624:
  1706  0006C6  2E23               	decfsz	??_pinMode^0,f,c
  1707  0006C8  EF61  F003         	goto	u1625
  1708  0006CC  5024               	movf	(??_pinMode+1)^0,w,c
  1709  0006CE  1292               	iorwf	146,f,c	;volatile
  1710  0006D0  EF69  F004         	goto	l173
  1711  0006D4                     l2191:
  1712  0006D4  C01F  F023         	movff	pinMode@pin,??_pinMode
  1713  0006D8  0E01               	movlw	1
  1714  0006DA  6E24               	movwf	(??_pinMode+1)^0,c
  1715  0006DC  2A23               	incf	??_pinMode^0,f,c
  1716  0006DE  EF73  F003         	goto	u1634
  1717  0006E2                     u1635:
  1718  0006E2  90D8               	bcf	status,0,c
  1719  0006E4  3624               	rlcf	(??_pinMode+1)^0,f,c
  1720  0006E6                     u1634:
  1721  0006E6  2E23               	decfsz	??_pinMode^0,f,c
  1722  0006E8  EF71  F003         	goto	u1635
  1723  0006EC  5024               	movf	(??_pinMode+1)^0,w,c
  1724  0006EE  0AFF               	xorlw	255
  1725  0006F0  1692               	andwf	146,f,c	;volatile
  1726  0006F2  EF69  F004         	goto	l173
  1727  0006F6                     l2193:
  1728  0006F6  BE20               	btfsc	(pinMode@pin+1)^0,7,c
  1729  0006F8  EF89  F003         	goto	u1640
  1730  0006FC  5020               	movf	(pinMode@pin+1)^0,w,c
  1731  0006FE  E107               	bnz	u1641
  1732  000700  0E10               	movlw	16
  1733  000702  5C1F               	subwf	pinMode@pin^0,w,c
  1734  000704  B0D8               	btfsc	status,0,c
  1735  000706  EF87  F003         	goto	u1641
  1736  00070A  EF89  F003         	goto	u1640
  1737  00070E                     u1641:
  1738  00070E  EFB7  F003         	goto	l2201
  1739  000712                     u1640:
  1740  000712                     
  1741                           ;io.c: 60:         if (type){ ((TRISB) |= (1<<(pin-8)));}
  1742  000712  5021               	movf	pinMode@type^0,w,c
  1743  000714  1022               	iorwf	(pinMode@type+1)^0,w,c
  1744  000716  B4D8               	btfsc	status,2,c
  1745  000718  EF90  F003         	goto	u1651
  1746  00071C  EF92  F003         	goto	u1650
  1747  000720                     u1651:
  1748  000720  EFA4  F003         	goto	l2199
  1749  000724                     u1650:
  1750  000724  C01F  F023         	movff	pinMode@pin,??_pinMode
  1751  000728  0EF8               	movlw	-8
  1752  00072A  2623               	addwf	??_pinMode^0,f,c
  1753  00072C  0E01               	movlw	1
  1754  00072E  6E24               	movwf	(??_pinMode+1)^0,c
  1755  000730  2A23               	incf	??_pinMode^0,f,c
  1756  000732  EF9D  F003         	goto	u1664
  1757  000736                     u1665:
  1758  000736  90D8               	bcf	status,0,c
  1759  000738  3624               	rlcf	(??_pinMode+1)^0,f,c
  1760  00073A                     u1664:
  1761  00073A  2E23               	decfsz	??_pinMode^0,f,c
  1762  00073C  EF9B  F003         	goto	u1665
  1763  000740  5024               	movf	(??_pinMode+1)^0,w,c
  1764  000742  1293               	iorwf	147,f,c	;volatile
  1765  000744  EF69  F004         	goto	l173
  1766  000748                     l2199:
  1767  000748  C01F  F023         	movff	pinMode@pin,??_pinMode
  1768  00074C  0EF8               	movlw	-8
  1769  00074E  2623               	addwf	??_pinMode^0,f,c
  1770  000750  0E01               	movlw	1
  1771  000752  6E24               	movwf	(??_pinMode+1)^0,c
  1772  000754  2A23               	incf	??_pinMode^0,f,c
  1773  000756  EFAF  F003         	goto	u1674
  1774  00075A                     u1675:
  1775  00075A  90D8               	bcf	status,0,c
  1776  00075C  3624               	rlcf	(??_pinMode+1)^0,f,c
  1777  00075E                     u1674:
  1778  00075E  2E23               	decfsz	??_pinMode^0,f,c
  1779  000760  EFAD  F003         	goto	u1675
  1780  000764  5024               	movf	(??_pinMode+1)^0,w,c
  1781  000766  0AFF               	xorlw	255
  1782  000768  1693               	andwf	147,f,c	;volatile
  1783  00076A  EF69  F004         	goto	l173
  1784  00076E                     l2201:
  1785  00076E  BE20               	btfsc	(pinMode@pin+1)^0,7,c
  1786  000770  EFC5  F003         	goto	u1680
  1787  000774  5020               	movf	(pinMode@pin+1)^0,w,c
  1788  000776  E107               	bnz	u1681
  1789  000778  0E18               	movlw	24
  1790  00077A  5C1F               	subwf	pinMode@pin^0,w,c
  1791  00077C  B0D8               	btfsc	status,0,c
  1792  00077E  EFC3  F003         	goto	u1681
  1793  000782  EFC5  F003         	goto	u1680
  1794  000786                     u1681:
  1795  000786  EFF3  F003         	goto	l2209
  1796  00078A                     u1680:
  1797  00078A                     
  1798                           ;io.c: 63:         if (type){ ((TRISC) |= (1<<(pin-16)));}
  1799  00078A  5021               	movf	pinMode@type^0,w,c
  1800  00078C  1022               	iorwf	(pinMode@type+1)^0,w,c
  1801  00078E  B4D8               	btfsc	status,2,c
  1802  000790  EFCC  F003         	goto	u1691
  1803  000794  EFCE  F003         	goto	u1690
  1804  000798                     u1691:
  1805  000798  EFE0  F003         	goto	l2207
  1806  00079C                     u1690:
  1807  00079C  C01F  F023         	movff	pinMode@pin,??_pinMode
  1808  0007A0  0EF0               	movlw	-16
  1809  0007A2  2623               	addwf	??_pinMode^0,f,c
  1810  0007A4  0E01               	movlw	1
  1811  0007A6  6E24               	movwf	(??_pinMode+1)^0,c
  1812  0007A8  2A23               	incf	??_pinMode^0,f,c
  1813  0007AA  EFD9  F003         	goto	u1704
  1814  0007AE                     u1705:
  1815  0007AE  90D8               	bcf	status,0,c
  1816  0007B0  3624               	rlcf	(??_pinMode+1)^0,f,c
  1817  0007B2                     u1704:
  1818  0007B2  2E23               	decfsz	??_pinMode^0,f,c
  1819  0007B4  EFD7  F003         	goto	u1705
  1820  0007B8  5024               	movf	(??_pinMode+1)^0,w,c
  1821  0007BA  1294               	iorwf	148,f,c	;volatile
  1822  0007BC  EF69  F004         	goto	l173
  1823  0007C0                     l2207:
  1824  0007C0  C01F  F023         	movff	pinMode@pin,??_pinMode
  1825  0007C4  0EF0               	movlw	-16
  1826  0007C6  2623               	addwf	??_pinMode^0,f,c
  1827  0007C8  0E01               	movlw	1
  1828  0007CA  6E24               	movwf	(??_pinMode+1)^0,c
  1829  0007CC  2A23               	incf	??_pinMode^0,f,c
  1830  0007CE  EFEB  F003         	goto	u1714
  1831  0007D2                     u1715:
  1832  0007D2  90D8               	bcf	status,0,c
  1833  0007D4  3624               	rlcf	(??_pinMode+1)^0,f,c
  1834  0007D6                     u1714:
  1835  0007D6  2E23               	decfsz	??_pinMode^0,f,c
  1836  0007D8  EFE9  F003         	goto	u1715
  1837  0007DC  5024               	movf	(??_pinMode+1)^0,w,c
  1838  0007DE  0AFF               	xorlw	255
  1839  0007E0  1694               	andwf	148,f,c	;volatile
  1840  0007E2  EF69  F004         	goto	l173
  1841  0007E6                     l2209:
  1842  0007E6  BE20               	btfsc	(pinMode@pin+1)^0,7,c
  1843  0007E8  EF01  F004         	goto	u1720
  1844  0007EC  5020               	movf	(pinMode@pin+1)^0,w,c
  1845  0007EE  E107               	bnz	u1721
  1846  0007F0  0E20               	movlw	32
  1847  0007F2  5C1F               	subwf	pinMode@pin^0,w,c
  1848  0007F4  B0D8               	btfsc	status,0,c
  1849  0007F6  EFFF  F003         	goto	u1721
  1850  0007FA  EF01  F004         	goto	u1720
  1851  0007FE                     u1721:
  1852  0007FE  EF2F  F004         	goto	l2217
  1853  000802                     u1720:
  1854  000802                     
  1855                           ;io.c: 66:         if (type){ ((TRISD) |= (1<<(pin-24)));}
  1856  000802  5021               	movf	pinMode@type^0,w,c
  1857  000804  1022               	iorwf	(pinMode@type+1)^0,w,c
  1858  000806  B4D8               	btfsc	status,2,c
  1859  000808  EF08  F004         	goto	u1731
  1860  00080C  EF0A  F004         	goto	u1730
  1861  000810                     u1731:
  1862  000810  EF1C  F004         	goto	l2215
  1863  000814                     u1730:
  1864  000814  C01F  F023         	movff	pinMode@pin,??_pinMode
  1865  000818  0EE8               	movlw	-24
  1866  00081A  2623               	addwf	??_pinMode^0,f,c
  1867  00081C  0E01               	movlw	1
  1868  00081E  6E24               	movwf	(??_pinMode+1)^0,c
  1869  000820  2A23               	incf	??_pinMode^0,f,c
  1870  000822  EF15  F004         	goto	u1744
  1871  000826                     u1745:
  1872  000826  90D8               	bcf	status,0,c
  1873  000828  3624               	rlcf	(??_pinMode+1)^0,f,c
  1874  00082A                     u1744:
  1875  00082A  2E23               	decfsz	??_pinMode^0,f,c
  1876  00082C  EF13  F004         	goto	u1745
  1877  000830  5024               	movf	(??_pinMode+1)^0,w,c
  1878  000832  1295               	iorwf	149,f,c	;volatile
  1879  000834  EF69  F004         	goto	l173
  1880  000838                     l2215:
  1881  000838  C01F  F023         	movff	pinMode@pin,??_pinMode
  1882  00083C  0EE8               	movlw	-24
  1883  00083E  2623               	addwf	??_pinMode^0,f,c
  1884  000840  0E01               	movlw	1
  1885  000842  6E24               	movwf	(??_pinMode+1)^0,c
  1886  000844  2A23               	incf	??_pinMode^0,f,c
  1887  000846  EF27  F004         	goto	u1754
  1888  00084A                     u1755:
  1889  00084A  90D8               	bcf	status,0,c
  1890  00084C  3624               	rlcf	(??_pinMode+1)^0,f,c
  1891  00084E                     u1754:
  1892  00084E  2E23               	decfsz	??_pinMode^0,f,c
  1893  000850  EF25  F004         	goto	u1755
  1894  000854  5024               	movf	(??_pinMode+1)^0,w,c
  1895  000856  0AFF               	xorlw	255
  1896  000858  1695               	andwf	149,f,c	;volatile
  1897  00085A  EF69  F004         	goto	l173
  1898  00085E                     l2217:
  1899  00085E  BE20               	btfsc	(pinMode@pin+1)^0,7,c
  1900  000860  EF3D  F004         	goto	u1760
  1901  000864  5020               	movf	(pinMode@pin+1)^0,w,c
  1902  000866  E107               	bnz	u1761
  1903  000868  0E28               	movlw	40
  1904  00086A  5C1F               	subwf	pinMode@pin^0,w,c
  1905  00086C  B0D8               	btfsc	status,0,c
  1906  00086E  EF3B  F004         	goto	u1761
  1907  000872  EF3D  F004         	goto	u1760
  1908  000876                     u1761:
  1909  000876  EF69  F004         	goto	l173
  1910  00087A                     u1760:
  1911  00087A                     
  1912                           ;io.c: 69:         if (type){ ((TRISE) |= (1<<(pin-32)));}
  1913  00087A  5021               	movf	pinMode@type^0,w,c
  1914  00087C  1022               	iorwf	(pinMode@type+1)^0,w,c
  1915  00087E  B4D8               	btfsc	status,2,c
  1916  000880  EF44  F004         	goto	u1771
  1917  000884  EF46  F004         	goto	u1770
  1918  000888                     u1771:
  1919  000888  EF58  F004         	goto	l2223
  1920  00088C                     u1770:
  1921  00088C  C01F  F023         	movff	pinMode@pin,??_pinMode
  1922  000890  0EE0               	movlw	-32
  1923  000892  2623               	addwf	??_pinMode^0,f,c
  1924  000894  0E01               	movlw	1
  1925  000896  6E24               	movwf	(??_pinMode+1)^0,c
  1926  000898  2A23               	incf	??_pinMode^0,f,c
  1927  00089A  EF51  F004         	goto	u1784
  1928  00089E                     u1785:
  1929  00089E  90D8               	bcf	status,0,c
  1930  0008A0  3624               	rlcf	(??_pinMode+1)^0,f,c
  1931  0008A2                     u1784:
  1932  0008A2  2E23               	decfsz	??_pinMode^0,f,c
  1933  0008A4  EF4F  F004         	goto	u1785
  1934  0008A8  5024               	movf	(??_pinMode+1)^0,w,c
  1935  0008AA  1296               	iorwf	150,f,c	;volatile
  1936  0008AC  EF69  F004         	goto	l173
  1937  0008B0                     l2223:
  1938  0008B0  C01F  F023         	movff	pinMode@pin,??_pinMode
  1939  0008B4  0EE0               	movlw	-32
  1940  0008B6  2623               	addwf	??_pinMode^0,f,c
  1941  0008B8  0E01               	movlw	1
  1942  0008BA  6E24               	movwf	(??_pinMode+1)^0,c
  1943  0008BC  2A23               	incf	??_pinMode^0,f,c
  1944  0008BE  EF63  F004         	goto	u1794
  1945  0008C2                     u1795:
  1946  0008C2  90D8               	bcf	status,0,c
  1947  0008C4  3624               	rlcf	(??_pinMode+1)^0,f,c
  1948  0008C6                     u1794:
  1949  0008C6  2E23               	decfsz	??_pinMode^0,f,c
  1950  0008C8  EF61  F004         	goto	u1795
  1951  0008CC  5024               	movf	(??_pinMode+1)^0,w,c
  1952  0008CE  0AFF               	xorlw	255
  1953  0008D0  1696               	andwf	150,f,c	;volatile
  1954  0008D2                     l173:
  1955  0008D2  0012               	return		;funcret
  1956  0008D4                     __end_of_pinMode:
  1957                           	callstack 0
  1958                           
  1959 ;; *************** function _explosion *****************
  1960 ;; Defined at:
  1961 ;;		line 76 in file "main.c"
  1962 ;; Parameters:    Size  Location     Type
  1963 ;;		None
  1964 ;; Auto vars:     Size  Location     Type
  1965 ;;  i               2   22[COMRAM] int 
  1966 ;;  cont            2   20[COMRAM] unsigned int 
  1967 ;; Return value:  Size  Location     Type
  1968 ;;                  2  433[None  ] int 
  1969 ;; Registers used:
  1970 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1971 ;; Tracked objects:
  1972 ;;		On entry : 0/0
  1973 ;;		On exit  : 0/0
  1974 ;;		Unchanged: 0/0
  1975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1976 ;;      Params:         0       0       0       0       0       0       0
  1977 ;;      Locals:         4       0       0       0       0       0       0
  1978 ;;      Temps:          0       0       0       0       0       0       0
  1979 ;;      Totals:         4       0       0       0       0       0       0
  1980 ;;Total ram usage:        4 bytes
  1981 ;; Hardware stack levels used: 1
  1982 ;; Hardware stack levels required when called: 6
  1983 ;; This function calls:
  1984 ;;		___awdiv
  1985 ;;		___awmod
  1986 ;;		___lwdiv
  1987 ;;		___lwmod
  1988 ;;		_atraso_ms
  1989 ;;		_lcdCommand
  1990 ;;		_lcdString
  1991 ;;		_pwmFrequency
  1992 ;;		_pwmSet
  1993 ;;		_ssdDigit
  1994 ;;		_ssdUpdate
  1995 ;; This function is called by:
  1996 ;;		_main
  1997 ;; This function uses a non-reentrant model
  1998 ;;
  1999                           
  2000                           	psect	text13
  2001  000B22                     __ptext13:
  2002                           	callstack 0
  2003  000B22                     _explosion:
  2004                           	callstack 24
  2005  000B22                     
  2006                           ;main.c: 77:     unsigned int cont = 1000;
  2007  000B22  0E03               	movlw	3
  2008  000B24  6E34               	movwf	(explosion@cont+1)^0,c
  2009  000B26  0EE8               	movlw	232
  2010  000B28  6E33               	movwf	explosion@cont^0,c
  2011  000B2A                     
  2012                           ;main.c: 78:     int i;;main.c: 79:     if (try >= 3) {
  2013  000B2A  0E02               	movlw	2
  2014  000B2C  6417               	cpfsgt	_try^0,c
  2015  000B2E  EF9B  F005         	goto	u2531
  2016  000B32  EF9D  F005         	goto	u2530
  2017  000B36                     u2531:
  2018  000B36  EF67  F006         	goto	l441
  2019  000B3A                     u2530:
  2020  000B3A                     
  2021                           ;main.c: 80:         lcdCommand(0x01);
  2022  000B3A  0E01               	movlw	1
  2023  000B3C  ECCA  F00E         	call	_lcdCommand
  2024  000B40                     
  2025                           ;main.c: 81:         lcdString("Too many tries");
  2026  000B40  0E3E               	movlw	low STR_5
  2027  000B42  6E2D               	movwf	lcdString@msg^0,c
  2028  000B44  0E06               	movlw	high STR_5
  2029  000B46  6E2E               	movwf	(lcdString@msg+1)^0,c
  2030  000B48  EC65  F00D         	call	_lcdString	;wreg free
  2031  000B4C                     
  2032                           ;main.c: 82:         atraso_ms(1000);
  2033  000B4C  0E03               	movlw	3
  2034  000B4E  6E20               	movwf	(atraso_ms@num+1)^0,c
  2035  000B50  0EE8               	movlw	232
  2036  000B52  6E1F               	movwf	atraso_ms@num^0,c
  2037  000B54  ECAF  F00C         	call	_atraso_ms	;wreg free
  2038  000B58                     
  2039                           ;main.c: 83:         lcdCommand(0x01);
  2040  000B58  0E01               	movlw	1
  2041  000B5A  ECCA  F00E         	call	_lcdCommand
  2042  000B5E                     
  2043                           ;main.c: 84:         lcdString("EXPLODING...");
  2044  000B5E  0E5B               	movlw	low STR_6
  2045  000B60  6E2D               	movwf	lcdString@msg^0,c
  2046  000B62  0E06               	movlw	high STR_6
  2047  000B64  6E2E               	movwf	(lcdString@msg+1)^0,c
  2048  000B66  EC65  F00D         	call	_lcdString	;wreg free
  2049                           
  2050                           ;main.c: 86:         while(cont!=0) {
  2051  000B6A  EF2D  F006         	goto	l2815
  2052  000B6E                     l2795:
  2053                           
  2054                           ;main.c: 88:             i--;
  2055  000B6E  0635               	decf	explosion@i^0,f,c
  2056  000B70  A0D8               	btfss	status,0,c
  2057  000B72  0636               	decf	(explosion@i+1)^0,f,c
  2058  000B74                     
  2059                           ;main.c: 89:             if (i == 0) {
  2060  000B74  5035               	movf	explosion@i^0,w,c
  2061  000B76  1036               	iorwf	(explosion@i+1)^0,w,c
  2062  000B78  A4D8               	btfss	status,2,c
  2063  000B7A  EFC1  F005         	goto	u2541
  2064  000B7E  EFC3  F005         	goto	u2540
  2065  000B82                     u2541:
  2066  000B82  EFCB  F005         	goto	l2803
  2067  000B86                     u2540:
  2068  000B86                     
  2069                           ;main.c: 90:                 cont -= 100;
  2070  000B86  0E64               	movlw	100
  2071  000B88  5E33               	subwf	explosion@cont^0,f,c
  2072  000B8A  0E00               	movlw	0
  2073  000B8C  5A34               	subwfb	(explosion@cont+1)^0,f,c
  2074  000B8E                     
  2075                           ;main.c: 91:                 i = 60;
  2076  000B8E  0E00               	movlw	0
  2077  000B90  6E36               	movwf	(explosion@i+1)^0,c
  2078  000B92  0E3C               	movlw	60
  2079  000B94  6E35               	movwf	explosion@i^0,c
  2080  000B96                     l2803:
  2081                           
  2082                           ;main.c: 93:             ssdDigit(((cont / 1000) % 10), 0);
  2083  000B96  0E00               	movlw	0
  2084  000B98  6E2D               	movwf	ssdDigit@pos^0,c
  2085  000B9A  0E03               	movlw	3
  2086  000B9C  6E22               	movwf	(___lwdiv@divisor+1)^0,c
  2087  000B9E  0EE8               	movlw	232
  2088  000BA0  6E21               	movwf	___lwdiv@divisor^0,c
  2089  000BA2  C033  F01F         	movff	explosion@cont,___lwdiv@dividend
  2090  000BA6  C034  F020         	movff	explosion@cont+1,___lwdiv@dividend+1
  2091  000BAA  ECA5  F00B         	call	___lwdiv	;wreg free
  2092  000BAE  C01F  F026         	movff	?___lwdiv,___lwmod@dividend
  2093  000BB2  C020  F027         	movff	?___lwdiv+1,___lwmod@dividend+1
  2094  000BB6  0E00               	movlw	0
  2095  000BB8  6E29               	movwf	(___lwmod@divisor+1)^0,c
  2096  000BBA  0E0A               	movlw	10
  2097  000BBC  6E28               	movwf	___lwmod@divisor^0,c
  2098  000BBE  EC7D  F00C         	call	___lwmod	;wreg free
  2099  000BC2  5026               	movf	?___lwmod^0,w,c
  2100  000BC4  EC0E  F00D         	call	_ssdDigit
  2101  000BC8                     
  2102                           ;main.c: 94:             ssdDigit(((cont / 100) % 10), 1);
  2103  000BC8  0E01               	movlw	1
  2104  000BCA  6E2D               	movwf	ssdDigit@pos^0,c
  2105  000BCC  0E00               	movlw	0
  2106  000BCE  6E22               	movwf	(___lwdiv@divisor+1)^0,c
  2107  000BD0  0E64               	movlw	100
  2108  000BD2  6E21               	movwf	___lwdiv@divisor^0,c
  2109  000BD4  C033  F01F         	movff	explosion@cont,___lwdiv@dividend
  2110  000BD8  C034  F020         	movff	explosion@cont+1,___lwdiv@dividend+1
  2111  000BDC  ECA5  F00B         	call	___lwdiv	;wreg free
  2112  000BE0  C01F  F026         	movff	?___lwdiv,___lwmod@dividend
  2113  000BE4  C020  F027         	movff	?___lwdiv+1,___lwmod@dividend+1
  2114  000BE8  0E00               	movlw	0
  2115  000BEA  6E29               	movwf	(___lwmod@divisor+1)^0,c
  2116  000BEC  0E0A               	movlw	10
  2117  000BEE  6E28               	movwf	___lwmod@divisor^0,c
  2118  000BF0  EC7D  F00C         	call	___lwmod	;wreg free
  2119  000BF4  5026               	movf	?___lwmod^0,w,c
  2120  000BF6  EC0E  F00D         	call	_ssdDigit
  2121  000BFA                     
  2122                           ;main.c: 95:             ssdDigit(((i / 10) % 10), 2);
  2123  000BFA  0E02               	movlw	2
  2124  000BFC  6E2D               	movwf	ssdDigit@pos^0,c
  2125  000BFE  0E00               	movlw	0
  2126  000C00  6E22               	movwf	(___awdiv@divisor+1)^0,c
  2127  000C02  0E0A               	movlw	10
  2128  000C04  6E21               	movwf	___awdiv@divisor^0,c
  2129  000C06  C035  F01F         	movff	explosion@i,___awdiv@dividend
  2130  000C0A  C036  F020         	movff	explosion@i+1,___awdiv@dividend+1
  2131  000C0E  EC0B  F00A         	call	___awdiv	;wreg free
  2132  000C12  C01F  F027         	movff	?___awdiv,___awmod@dividend
  2133  000C16  C020  F028         	movff	?___awdiv+1,___awmod@dividend+1
  2134  000C1A  0E00               	movlw	0
  2135  000C1C  6E2A               	movwf	(___awmod@divisor+1)^0,c
  2136  000C1E  0E0A               	movlw	10
  2137  000C20  6E29               	movwf	___awmod@divisor^0,c
  2138  000C22  ECC7  F00A         	call	___awmod	;wreg free
  2139  000C26  5027               	movf	?___awmod^0,w,c
  2140  000C28  EC0E  F00D         	call	_ssdDigit
  2141  000C2C                     
  2142                           ;main.c: 96:             ssdDigit(((i / 1) % 10), 3);
  2143  000C2C  0E03               	movlw	3
  2144  000C2E  6E2D               	movwf	ssdDigit@pos^0,c
  2145  000C30  C035  F027         	movff	explosion@i,___awmod@dividend
  2146  000C34  C036  F028         	movff	explosion@i+1,___awmod@dividend+1
  2147  000C38  0E00               	movlw	0
  2148  000C3A  6E2A               	movwf	(___awmod@divisor+1)^0,c
  2149  000C3C  0E0A               	movlw	10
  2150  000C3E  6E29               	movwf	___awmod@divisor^0,c
  2151  000C40  ECC7  F00A         	call	___awmod	;wreg free
  2152  000C44  5027               	movf	?___awmod^0,w,c
  2153  000C46  EC0E  F00D         	call	_ssdDigit
  2154  000C4A                     
  2155                           ;main.c: 97:             ssdUpdate();
  2156  000C4A  EC68  F006         	call	_ssdUpdate	;wreg free
  2157  000C4E                     
  2158                           ;main.c: 98:             atraso_ms(20);
  2159  000C4E  0E00               	movlw	0
  2160  000C50  6E20               	movwf	(atraso_ms@num+1)^0,c
  2161  000C52  0E14               	movlw	20
  2162  000C54  6E1F               	movwf	atraso_ms@num^0,c
  2163  000C56  ECAF  F00C         	call	_atraso_ms	;wreg free
  2164  000C5A                     l2815:
  2165                           
  2166                           ;main.c: 86:         while(cont!=0) {
  2167  000C5A  5033               	movf	explosion@cont^0,w,c
  2168  000C5C  1034               	iorwf	(explosion@cont+1)^0,w,c
  2169  000C5E  A4D8               	btfss	status,2,c
  2170  000C60  EF34  F006         	goto	u2551
  2171  000C64  EF36  F006         	goto	u2550
  2172  000C68                     u2551:
  2173  000C68  EFB7  F005         	goto	l2795
  2174  000C6C                     u2550:
  2175  000C6C                     
  2176                           ;main.c: 100:         lcdCommand(0x01);
  2177  000C6C  0E01               	movlw	1
  2178  000C6E  ECCA  F00E         	call	_lcdCommand
  2179  000C72                     
  2180                           ;main.c: 101:         lcdString("BOOM!!");
  2181  000C72  0E7D               	movlw	low STR_7
  2182  000C74  6E2D               	movwf	lcdString@msg^0,c
  2183  000C76  0E06               	movlw	high STR_7
  2184  000C78  6E2E               	movwf	(lcdString@msg+1)^0,c
  2185  000C7A  EC65  F00D         	call	_lcdString	;wreg free
  2186  000C7E                     
  2187                           ;main.c: 102:         (*(volatile __near unsigned char*) 0xF83) = 0xFF;
  2188  000C7E  6883               	setf	131,c	;volatile
  2189  000C80                     
  2190                           ;main.c: 103:         pwmFrequency(300);
  2191  000C80  0E01               	movlw	1
  2192  000C82  6E2E               	movwf	(pwmFrequency@freq+1)^0,c
  2193  000C84  0E2C               	movlw	44
  2194  000C86  6E2D               	movwf	pwmFrequency@freq^0,c
  2195  000C88  EC97  F00E         	call	_pwmFrequency	;wreg free
  2196  000C8C                     l2825:
  2197                           
  2198                           ;main.c: 105:             ssdDigit(13, 0);
  2199  000C8C  0E00               	movlw	0
  2200  000C8E  6E2D               	movwf	ssdDigit@pos^0,c
  2201  000C90  0E0D               	movlw	13
  2202  000C92  EC0E  F00D         	call	_ssdDigit
  2203  000C96                     
  2204                           ;main.c: 106:             ssdDigit(1, 1);
  2205  000C96  0E01               	movlw	1
  2206  000C98  6E2D               	movwf	ssdDigit@pos^0,c
  2207  000C9A  0E01               	movlw	1
  2208  000C9C  EC0E  F00D         	call	_ssdDigit
  2209  000CA0                     
  2210                           ;main.c: 107:             ssdDigit(14, 2);
  2211  000CA0  0E02               	movlw	2
  2212  000CA2  6E2D               	movwf	ssdDigit@pos^0,c
  2213  000CA4  0E0E               	movlw	14
  2214  000CA6  EC0E  F00D         	call	_ssdDigit
  2215  000CAA                     
  2216                           ;main.c: 108:             ssdDigit(13, 3);
  2217  000CAA  0E03               	movlw	3
  2218  000CAC  6E2D               	movwf	ssdDigit@pos^0,c
  2219  000CAE  0E0D               	movlw	13
  2220  000CB0  EC0E  F00D         	call	_ssdDigit
  2221                           
  2222                           ;main.c: 109:             ssdUpdate();
  2223  000CB4  EC68  F006         	call	_ssdUpdate	;wreg free
  2224  000CB8                     
  2225                           ;main.c: 110:             atraso_ms(20);
  2226  000CB8  0E00               	movlw	0
  2227  000CBA  6E20               	movwf	(atraso_ms@num+1)^0,c
  2228  000CBC  0E14               	movlw	20
  2229  000CBE  6E1F               	movwf	atraso_ms@num^0,c
  2230  000CC0  ECAF  F00C         	call	_atraso_ms	;wreg free
  2231  000CC4                     
  2232                           ;main.c: 111:             pwmSet(100);
  2233  000CC4  0E64               	movlw	100
  2234  000CC6  ECDF  F00B         	call	_pwmSet
  2235                           
  2236                           ;main.c: 112:         }
  2237  000CCA  EF46  F006         	goto	l2825
  2238  000CCE                     l441:
  2239  000CCE  0012               	return		;funcret
  2240  000CD0                     __end_of_explosion:
  2241                           	callstack 0
  2242                           
  2243 ;; *************** function _ssdUpdate *****************
  2244 ;; Defined at:
  2245 ;;		line 50 in file "ssd.c"
  2246 ;; Parameters:    Size  Location     Type
  2247 ;;		None
  2248 ;; Auto vars:     Size  Location     Type
  2249 ;;		None
  2250 ;; Return value:  Size  Location     Type
  2251 ;;                  1    wreg      void 
  2252 ;; Registers used:
  2253 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2254 ;; Tracked objects:
  2255 ;;		On entry : 0/0
  2256 ;;		On exit  : 0/0
  2257 ;;		Unchanged: 0/0
  2258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2259 ;;      Params:         0       0       0       0       0       0       0
  2260 ;;      Locals:         0       0       0       0       0       0       0
  2261 ;;      Temps:          2       0       0       0       0       0       0
  2262 ;;      Totals:         2       0       0       0       0       0       0
  2263 ;;Total ram usage:        2 bytes
  2264 ;; Hardware stack levels used: 1
  2265 ;; Hardware stack levels required when called: 3
  2266 ;; This function calls:
  2267 ;;		_digitalWrite
  2268 ;;		_soWrite
  2269 ;; This function is called by:
  2270 ;;		_explosion
  2271 ;;		_main
  2272 ;; This function uses a non-reentrant model
  2273 ;;
  2274                           
  2275                           	psect	text14
  2276  000CD0                     __ptext14:
  2277                           	callstack 0
  2278  000CD0                     _ssdUpdate:
  2279                           	callstack 27
  2280  000CD0                     
  2281                           ;ssd.c: 54:     digitalWrite(PIN_D0,0);
  2282  000CD0  0E00               	movlw	0
  2283  000CD2  6E20               	movwf	(digitalWrite@pin+1)^0,c
  2284  000CD4  0E18               	movlw	24
  2285  000CD6  6E1F               	movwf	digitalWrite@pin^0,c
  2286  000CD8  0E00               	movlw	0
  2287  000CDA  6E22               	movwf	(digitalWrite@value+1)^0,c
  2288  000CDC  0E00               	movlw	0
  2289  000CDE  6E21               	movwf	digitalWrite@value^0,c
  2290  000CE0  EC6A  F004         	call	_digitalWrite	;wreg free
  2291                           
  2292                           ;ssd.c: 55:     digitalWrite(PIN_D1,0);
  2293  000CE4  0E00               	movlw	0
  2294  000CE6  6E20               	movwf	(digitalWrite@pin+1)^0,c
  2295  000CE8  0E19               	movlw	25
  2296  000CEA  6E1F               	movwf	digitalWrite@pin^0,c
  2297  000CEC  0E00               	movlw	0
  2298  000CEE  6E22               	movwf	(digitalWrite@value+1)^0,c
  2299  000CF0  0E00               	movlw	0
  2300  000CF2  6E21               	movwf	digitalWrite@value^0,c
  2301  000CF4  EC6A  F004         	call	_digitalWrite	;wreg free
  2302                           
  2303                           ;ssd.c: 56:     digitalWrite(PIN_D2,0);
  2304  000CF8  0E00               	movlw	0
  2305  000CFA  6E20               	movwf	(digitalWrite@pin+1)^0,c
  2306  000CFC  0E1A               	movlw	26
  2307  000CFE  6E1F               	movwf	digitalWrite@pin^0,c
  2308  000D00  0E00               	movlw	0
  2309  000D02  6E22               	movwf	(digitalWrite@value+1)^0,c
  2310  000D04  0E00               	movlw	0
  2311  000D06  6E21               	movwf	digitalWrite@value^0,c
  2312  000D08  EC6A  F004         	call	_digitalWrite	;wreg free
  2313                           
  2314                           ;ssd.c: 57:     digitalWrite(PIN_D3,0);
  2315  000D0C  0E00               	movlw	0
  2316  000D0E  6E20               	movwf	(digitalWrite@pin+1)^0,c
  2317  000D10  0E1B               	movlw	27
  2318  000D12  6E1F               	movwf	digitalWrite@pin^0,c
  2319  000D14  0E00               	movlw	0
  2320  000D16  6E22               	movwf	(digitalWrite@value+1)^0,c
  2321  000D18  0E00               	movlw	0
  2322  000D1A  6E21               	movwf	digitalWrite@value^0,c
  2323  000D1C  EC6A  F004         	call	_digitalWrite	;wreg free
  2324                           
  2325                           ;ssd.c: 60:     soWrite(0x00);
  2326  000D20  0E00               	movlw	0
  2327  000D22  6E26               	movwf	(soWrite@value+1)^0,c
  2328  000D24  0E00               	movlw	0
  2329  000D26  6E25               	movwf	soWrite@value^0,c
  2330  000D28  EC90  F00D         	call	_soWrite	;wreg free
  2331                           
  2332                           ;ssd.c: 62:     switch (display)
  2333  000D2C  EF00  F007         	goto	l2459
  2334  000D30                     l2431:
  2335                           
  2336                           ;ssd.c: 65:             soWrite(valor[v0]);
  2337  000D30  0E01               	movlw	low _valor
  2338  000D32  241B               	addwf	_v0^0,w,c
  2339  000D34  6EF6               	movwf	tblptrl,c
  2340  000D36  6AF7               	clrf	tblptrh,c
  2341  000D38  0E06               	movlw	high _valor
  2342  000D3A  22F7               	addwfc	tblptrh,f,c
  2343  000D3C                     	if	0	;There are less than 3 active tblptr bytes
  2344  000D3C                     	endif
  2345  000D3C  0008               	tblrd		*
  2346  000D3E  50F5               	movf	tablat,w,c
  2347  000D40  6E25               	movwf	soWrite@value^0,c
  2348  000D42  6A26               	clrf	(soWrite@value+1)^0,c
  2349  000D44  EC90  F00D         	call	_soWrite	;wreg free
  2350  000D48                     
  2351                           ;ssd.c: 66:             digitalWrite(PIN_D0,1);
  2352  000D48  0E00               	movlw	0
  2353  000D4A  6E20               	movwf	(digitalWrite@pin+1)^0,c
  2354  000D4C  0E18               	movlw	24
  2355  000D4E  6E1F               	movwf	digitalWrite@pin^0,c
  2356  000D50  0E00               	movlw	0
  2357  000D52  6E22               	movwf	(digitalWrite@value+1)^0,c
  2358  000D54  0E01               	movlw	1
  2359  000D56  6E21               	movwf	digitalWrite@value^0,c
  2360  000D58  EC6A  F004         	call	_digitalWrite	;wreg free
  2361  000D5C                     
  2362                           ;ssd.c: 67:             display = 1;
  2363  000D5C  0E01               	movlw	1
  2364  000D5E  6E1C               	movwf	_display^0,c
  2365                           
  2366                           ;ssd.c: 68:             break;
  2367  000D60  EF1D  F007         	goto	l341
  2368  000D64                     l2437:
  2369                           
  2370                           ;ssd.c: 71:             soWrite(valor[v1]);
  2371  000D64  0E01               	movlw	low _valor
  2372  000D66  241A               	addwf	_v1^0,w,c
  2373  000D68  6EF6               	movwf	tblptrl,c
  2374  000D6A  6AF7               	clrf	tblptrh,c
  2375  000D6C  0E06               	movlw	high _valor
  2376  000D6E  22F7               	addwfc	tblptrh,f,c
  2377  000D70                     	if	0	;There are less than 3 active tblptr bytes
  2378  000D70                     	endif
  2379  000D70  0008               	tblrd		*
  2380  000D72  50F5               	movf	tablat,w,c
  2381  000D74  6E25               	movwf	soWrite@value^0,c
  2382  000D76  6A26               	clrf	(soWrite@value+1)^0,c
  2383  000D78  EC90  F00D         	call	_soWrite	;wreg free
  2384  000D7C                     
  2385                           ;ssd.c: 72:             digitalWrite(PIN_D1,1);
  2386  000D7C  0E00               	movlw	0
  2387  000D7E  6E20               	movwf	(digitalWrite@pin+1)^0,c
  2388  000D80  0E19               	movlw	25
  2389  000D82  6E1F               	movwf	digitalWrite@pin^0,c
  2390  000D84  0E00               	movlw	0
  2391  000D86  6E22               	movwf	(digitalWrite@value+1)^0,c
  2392  000D88  0E01               	movlw	1
  2393  000D8A  6E21               	movwf	digitalWrite@value^0,c
  2394  000D8C  EC6A  F004         	call	_digitalWrite	;wreg free
  2395  000D90                     
  2396                           ;ssd.c: 73:             display = 2;
  2397  000D90  0E02               	movlw	2
  2398  000D92  6E1C               	movwf	_display^0,c
  2399                           
  2400                           ;ssd.c: 74:             break;
  2401  000D94  EF1D  F007         	goto	l341
  2402  000D98                     l2443:
  2403                           
  2404                           ;ssd.c: 77:             soWrite(valor[v2]);
  2405  000D98  0E01               	movlw	low _valor
  2406  000D9A  2419               	addwf	_v2^0,w,c
  2407  000D9C  6EF6               	movwf	tblptrl,c
  2408  000D9E  6AF7               	clrf	tblptrh,c
  2409  000DA0  0E06               	movlw	high _valor
  2410  000DA2  22F7               	addwfc	tblptrh,f,c
  2411  000DA4                     	if	0	;There are less than 3 active tblptr bytes
  2412  000DA4                     	endif
  2413  000DA4  0008               	tblrd		*
  2414  000DA6  50F5               	movf	tablat,w,c
  2415  000DA8  6E25               	movwf	soWrite@value^0,c
  2416  000DAA  6A26               	clrf	(soWrite@value+1)^0,c
  2417  000DAC  EC90  F00D         	call	_soWrite	;wreg free
  2418  000DB0                     
  2419                           ;ssd.c: 78:             digitalWrite(PIN_D2,1);
  2420  000DB0  0E00               	movlw	0
  2421  000DB2  6E20               	movwf	(digitalWrite@pin+1)^0,c
  2422  000DB4  0E1A               	movlw	26
  2423  000DB6  6E1F               	movwf	digitalWrite@pin^0,c
  2424  000DB8  0E00               	movlw	0
  2425  000DBA  6E22               	movwf	(digitalWrite@value+1)^0,c
  2426  000DBC  0E01               	movlw	1
  2427  000DBE  6E21               	movwf	digitalWrite@value^0,c
  2428  000DC0  EC6A  F004         	call	_digitalWrite	;wreg free
  2429  000DC4                     
  2430                           ;ssd.c: 79:             display = 3;
  2431  000DC4  0E03               	movlw	3
  2432  000DC6  6E1C               	movwf	_display^0,c
  2433                           
  2434                           ;ssd.c: 80:             break;
  2435  000DC8  EF1D  F007         	goto	l341
  2436  000DCC                     l2449:
  2437                           
  2438                           ;ssd.c: 83:             soWrite(valor[v3]);
  2439  000DCC  0E01               	movlw	low _valor
  2440  000DCE  2418               	addwf	_v3^0,w,c
  2441  000DD0  6EF6               	movwf	tblptrl,c
  2442  000DD2  6AF7               	clrf	tblptrh,c
  2443  000DD4  0E06               	movlw	high _valor
  2444  000DD6  22F7               	addwfc	tblptrh,f,c
  2445  000DD8                     	if	0	;There are less than 3 active tblptr bytes
  2446  000DD8                     	endif
  2447  000DD8  0008               	tblrd		*
  2448  000DDA  50F5               	movf	tablat,w,c
  2449  000DDC  6E25               	movwf	soWrite@value^0,c
  2450  000DDE  6A26               	clrf	(soWrite@value+1)^0,c
  2451  000DE0  EC90  F00D         	call	_soWrite	;wreg free
  2452  000DE4                     
  2453                           ;ssd.c: 84:             digitalWrite(PIN_D3,1);
  2454  000DE4  0E00               	movlw	0
  2455  000DE6  6E20               	movwf	(digitalWrite@pin+1)^0,c
  2456  000DE8  0E1B               	movlw	27
  2457  000DEA  6E1F               	movwf	digitalWrite@pin^0,c
  2458  000DEC  0E00               	movlw	0
  2459  000DEE  6E22               	movwf	(digitalWrite@value+1)^0,c
  2460  000DF0  0E01               	movlw	1
  2461  000DF2  6E21               	movwf	digitalWrite@value^0,c
  2462  000DF4  EC6A  F004         	call	_digitalWrite	;wreg free
  2463  000DF8                     l2453:
  2464                           
  2465                           ;ssd.c: 85:             display = 0;
  2466  000DF8  0E00               	movlw	0
  2467  000DFA  6E1C               	movwf	_display^0,c
  2468                           
  2469                           ;ssd.c: 86:             break;
  2470  000DFC  EF1D  F007         	goto	l341
  2471  000E00                     l2459:
  2472  000E00  501C               	movf	_display^0,w,c
  2473  000E02  6E28               	movwf	??_ssdUpdate^0,c
  2474  000E04  6A29               	clrf	(??_ssdUpdate+1)^0,c
  2475                           
  2476                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2477                           ; Switch size 1, requested type "simple"
  2478                           ; Number of cases is 1, Range of values is 0 to 0
  2479                           ; switch strategies available:
  2480                           ; Name         Instructions Cycles
  2481                           ; simple_byte            4     3 (average)
  2482                           ;	Chosen strategy is simple_byte
  2483  000E06  5029               	movf	(??_ssdUpdate+1)^0,w,c
  2484  000E08  0A00               	xorlw	0	; case 0
  2485  000E0A  B4D8               	btfsc	status,2,c
  2486  000E0C  EF0A  F007         	goto	l3027
  2487  000E10  EFFC  F006         	goto	l2453
  2488  000E14                     l3027:
  2489                           
  2490                           ; Switch size 1, requested type "simple"
  2491                           ; Number of cases is 4, Range of values is 0 to 3
  2492                           ; switch strategies available:
  2493                           ; Name         Instructions Cycles
  2494                           ; simple_byte           13     7 (average)
  2495                           ;	Chosen strategy is simple_byte
  2496  000E14  5028               	movf	??_ssdUpdate^0,w,c
  2497  000E16  0A00               	xorlw	0	; case 0
  2498  000E18  B4D8               	btfsc	status,2,c
  2499  000E1A  EF98  F006         	goto	l2431
  2500  000E1E  0A01               	xorlw	1	; case 1
  2501  000E20  B4D8               	btfsc	status,2,c
  2502  000E22  EFB2  F006         	goto	l2437
  2503  000E26  0A03               	xorlw	3	; case 2
  2504  000E28  B4D8               	btfsc	status,2,c
  2505  000E2A  EFCC  F006         	goto	l2443
  2506  000E2E  0A01               	xorlw	1	; case 3
  2507  000E30  B4D8               	btfsc	status,2,c
  2508  000E32  EFE6  F006         	goto	l2449
  2509  000E36  EFFC  F006         	goto	l2453
  2510  000E3A                     l341:
  2511  000E3A  0012               	return		;funcret
  2512  000E3C                     __end_of_ssdUpdate:
  2513                           	callstack 0
  2514                           
  2515 ;; *************** function _ssdDigit *****************
  2516 ;; Defined at:
  2517 ;;		line 34 in file "ssd.c"
  2518 ;; Parameters:    Size  Location     Type
  2519 ;;  val             1    wreg     unsigned char 
  2520 ;;  pos             1   14[COMRAM] unsigned char 
  2521 ;; Auto vars:     Size  Location     Type
  2522 ;;  val             1   15[COMRAM] unsigned char 
  2523 ;; Return value:  Size  Location     Type
  2524 ;;                  1    wreg      void 
  2525 ;; Registers used:
  2526 ;;		wreg, status,2, status,0
  2527 ;; Tracked objects:
  2528 ;;		On entry : 0/0
  2529 ;;		On exit  : 0/0
  2530 ;;		Unchanged: 0/0
  2531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2532 ;;      Params:         1       0       0       0       0       0       0
  2533 ;;      Locals:         1       0       0       0       0       0       0
  2534 ;;      Temps:          0       0       0       0       0       0       0
  2535 ;;      Totals:         2       0       0       0       0       0       0
  2536 ;;Total ram usage:        2 bytes
  2537 ;; Hardware stack levels used: 1
  2538 ;; This function calls:
  2539 ;;		Nothing
  2540 ;; This function is called by:
  2541 ;;		_explosion
  2542 ;; This function uses a non-reentrant model
  2543 ;;
  2544                           
  2545                           	psect	text15
  2546  001A1C                     __ptext15:
  2547                           	callstack 0
  2548  001A1C                     _ssdDigit:
  2549                           	callstack 29
  2550                           
  2551                           ;incstack = 0
  2552                           ;ssdDigit@val stored from wreg
  2553  001A1C  6E2E               	movwf	ssdDigit@val^0,c
  2554  001A1E                     
  2555                           ;ssd.c: 35:     if (pos == 0) {
  2556  001A1E  502D               	movf	ssdDigit@pos^0,w,c
  2557  001A20  A4D8               	btfss	status,2,c
  2558  001A22  EF15  F00D         	goto	u2131
  2559  001A26  EF17  F00D         	goto	u2130
  2560  001A2A                     u2131:
  2561  001A2A  EF19  F00D         	goto	l2417
  2562  001A2E                     u2130:
  2563  001A2E                     
  2564                           ;ssd.c: 36:         v0 = val;
  2565  001A2E  C02E  F01B         	movff	ssdDigit@val,_v0
  2566  001A32                     l2417:
  2567                           
  2568                           ;ssd.c: 38:     if (pos == 1) {
  2569  001A32  042D               	decf	ssdDigit@pos^0,w,c
  2570  001A34  A4D8               	btfss	status,2,c
  2571  001A36  EF1F  F00D         	goto	u2141
  2572  001A3A  EF21  F00D         	goto	u2140
  2573  001A3E                     u2141:
  2574  001A3E  EF23  F00D         	goto	l2421
  2575  001A42                     u2140:
  2576  001A42                     
  2577                           ;ssd.c: 39:         v1 = val;
  2578  001A42  C02E  F01A         	movff	ssdDigit@val,_v1
  2579  001A46                     l2421:
  2580                           
  2581                           ;ssd.c: 41:     if (pos == 2) {
  2582  001A46  0E02               	movlw	2
  2583  001A48  182D               	xorwf	ssdDigit@pos^0,w,c
  2584  001A4A  A4D8               	btfss	status,2,c
  2585  001A4C  EF2A  F00D         	goto	u2151
  2586  001A50  EF2C  F00D         	goto	u2150
  2587  001A54                     u2151:
  2588  001A54  EF2E  F00D         	goto	l2425
  2589  001A58                     u2150:
  2590  001A58                     
  2591                           ;ssd.c: 42:         v2 = val;
  2592  001A58  C02E  F019         	movff	ssdDigit@val,_v2
  2593  001A5C                     l2425:
  2594                           
  2595                           ;ssd.c: 44:     if (pos == 3) {
  2596  001A5C  0E03               	movlw	3
  2597  001A5E  182D               	xorwf	ssdDigit@pos^0,w,c
  2598  001A60  A4D8               	btfss	status,2,c
  2599  001A62  EF35  F00D         	goto	u2161
  2600  001A66  EF37  F00D         	goto	u2160
  2601  001A6A                     u2161:
  2602  001A6A  EF39  F00D         	goto	l331
  2603  001A6E                     u2160:
  2604  001A6E                     
  2605                           ;ssd.c: 45:         v3 = val;
  2606  001A6E  C02E  F018         	movff	ssdDigit@val,_v3
  2607  001A72                     l331:
  2608  001A72  0012               	return		;funcret
  2609  001A74                     __end_of_ssdDigit:
  2610                           	callstack 0
  2611                           
  2612 ;; *************** function _pwmSet *****************
  2613 ;; Defined at:
  2614 ;;		line 24 in file "pwm.c"
  2615 ;; Parameters:    Size  Location     Type
  2616 ;;  porcento        1    wreg     unsigned char 
  2617 ;; Auto vars:     Size  Location     Type
  2618 ;;  porcento        1    9[COMRAM] unsigned char 
  2619 ;;  val             2   10[COMRAM] unsigned int 
  2620 ;; Return value:  Size  Location     Type
  2621 ;;                  1    wreg      void 
  2622 ;; Registers used:
  2623 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2624 ;; Tracked objects:
  2625 ;;		On entry : 0/0
  2626 ;;		On exit  : 0/0
  2627 ;;		Unchanged: 0/0
  2628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2629 ;;      Params:         0       0       0       0       0       0       0
  2630 ;;      Locals:         3       0       0       0       0       0       0
  2631 ;;      Temps:          2       0       0       0       0       0       0
  2632 ;;      Totals:         5       0       0       0       0       0       0
  2633 ;;Total ram usage:        5 bytes
  2634 ;; Hardware stack levels used: 1
  2635 ;; Hardware stack levels required when called: 1
  2636 ;; This function calls:
  2637 ;;		___lwdiv
  2638 ;;		___wmul
  2639 ;; This function is called by:
  2640 ;;		_explosion
  2641 ;; This function uses a non-reentrant model
  2642 ;;
  2643                           
  2644                           	psect	text16
  2645  0017BE                     __ptext16:
  2646                           	callstack 0
  2647  0017BE                     _pwmSet:
  2648                           	callstack 28
  2649                           
  2650                           ;incstack = 0
  2651                           ;pwmSet@porcento stored from wreg
  2652  0017BE  6E28               	movwf	pwmSet@porcento^0,c
  2653  0017C0                     
  2654                           ;pwm.c: 24: void pwmSet(unsigned char porcento);pwm.c: 25: {;pwm.c: 31:  unsigned int va
      +                          l = ((unsigned int)porcento) *(PR2+1);
  2655  0017C0  0E01               	movlw	1
  2656  0017C2  24CB               	addwf	203,w,c	;volatile
  2657  0017C4  6E1F               	movwf	___wmul@multiplier^0,c
  2658  0017C6  6A20               	clrf	(___wmul@multiplier+1)^0,c
  2659  0017C8  0E00               	movlw	0
  2660  0017CA  2220               	addwfc	(___wmul@multiplier+1)^0,f,c
  2661  0017CC  C028  F021         	movff	pwmSet@porcento,___wmul@multiplicand
  2662  0017D0  6A22               	clrf	(___wmul@multiplicand+1)^0,c
  2663  0017D2  EC84  F00E         	call	___wmul	;wreg free
  2664  0017D6  C01F  F029         	movff	?___wmul,pwmSet@val
  2665  0017DA  C020  F02A         	movff	?___wmul+1,pwmSet@val+1
  2666  0017DE                     
  2667                           ;pwm.c: 33:     val = val / 25;
  2668  0017DE  C029  F01F         	movff	pwmSet@val,___lwdiv@dividend
  2669  0017E2  C02A  F020         	movff	pwmSet@val+1,___lwdiv@dividend+1
  2670  0017E6  0E00               	movlw	0
  2671  0017E8  6E22               	movwf	(___lwdiv@divisor+1)^0,c
  2672  0017EA  0E19               	movlw	25
  2673  0017EC  6E21               	movwf	___lwdiv@divisor^0,c
  2674  0017EE  ECA5  F00B         	call	___lwdiv	;wreg free
  2675  0017F2  C01F  F029         	movff	?___lwdiv,pwmSet@val
  2676  0017F6  C020  F02A         	movff	?___lwdiv+1,pwmSet@val+1
  2677  0017FA                     
  2678                           ;pwm.c: 35:  val &= 0x03ff;
  2679  0017FA  0EFF               	movlw	255
  2680  0017FC  1629               	andwf	pwmSet@val^0,f,c
  2681  0017FE  0E03               	movlw	3
  2682  001800  162A               	andwf	(pwmSet@val+1)^0,f,c
  2683  001802                     
  2684                           ;pwm.c: 37:  CCPR2L = val >> 2;
  2685  001802  C029  F026         	movff	pwmSet@val,??_pwmSet
  2686  001806  C02A  F027         	movff	pwmSet@val+1,??_pwmSet+1
  2687  00180A  90D8               	bcf	status,0,c
  2688  00180C  3227               	rrcf	(??_pwmSet+1)^0,f,c
  2689  00180E  3226               	rrcf	??_pwmSet^0,f,c
  2690  001810  90D8               	bcf	status,0,c
  2691  001812  3227               	rrcf	(??_pwmSet+1)^0,f,c
  2692  001814  3226               	rrcf	??_pwmSet^0,f,c
  2693  001816  5026               	movf	??_pwmSet^0,w,c
  2694  001818  6EBB               	movwf	187,c	;volatile
  2695  00181A                     
  2696                           ;pwm.c: 39:  CCP2CON |= (val & 0x0003) << 4;
  2697  00181A  C029  F026         	movff	pwmSet@val,??_pwmSet	;volatile
  2698  00181E  0E03               	movlw	3
  2699  001820  1626               	andwf	??_pwmSet^0,f,c
  2700  001822  3826               	swapf	??_pwmSet^0,w,c
  2701  001824  0BF0               	andlw	240
  2702  001826  12BA               	iorwf	186,f,c	;volatile
  2703  001828  0012               	return		;funcret
  2704  00182A                     __end_of_pwmSet:
  2705                           	callstack 0
  2706                           
  2707 ;; *************** function ___wmul *****************
  2708 ;; Defined at:
  2709 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  2710 ;; Parameters:    Size  Location     Type
  2711 ;;  multiplier      2    0[COMRAM] unsigned int 
  2712 ;;  multiplicand    2    2[COMRAM] unsigned int 
  2713 ;; Auto vars:     Size  Location     Type
  2714 ;;  product         2    4[COMRAM] unsigned int 
  2715 ;; Return value:  Size  Location     Type
  2716 ;;                  2    0[COMRAM] unsigned int 
  2717 ;; Registers used:
  2718 ;;		wreg, status,2, status,0, prodl, prodh
  2719 ;; Tracked objects:
  2720 ;;		On entry : 0/0
  2721 ;;		On exit  : 0/0
  2722 ;;		Unchanged: 0/0
  2723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2724 ;;      Params:         4       0       0       0       0       0       0
  2725 ;;      Locals:         2       0       0       0       0       0       0
  2726 ;;      Temps:          0       0       0       0       0       0       0
  2727 ;;      Totals:         6       0       0       0       0       0       0
  2728 ;;Total ram usage:        6 bytes
  2729 ;; Hardware stack levels used: 1
  2730 ;; This function calls:
  2731 ;;		Nothing
  2732 ;; This function is called by:
  2733 ;;		_pwmSet
  2734 ;;		_bcd2dec
  2735 ;; This function uses a non-reentrant model
  2736 ;;
  2737                           
  2738                           	psect	text17
  2739  001D08                     __ptext17:
  2740                           	callstack 0
  2741  001D08                     ___wmul:
  2742                           	callstack 28
  2743  001D08  501F               	movf	___wmul@multiplier^0,w,c
  2744  001D0A  0221               	mulwf	___wmul@multiplicand^0,c
  2745  001D0C  CFF3 F023          	movff	prodl,___wmul@product
  2746  001D10  CFF4 F024          	movff	prodh,___wmul@product+1
  2747  001D14  501F               	movf	___wmul@multiplier^0,w,c
  2748  001D16  0222               	mulwf	(___wmul@multiplicand+1)^0,c
  2749  001D18  50F3               	movf	243,w,c
  2750  001D1A  2624               	addwf	(___wmul@product+1)^0,f,c
  2751  001D1C  5020               	movf	(___wmul@multiplier+1)^0,w,c
  2752  001D1E  0221               	mulwf	___wmul@multiplicand^0,c
  2753  001D20  50F3               	movf	243,w,c
  2754  001D22  2624               	addwf	(___wmul@product+1)^0,f,c
  2755  001D24  C023  F01F         	movff	___wmul@product,?___wmul
  2756  001D28  C024  F020         	movff	___wmul@product+1,?___wmul+1
  2757  001D2C  0012               	return		;funcret
  2758  001D2E                     __end_of___wmul:
  2759                           	callstack 0
  2760                           
  2761 ;; *************** function ___lwdiv *****************
  2762 ;; Defined at:
  2763 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lwdiv.c"
  2764 ;; Parameters:    Size  Location     Type
  2765 ;;  dividend        2    0[COMRAM] unsigned int 
  2766 ;;  divisor         2    2[COMRAM] unsigned int 
  2767 ;; Auto vars:     Size  Location     Type
  2768 ;;  quotient        2    4[COMRAM] unsigned int 
  2769 ;;  counter         1    6[COMRAM] unsigned char 
  2770 ;; Return value:  Size  Location     Type
  2771 ;;                  2    0[COMRAM] unsigned int 
  2772 ;; Registers used:
  2773 ;;		wreg, status,2, status,0
  2774 ;; Tracked objects:
  2775 ;;		On entry : 0/0
  2776 ;;		On exit  : 0/0
  2777 ;;		Unchanged: 0/0
  2778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2779 ;;      Params:         4       0       0       0       0       0       0
  2780 ;;      Locals:         3       0       0       0       0       0       0
  2781 ;;      Temps:          0       0       0       0       0       0       0
  2782 ;;      Totals:         7       0       0       0       0       0       0
  2783 ;;Total ram usage:        7 bytes
  2784 ;; Hardware stack levels used: 1
  2785 ;; This function calls:
  2786 ;;		Nothing
  2787 ;; This function is called by:
  2788 ;;		_pwmSet
  2789 ;;		_explosion
  2790 ;; This function uses a non-reentrant model
  2791 ;;
  2792                           
  2793                           	psect	text18
  2794  00174A                     __ptext18:
  2795                           	callstack 0
  2796  00174A                     ___lwdiv:
  2797                           	callstack 28
  2798  00174A  0E00               	movlw	0
  2799  00174C  6E24               	movwf	(___lwdiv@quotient+1)^0,c
  2800  00174E  0E00               	movlw	0
  2801  001750  6E23               	movwf	___lwdiv@quotient^0,c
  2802  001752  5021               	movf	___lwdiv@divisor^0,w,c
  2803  001754  1022               	iorwf	(___lwdiv@divisor+1)^0,w,c
  2804  001756  B4D8               	btfsc	status,2,c
  2805  001758  EFB0  F00B         	goto	u1971
  2806  00175C  EFB2  F00B         	goto	u1970
  2807  001760                     u1971:
  2808  001760  EFDA  F00B         	goto	l993
  2809  001764                     u1970:
  2810  001764  0E01               	movlw	1
  2811  001766  6E25               	movwf	___lwdiv@counter^0,c
  2812  001768  EFBA  F00B         	goto	l2331
  2813  00176C                     l2329:
  2814  00176C  90D8               	bcf	status,0,c
  2815  00176E  3621               	rlcf	___lwdiv@divisor^0,f,c
  2816  001770  3622               	rlcf	(___lwdiv@divisor+1)^0,f,c
  2817  001772  2A25               	incf	___lwdiv@counter^0,f,c
  2818  001774                     l2331:
  2819  001774  AE22               	btfss	(___lwdiv@divisor+1)^0,7,c
  2820  001776  EFBF  F00B         	goto	u1981
  2821  00177A  EFC1  F00B         	goto	u1980
  2822  00177E                     u1981:
  2823  00177E  EFB6  F00B         	goto	l2329
  2824  001782                     u1980:
  2825  001782                     l2333:
  2826  001782  90D8               	bcf	status,0,c
  2827  001784  3623               	rlcf	___lwdiv@quotient^0,f,c
  2828  001786  3624               	rlcf	(___lwdiv@quotient+1)^0,f,c
  2829  001788  5021               	movf	___lwdiv@divisor^0,w,c
  2830  00178A  5C1F               	subwf	___lwdiv@dividend^0,w,c
  2831  00178C  5022               	movf	(___lwdiv@divisor+1)^0,w,c
  2832  00178E  5820               	subwfb	(___lwdiv@dividend+1)^0,w,c
  2833  001790  A0D8               	btfss	status,0,c
  2834  001792  EFCD  F00B         	goto	u1991
  2835  001796  EFCF  F00B         	goto	u1990
  2836  00179A                     u1991:
  2837  00179A  EFD4  F00B         	goto	l2341
  2838  00179E                     u1990:
  2839  00179E  5021               	movf	___lwdiv@divisor^0,w,c
  2840  0017A0  5E1F               	subwf	___lwdiv@dividend^0,f,c
  2841  0017A2  5022               	movf	(___lwdiv@divisor+1)^0,w,c
  2842  0017A4  5A20               	subwfb	(___lwdiv@dividend+1)^0,f,c
  2843  0017A6  8023               	bsf	___lwdiv@quotient^0,0,c
  2844  0017A8                     l2341:
  2845  0017A8  90D8               	bcf	status,0,c
  2846  0017AA  3222               	rrcf	(___lwdiv@divisor+1)^0,f,c
  2847  0017AC  3221               	rrcf	___lwdiv@divisor^0,f,c
  2848  0017AE  2E25               	decfsz	___lwdiv@counter^0,f,c
  2849  0017B0  EFC1  F00B         	goto	l2333
  2850  0017B4                     l993:
  2851  0017B4  C023  F01F         	movff	___lwdiv@quotient,?___lwdiv
  2852  0017B8  C024  F020         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2853  0017BC  0012               	return		;funcret
  2854  0017BE                     __end_of___lwdiv:
  2855                           	callstack 0
  2856                           
  2857 ;; *************** function _pwmFrequency *****************
  2858 ;; Defined at:
  2859 ;;		line 44 in file "pwm.c"
  2860 ;; Parameters:    Size  Location     Type
  2861 ;;  freq            2   14[COMRAM] unsigned int 
  2862 ;; Auto vars:     Size  Location     Type
  2863 ;;		None
  2864 ;; Return value:  Size  Location     Type
  2865 ;;                  1    wreg      void 
  2866 ;; Registers used:
  2867 ;;		wreg, status,2, status,0, cstack
  2868 ;; Tracked objects:
  2869 ;;		On entry : 0/0
  2870 ;;		On exit  : 0/0
  2871 ;;		Unchanged: 0/0
  2872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2873 ;;      Params:         2       0       0       0       0       0       0
  2874 ;;      Locals:         0       0       0       0       0       0       0
  2875 ;;      Temps:          0       0       0       0       0       0       0
  2876 ;;      Totals:         2       0       0       0       0       0       0
  2877 ;;Total ram usage:        2 bytes
  2878 ;; Hardware stack levels used: 1
  2879 ;; Hardware stack levels required when called: 1
  2880 ;; This function calls:
  2881 ;;		___aldiv
  2882 ;; This function is called by:
  2883 ;;		_pwmInit
  2884 ;;		_explosion
  2885 ;; This function uses a non-reentrant model
  2886 ;;
  2887                           
  2888                           	psect	text19
  2889  001D2E                     __ptext19:
  2890                           	callstack 0
  2891  001D2E                     _pwmFrequency:
  2892                           	callstack 28
  2893  001D2E                     
  2894                           ;pwm.c: 44: void pwmFrequency(unsigned int freq);pwm.c: 45: {;pwm.c: 48:  PR2 = (125000l
      +                          /(freq)) - 1;
  2895  001D2E  0E48               	movlw	72
  2896  001D30  6E1F               	movwf	___aldiv@dividend^0,c
  2897  001D32  0EE8               	movlw	232
  2898  001D34  6E20               	movwf	(___aldiv@dividend+1)^0,c
  2899  001D36  0E01               	movlw	1
  2900  001D38  6E21               	movwf	(___aldiv@dividend+2)^0,c
  2901  001D3A  0E00               	movlw	0
  2902  001D3C  6E22               	movwf	(___aldiv@dividend+3)^0,c
  2903  001D3E  C02D  F023         	movff	pwmFrequency@freq,___aldiv@divisor
  2904  001D42  C02E  F024         	movff	pwmFrequency@freq+1,___aldiv@divisor+1
  2905  001D46  6A25               	clrf	(___aldiv@divisor+2)^0,c
  2906  001D48  6A26               	clrf	(___aldiv@divisor+3)^0,c
  2907  001D4A  EC1C  F009         	call	___aldiv	;wreg free
  2908  001D4E  041F               	decf	?___aldiv^0,w,c
  2909  001D50  6ECB               	movwf	203,c	;volatile
  2910  001D52  0012               	return		;funcret
  2911  001D54                     __end_of_pwmFrequency:
  2912                           	callstack 0
  2913                           
  2914 ;; *************** function ___aldiv *****************
  2915 ;; Defined at:
  2916 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aldiv.c"
  2917 ;; Parameters:    Size  Location     Type
  2918 ;;  dividend        4    0[COMRAM] long 
  2919 ;;  divisor         4    4[COMRAM] long 
  2920 ;; Auto vars:     Size  Location     Type
  2921 ;;  quotient        4   10[COMRAM] long 
  2922 ;;  sign            1    9[COMRAM] unsigned char 
  2923 ;;  counter         1    8[COMRAM] unsigned char 
  2924 ;; Return value:  Size  Location     Type
  2925 ;;                  4    0[COMRAM] long 
  2926 ;; Registers used:
  2927 ;;		wreg, status,2, status,0
  2928 ;; Tracked objects:
  2929 ;;		On entry : 0/0
  2930 ;;		On exit  : 0/0
  2931 ;;		Unchanged: 0/0
  2932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2933 ;;      Params:         8       0       0       0       0       0       0
  2934 ;;      Locals:         6       0       0       0       0       0       0
  2935 ;;      Temps:          0       0       0       0       0       0       0
  2936 ;;      Totals:        14       0       0       0       0       0       0
  2937 ;;Total ram usage:       14 bytes
  2938 ;; Hardware stack levels used: 1
  2939 ;; This function calls:
  2940 ;;		Nothing
  2941 ;; This function is called by:
  2942 ;;		_pwmFrequency
  2943 ;; This function uses a non-reentrant model
  2944 ;;
  2945                           
  2946                           	psect	text20
  2947  001238                     __ptext20:
  2948                           	callstack 0
  2949  001238                     ___aldiv:
  2950                           	callstack 28
  2951  001238  0E00               	movlw	0
  2952  00123A  6E28               	movwf	___aldiv@sign^0,c
  2953  00123C  BE26               	btfsc	(___aldiv@divisor+3)^0,7,c
  2954  00123E  EF25  F009         	goto	u1910
  2955  001242  EF23  F009         	goto	u1911
  2956  001246                     u1911:
  2957  001246  EF2F  F009         	goto	l2287
  2958  00124A                     u1910:
  2959  00124A  1E26               	comf	(___aldiv@divisor+3)^0,f,c
  2960  00124C  1E25               	comf	(___aldiv@divisor+2)^0,f,c
  2961  00124E  1E24               	comf	(___aldiv@divisor+1)^0,f,c
  2962  001250  6C23               	negf	___aldiv@divisor^0,c
  2963  001252  0E00               	movlw	0
  2964  001254  2224               	addwfc	(___aldiv@divisor+1)^0,f,c
  2965  001256  2225               	addwfc	(___aldiv@divisor+2)^0,f,c
  2966  001258  2226               	addwfc	(___aldiv@divisor+3)^0,f,c
  2967  00125A  0E01               	movlw	1
  2968  00125C  6E28               	movwf	___aldiv@sign^0,c
  2969  00125E                     l2287:
  2970  00125E  BE22               	btfsc	(___aldiv@dividend+3)^0,7,c
  2971  001260  EF36  F009         	goto	u1920
  2972  001264  EF34  F009         	goto	u1921
  2973  001268                     u1921:
  2974  001268  EF40  F009         	goto	l2293
  2975  00126C                     u1920:
  2976  00126C  1E22               	comf	(___aldiv@dividend+3)^0,f,c
  2977  00126E  1E21               	comf	(___aldiv@dividend+2)^0,f,c
  2978  001270  1E20               	comf	(___aldiv@dividend+1)^0,f,c
  2979  001272  6C1F               	negf	___aldiv@dividend^0,c
  2980  001274  0E00               	movlw	0
  2981  001276  2220               	addwfc	(___aldiv@dividend+1)^0,f,c
  2982  001278  2221               	addwfc	(___aldiv@dividend+2)^0,f,c
  2983  00127A  2222               	addwfc	(___aldiv@dividend+3)^0,f,c
  2984  00127C  0E01               	movlw	1
  2985  00127E  1A28               	xorwf	___aldiv@sign^0,f,c
  2986  001280                     l2293:
  2987  001280  0E00               	movlw	0
  2988  001282  6E29               	movwf	___aldiv@quotient^0,c
  2989  001284  0E00               	movlw	0
  2990  001286  6E2A               	movwf	(___aldiv@quotient+1)^0,c
  2991  001288  0E00               	movlw	0
  2992  00128A  6E2B               	movwf	(___aldiv@quotient+2)^0,c
  2993  00128C  0E00               	movlw	0
  2994  00128E  6E2C               	movwf	(___aldiv@quotient+3)^0,c
  2995  001290  5023               	movf	___aldiv@divisor^0,w,c
  2996  001292  1024               	iorwf	(___aldiv@divisor+1)^0,w,c
  2997  001294  1025               	iorwf	(___aldiv@divisor+2)^0,w,c
  2998  001296  1026               	iorwf	(___aldiv@divisor+3)^0,w,c
  2999  001298  B4D8               	btfsc	status,2,c
  3000  00129A  EF51  F009         	goto	u1931
  3001  00129E  EF53  F009         	goto	u1930
  3002  0012A2                     u1931:
  3003  0012A2  EF89  F009         	goto	l2315
  3004  0012A6                     u1930:
  3005  0012A6  0E01               	movlw	1
  3006  0012A8  6E27               	movwf	___aldiv@counter^0,c
  3007  0012AA  EF5D  F009         	goto	l2301
  3008  0012AE                     l2299:
  3009  0012AE  90D8               	bcf	status,0,c
  3010  0012B0  3623               	rlcf	___aldiv@divisor^0,f,c
  3011  0012B2  3624               	rlcf	(___aldiv@divisor+1)^0,f,c
  3012  0012B4  3625               	rlcf	(___aldiv@divisor+2)^0,f,c
  3013  0012B6  3626               	rlcf	(___aldiv@divisor+3)^0,f,c
  3014  0012B8  2A27               	incf	___aldiv@counter^0,f,c
  3015  0012BA                     l2301:
  3016  0012BA  AE26               	btfss	(___aldiv@divisor+3)^0,7,c
  3017  0012BC  EF62  F009         	goto	u1941
  3018  0012C0  EF64  F009         	goto	u1940
  3019  0012C4                     u1941:
  3020  0012C4  EF57  F009         	goto	l2299
  3021  0012C8                     u1940:
  3022  0012C8                     l2303:
  3023  0012C8  90D8               	bcf	status,0,c
  3024  0012CA  3629               	rlcf	___aldiv@quotient^0,f,c
  3025  0012CC  362A               	rlcf	(___aldiv@quotient+1)^0,f,c
  3026  0012CE  362B               	rlcf	(___aldiv@quotient+2)^0,f,c
  3027  0012D0  362C               	rlcf	(___aldiv@quotient+3)^0,f,c
  3028  0012D2  5023               	movf	___aldiv@divisor^0,w,c
  3029  0012D4  5C1F               	subwf	___aldiv@dividend^0,w,c
  3030  0012D6  5024               	movf	(___aldiv@divisor+1)^0,w,c
  3031  0012D8  5820               	subwfb	(___aldiv@dividend+1)^0,w,c
  3032  0012DA  5025               	movf	(___aldiv@divisor+2)^0,w,c
  3033  0012DC  5821               	subwfb	(___aldiv@dividend+2)^0,w,c
  3034  0012DE  5026               	movf	(___aldiv@divisor+3)^0,w,c
  3035  0012E0  5822               	subwfb	(___aldiv@dividend+3)^0,w,c
  3036  0012E2  A0D8               	btfss	status,0,c
  3037  0012E4  EF76  F009         	goto	u1951
  3038  0012E8  EF78  F009         	goto	u1950
  3039  0012EC                     u1951:
  3040  0012EC  EF81  F009         	goto	l2311
  3041  0012F0                     u1950:
  3042  0012F0  5023               	movf	___aldiv@divisor^0,w,c
  3043  0012F2  5E1F               	subwf	___aldiv@dividend^0,f,c
  3044  0012F4  5024               	movf	(___aldiv@divisor+1)^0,w,c
  3045  0012F6  5A20               	subwfb	(___aldiv@dividend+1)^0,f,c
  3046  0012F8  5025               	movf	(___aldiv@divisor+2)^0,w,c
  3047  0012FA  5A21               	subwfb	(___aldiv@dividend+2)^0,f,c
  3048  0012FC  5026               	movf	(___aldiv@divisor+3)^0,w,c
  3049  0012FE  5A22               	subwfb	(___aldiv@dividend+3)^0,f,c
  3050  001300  8029               	bsf	___aldiv@quotient^0,0,c
  3051  001302                     l2311:
  3052  001302  90D8               	bcf	status,0,c
  3053  001304  3226               	rrcf	(___aldiv@divisor+3)^0,f,c
  3054  001306  3225               	rrcf	(___aldiv@divisor+2)^0,f,c
  3055  001308  3224               	rrcf	(___aldiv@divisor+1)^0,f,c
  3056  00130A  3223               	rrcf	___aldiv@divisor^0,f,c
  3057  00130C  2E27               	decfsz	___aldiv@counter^0,f,c
  3058  00130E  EF64  F009         	goto	l2303
  3059  001312                     l2315:
  3060  001312  5028               	movf	___aldiv@sign^0,w,c
  3061  001314  B4D8               	btfsc	status,2,c
  3062  001316  EF8F  F009         	goto	u1961
  3063  00131A  EF91  F009         	goto	u1960
  3064  00131E                     u1961:
  3065  00131E  EF99  F009         	goto	l2319
  3066  001322                     u1960:
  3067  001322  1E2C               	comf	(___aldiv@quotient+3)^0,f,c
  3068  001324  1E2B               	comf	(___aldiv@quotient+2)^0,f,c
  3069  001326  1E2A               	comf	(___aldiv@quotient+1)^0,f,c
  3070  001328  6C29               	negf	___aldiv@quotient^0,c
  3071  00132A  0E00               	movlw	0
  3072  00132C  222A               	addwfc	(___aldiv@quotient+1)^0,f,c
  3073  00132E  222B               	addwfc	(___aldiv@quotient+2)^0,f,c
  3074  001330  222C               	addwfc	(___aldiv@quotient+3)^0,f,c
  3075  001332                     l2319:
  3076  001332  C029  F01F         	movff	___aldiv@quotient,?___aldiv
  3077  001336  C02A  F020         	movff	___aldiv@quotient+1,?___aldiv+1
  3078  00133A  C02B  F021         	movff	___aldiv@quotient+2,?___aldiv+2
  3079  00133E  C02C  F022         	movff	___aldiv@quotient+3,?___aldiv+3
  3080  001342  0012               	return		;funcret
  3081  001344                     __end_of___aldiv:
  3082                           	callstack 0
  3083                           
  3084 ;; *************** function ___lwmod *****************
  3085 ;; Defined at:
  3086 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lwmod.c"
  3087 ;; Parameters:    Size  Location     Type
  3088 ;;  dividend        2    7[COMRAM] unsigned int 
  3089 ;;  divisor         2    9[COMRAM] unsigned int 
  3090 ;; Auto vars:     Size  Location     Type
  3091 ;;  counter         1   11[COMRAM] unsigned char 
  3092 ;; Return value:  Size  Location     Type
  3093 ;;                  2    7[COMRAM] unsigned int 
  3094 ;; Registers used:
  3095 ;;		wreg, status,2, status,0
  3096 ;; Tracked objects:
  3097 ;;		On entry : 0/0
  3098 ;;		On exit  : 0/0
  3099 ;;		Unchanged: 0/0
  3100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3101 ;;      Params:         4       0       0       0       0       0       0
  3102 ;;      Locals:         1       0       0       0       0       0       0
  3103 ;;      Temps:          0       0       0       0       0       0       0
  3104 ;;      Totals:         5       0       0       0       0       0       0
  3105 ;;Total ram usage:        5 bytes
  3106 ;; Hardware stack levels used: 1
  3107 ;; This function calls:
  3108 ;;		Nothing
  3109 ;; This function is called by:
  3110 ;;		_explosion
  3111 ;; This function uses a non-reentrant model
  3112 ;;
  3113                           
  3114                           	psect	text21
  3115  0018FA                     __ptext21:
  3116                           	callstack 0
  3117  0018FA                     ___lwmod:
  3118                           	callstack 29
  3119  0018FA  5028               	movf	___lwmod@divisor^0,w,c
  3120  0018FC  1029               	iorwf	(___lwmod@divisor+1)^0,w,c
  3121  0018FE  B4D8               	btfsc	status,2,c
  3122  001900  EF84  F00C         	goto	u2381
  3123  001904  EF86  F00C         	goto	u2380
  3124  001908                     u2381:
  3125  001908  EFAA  F00C         	goto	l1003
  3126  00190C                     u2380:
  3127  00190C  0E01               	movlw	1
  3128  00190E  6E2A               	movwf	___lwmod@counter^0,c
  3129  001910  EF8E  F00C         	goto	l2601
  3130  001914                     l2599:
  3131  001914  90D8               	bcf	status,0,c
  3132  001916  3628               	rlcf	___lwmod@divisor^0,f,c
  3133  001918  3629               	rlcf	(___lwmod@divisor+1)^0,f,c
  3134  00191A  2A2A               	incf	___lwmod@counter^0,f,c
  3135  00191C                     l2601:
  3136  00191C  AE29               	btfss	(___lwmod@divisor+1)^0,7,c
  3137  00191E  EF93  F00C         	goto	u2391
  3138  001922  EF95  F00C         	goto	u2390
  3139  001926                     u2391:
  3140  001926  EF8A  F00C         	goto	l2599
  3141  00192A                     u2390:
  3142  00192A                     l2603:
  3143  00192A  5028               	movf	___lwmod@divisor^0,w,c
  3144  00192C  5C26               	subwf	___lwmod@dividend^0,w,c
  3145  00192E  5029               	movf	(___lwmod@divisor+1)^0,w,c
  3146  001930  5827               	subwfb	(___lwmod@dividend+1)^0,w,c
  3147  001932  A0D8               	btfss	status,0,c
  3148  001934  EF9E  F00C         	goto	u2401
  3149  001938  EFA0  F00C         	goto	u2400
  3150  00193C                     u2401:
  3151  00193C  EFA4  F00C         	goto	l2607
  3152  001940                     u2400:
  3153  001940  5028               	movf	___lwmod@divisor^0,w,c
  3154  001942  5E26               	subwf	___lwmod@dividend^0,f,c
  3155  001944  5029               	movf	(___lwmod@divisor+1)^0,w,c
  3156  001946  5A27               	subwfb	(___lwmod@dividend+1)^0,f,c
  3157  001948                     l2607:
  3158  001948  90D8               	bcf	status,0,c
  3159  00194A  3229               	rrcf	(___lwmod@divisor+1)^0,f,c
  3160  00194C  3228               	rrcf	___lwmod@divisor^0,f,c
  3161  00194E  2E2A               	decfsz	___lwmod@counter^0,f,c
  3162  001950  EF95  F00C         	goto	l2603
  3163  001954                     l1003:
  3164  001954  C026  F026         	movff	___lwmod@dividend,?___lwmod
  3165  001958  C027  F027         	movff	___lwmod@dividend+1,?___lwmod+1
  3166  00195C  0012               	return		;funcret
  3167  00195E                     __end_of___lwmod:
  3168                           	callstack 0
  3169                           
  3170 ;; *************** function ___awmod *****************
  3171 ;; Defined at:
  3172 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  3173 ;; Parameters:    Size  Location     Type
  3174 ;;  dividend        2    8[COMRAM] int 
  3175 ;;  divisor         2   10[COMRAM] int 
  3176 ;; Auto vars:     Size  Location     Type
  3177 ;;  sign            1   13[COMRAM] unsigned char 
  3178 ;;  counter         1   12[COMRAM] unsigned char 
  3179 ;; Return value:  Size  Location     Type
  3180 ;;                  2    8[COMRAM] int 
  3181 ;; Registers used:
  3182 ;;		wreg, status,2, status,0
  3183 ;; Tracked objects:
  3184 ;;		On entry : 0/0
  3185 ;;		On exit  : 0/0
  3186 ;;		Unchanged: 0/0
  3187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3188 ;;      Params:         4       0       0       0       0       0       0
  3189 ;;      Locals:         2       0       0       0       0       0       0
  3190 ;;      Temps:          0       0       0       0       0       0       0
  3191 ;;      Totals:         6       0       0       0       0       0       0
  3192 ;;Total ram usage:        6 bytes
  3193 ;; Hardware stack levels used: 1
  3194 ;; This function calls:
  3195 ;;		Nothing
  3196 ;; This function is called by:
  3197 ;;		_explosion
  3198 ;;		_dec2bcd
  3199 ;;		_lcdNumber
  3200 ;; This function uses a non-reentrant model
  3201 ;;
  3202                           
  3203                           	psect	text22
  3204  00158E                     __ptext22:
  3205                           	callstack 0
  3206  00158E                     ___awmod:
  3207                           	callstack 29
  3208  00158E  0E00               	movlw	0
  3209  001590  6E2C               	movwf	___awmod@sign^0,c
  3210  001592  BE28               	btfsc	(___awmod@dividend+1)^0,7,c
  3211  001594  EFD0  F00A         	goto	u2320
  3212  001598  EFCE  F00A         	goto	u2321
  3213  00159C                     u2321:
  3214  00159C  EFD6  F00A         	goto	l2567
  3215  0015A0                     u2320:
  3216  0015A0  6C27               	negf	___awmod@dividend^0,c
  3217  0015A2  1E28               	comf	(___awmod@dividend+1)^0,f,c
  3218  0015A4  B0D8               	btfsc	status,0,c
  3219  0015A6  2A28               	incf	(___awmod@dividend+1)^0,f,c
  3220  0015A8  0E01               	movlw	1
  3221  0015AA  6E2C               	movwf	___awmod@sign^0,c
  3222  0015AC                     l2567:
  3223  0015AC  BE2A               	btfsc	(___awmod@divisor+1)^0,7,c
  3224  0015AE  EFDD  F00A         	goto	u2330
  3225  0015B2  EFDB  F00A         	goto	u2331
  3226  0015B6                     u2331:
  3227  0015B6  EFE1  F00A         	goto	l2571
  3228  0015BA                     u2330:
  3229  0015BA  6C29               	negf	___awmod@divisor^0,c
  3230  0015BC  1E2A               	comf	(___awmod@divisor+1)^0,f,c
  3231  0015BE  B0D8               	btfsc	status,0,c
  3232  0015C0  2A2A               	incf	(___awmod@divisor+1)^0,f,c
  3233  0015C2                     l2571:
  3234  0015C2  5029               	movf	___awmod@divisor^0,w,c
  3235  0015C4  102A               	iorwf	(___awmod@divisor+1)^0,w,c
  3236  0015C6  B4D8               	btfsc	status,2,c
  3237  0015C8  EFE8  F00A         	goto	u2341
  3238  0015CC  EFEA  F00A         	goto	u2340
  3239  0015D0                     u2341:
  3240  0015D0  EF0E  F00B         	goto	l2587
  3241  0015D4                     u2340:
  3242  0015D4  0E01               	movlw	1
  3243  0015D6  6E2B               	movwf	___awmod@counter^0,c
  3244  0015D8  EFF2  F00A         	goto	l2577
  3245  0015DC                     l2575:
  3246  0015DC  90D8               	bcf	status,0,c
  3247  0015DE  3629               	rlcf	___awmod@divisor^0,f,c
  3248  0015E0  362A               	rlcf	(___awmod@divisor+1)^0,f,c
  3249  0015E2  2A2B               	incf	___awmod@counter^0,f,c
  3250  0015E4                     l2577:
  3251  0015E4  AE2A               	btfss	(___awmod@divisor+1)^0,7,c
  3252  0015E6  EFF7  F00A         	goto	u2351
  3253  0015EA  EFF9  F00A         	goto	u2350
  3254  0015EE                     u2351:
  3255  0015EE  EFEE  F00A         	goto	l2575
  3256  0015F2                     u2350:
  3257  0015F2                     l2579:
  3258  0015F2  5029               	movf	___awmod@divisor^0,w,c
  3259  0015F4  5C27               	subwf	___awmod@dividend^0,w,c
  3260  0015F6  502A               	movf	(___awmod@divisor+1)^0,w,c
  3261  0015F8  5828               	subwfb	(___awmod@dividend+1)^0,w,c
  3262  0015FA  A0D8               	btfss	status,0,c
  3263  0015FC  EF02  F00B         	goto	u2361
  3264  001600  EF04  F00B         	goto	u2360
  3265  001604                     u2361:
  3266  001604  EF08  F00B         	goto	l2583
  3267  001608                     u2360:
  3268  001608  5029               	movf	___awmod@divisor^0,w,c
  3269  00160A  5E27               	subwf	___awmod@dividend^0,f,c
  3270  00160C  502A               	movf	(___awmod@divisor+1)^0,w,c
  3271  00160E  5A28               	subwfb	(___awmod@dividend+1)^0,f,c
  3272  001610                     l2583:
  3273  001610  90D8               	bcf	status,0,c
  3274  001612  322A               	rrcf	(___awmod@divisor+1)^0,f,c
  3275  001614  3229               	rrcf	___awmod@divisor^0,f,c
  3276  001616  2E2B               	decfsz	___awmod@counter^0,f,c
  3277  001618  EFF9  F00A         	goto	l2579
  3278  00161C                     l2587:
  3279  00161C  502C               	movf	___awmod@sign^0,w,c
  3280  00161E  B4D8               	btfsc	status,2,c
  3281  001620  EF14  F00B         	goto	u2371
  3282  001624  EF16  F00B         	goto	u2370
  3283  001628                     u2371:
  3284  001628  EF1A  F00B         	goto	l2591
  3285  00162C                     u2370:
  3286  00162C  6C27               	negf	___awmod@dividend^0,c
  3287  00162E  1E28               	comf	(___awmod@dividend+1)^0,f,c
  3288  001630  B0D8               	btfsc	status,0,c
  3289  001632  2A28               	incf	(___awmod@dividend+1)^0,f,c
  3290  001634                     l2591:
  3291  001634  C027  F027         	movff	___awmod@dividend,?___awmod
  3292  001638  C028  F028         	movff	___awmod@dividend+1,?___awmod+1
  3293  00163C  0012               	return		;funcret
  3294  00163E                     __end_of___awmod:
  3295                           	callstack 0
  3296                           
  3297 ;; *************** function ___awdiv *****************
  3298 ;; Defined at:
  3299 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  3300 ;; Parameters:    Size  Location     Type
  3301 ;;  dividend        2    0[COMRAM] int 
  3302 ;;  divisor         2    2[COMRAM] int 
  3303 ;; Auto vars:     Size  Location     Type
  3304 ;;  quotient        2    6[COMRAM] int 
  3305 ;;  sign            1    5[COMRAM] unsigned char 
  3306 ;;  counter         1    4[COMRAM] unsigned char 
  3307 ;; Return value:  Size  Location     Type
  3308 ;;                  2    0[COMRAM] int 
  3309 ;; Registers used:
  3310 ;;		wreg, status,2, status,0
  3311 ;; Tracked objects:
  3312 ;;		On entry : 0/0
  3313 ;;		On exit  : 0/0
  3314 ;;		Unchanged: 0/0
  3315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3316 ;;      Params:         4       0       0       0       0       0       0
  3317 ;;      Locals:         4       0       0       0       0       0       0
  3318 ;;      Temps:          0       0       0       0       0       0       0
  3319 ;;      Totals:         8       0       0       0       0       0       0
  3320 ;;Total ram usage:        8 bytes
  3321 ;; Hardware stack levels used: 1
  3322 ;; This function calls:
  3323 ;;		Nothing
  3324 ;; This function is called by:
  3325 ;;		_explosion
  3326 ;;		_dec2bcd
  3327 ;;		_bcd2dec
  3328 ;;		_lcdNumber
  3329 ;; This function uses a non-reentrant model
  3330 ;;
  3331                           
  3332                           	psect	text23
  3333  001416                     __ptext23:
  3334                           	callstack 0
  3335  001416                     ___awdiv:
  3336                           	callstack 29
  3337  001416  0E00               	movlw	0
  3338  001418  6E24               	movwf	___awdiv@sign^0,c
  3339  00141A  BE22               	btfsc	(___awdiv@divisor+1)^0,7,c
  3340  00141C  EF14  F00A         	goto	u2260
  3341  001420  EF12  F00A         	goto	u2261
  3342  001424                     u2261:
  3343  001424  EF1A  F00A         	goto	l2523
  3344  001428                     u2260:
  3345  001428  6C21               	negf	___awdiv@divisor^0,c
  3346  00142A  1E22               	comf	(___awdiv@divisor+1)^0,f,c
  3347  00142C  B0D8               	btfsc	status,0,c
  3348  00142E  2A22               	incf	(___awdiv@divisor+1)^0,f,c
  3349  001430  0E01               	movlw	1
  3350  001432  6E24               	movwf	___awdiv@sign^0,c
  3351  001434                     l2523:
  3352  001434  BE20               	btfsc	(___awdiv@dividend+1)^0,7,c
  3353  001436  EF21  F00A         	goto	u2270
  3354  00143A  EF1F  F00A         	goto	u2271
  3355  00143E                     u2271:
  3356  00143E  EF27  F00A         	goto	l2529
  3357  001442                     u2270:
  3358  001442  6C1F               	negf	___awdiv@dividend^0,c
  3359  001444  1E20               	comf	(___awdiv@dividend+1)^0,f,c
  3360  001446  B0D8               	btfsc	status,0,c
  3361  001448  2A20               	incf	(___awdiv@dividend+1)^0,f,c
  3362  00144A  0E01               	movlw	1
  3363  00144C  1A24               	xorwf	___awdiv@sign^0,f,c
  3364  00144E                     l2529:
  3365  00144E  0E00               	movlw	0
  3366  001450  6E26               	movwf	(___awdiv@quotient+1)^0,c
  3367  001452  0E00               	movlw	0
  3368  001454  6E25               	movwf	___awdiv@quotient^0,c
  3369  001456  5021               	movf	___awdiv@divisor^0,w,c
  3370  001458  1022               	iorwf	(___awdiv@divisor+1)^0,w,c
  3371  00145A  B4D8               	btfsc	status,2,c
  3372  00145C  EF32  F00A         	goto	u2281
  3373  001460  EF34  F00A         	goto	u2280
  3374  001464                     u2281:
  3375  001464  EF5C  F00A         	goto	l2551
  3376  001468                     u2280:
  3377  001468  0E01               	movlw	1
  3378  00146A  6E23               	movwf	___awdiv@counter^0,c
  3379  00146C  EF3C  F00A         	goto	l2537
  3380  001470                     l2535:
  3381  001470  90D8               	bcf	status,0,c
  3382  001472  3621               	rlcf	___awdiv@divisor^0,f,c
  3383  001474  3622               	rlcf	(___awdiv@divisor+1)^0,f,c
  3384  001476  2A23               	incf	___awdiv@counter^0,f,c
  3385  001478                     l2537:
  3386  001478  AE22               	btfss	(___awdiv@divisor+1)^0,7,c
  3387  00147A  EF41  F00A         	goto	u2291
  3388  00147E  EF43  F00A         	goto	u2290
  3389  001482                     u2291:
  3390  001482  EF38  F00A         	goto	l2535
  3391  001486                     u2290:
  3392  001486                     l2539:
  3393  001486  90D8               	bcf	status,0,c
  3394  001488  3625               	rlcf	___awdiv@quotient^0,f,c
  3395  00148A  3626               	rlcf	(___awdiv@quotient+1)^0,f,c
  3396  00148C  5021               	movf	___awdiv@divisor^0,w,c
  3397  00148E  5C1F               	subwf	___awdiv@dividend^0,w,c
  3398  001490  5022               	movf	(___awdiv@divisor+1)^0,w,c
  3399  001492  5820               	subwfb	(___awdiv@dividend+1)^0,w,c
  3400  001494  A0D8               	btfss	status,0,c
  3401  001496  EF4F  F00A         	goto	u2301
  3402  00149A  EF51  F00A         	goto	u2300
  3403  00149E                     u2301:
  3404  00149E  EF56  F00A         	goto	l2547
  3405  0014A2                     u2300:
  3406  0014A2  5021               	movf	___awdiv@divisor^0,w,c
  3407  0014A4  5E1F               	subwf	___awdiv@dividend^0,f,c
  3408  0014A6  5022               	movf	(___awdiv@divisor+1)^0,w,c
  3409  0014A8  5A20               	subwfb	(___awdiv@dividend+1)^0,f,c
  3410  0014AA  8025               	bsf	___awdiv@quotient^0,0,c
  3411  0014AC                     l2547:
  3412  0014AC  90D8               	bcf	status,0,c
  3413  0014AE  3222               	rrcf	(___awdiv@divisor+1)^0,f,c
  3414  0014B0  3221               	rrcf	___awdiv@divisor^0,f,c
  3415  0014B2  2E23               	decfsz	___awdiv@counter^0,f,c
  3416  0014B4  EF43  F00A         	goto	l2539
  3417  0014B8                     l2551:
  3418  0014B8  5024               	movf	___awdiv@sign^0,w,c
  3419  0014BA  B4D8               	btfsc	status,2,c
  3420  0014BC  EF62  F00A         	goto	u2311
  3421  0014C0  EF64  F00A         	goto	u2310
  3422  0014C4                     u2311:
  3423  0014C4  EF68  F00A         	goto	l2555
  3424  0014C8                     u2310:
  3425  0014C8  6C25               	negf	___awdiv@quotient^0,c
  3426  0014CA  1E26               	comf	(___awdiv@quotient+1)^0,f,c
  3427  0014CC  B0D8               	btfsc	status,0,c
  3428  0014CE  2A26               	incf	(___awdiv@quotient+1)^0,f,c
  3429  0014D0                     l2555:
  3430  0014D0  C025  F01F         	movff	___awdiv@quotient,?___awdiv
  3431  0014D4  C026  F020         	movff	___awdiv@quotient+1,?___awdiv+1
  3432  0014D8  0012               	return		;funcret
  3433  0014DA                     __end_of___awdiv:
  3434                           	callstack 0
  3435                           
  3436 ;; *************** function _checkPassword *****************
  3437 ;; Defined at:
  3438 ;;		line 35 in file "main.c"
  3439 ;; Parameters:    Size  Location     Type
  3440 ;;		None
  3441 ;; Auto vars:     Size  Location     Type
  3442 ;;  correct         2   24[COMRAM] int 
  3443 ;;  newkey          2   22[COMRAM] unsigned int 
  3444 ;;  i               1   26[COMRAM] unsigned char 
  3445 ;; Return value:  Size  Location     Type
  3446 ;;                  2  423[None  ] int 
  3447 ;; Registers used:
  3448 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3449 ;; Tracked objects:
  3450 ;;		On entry : 0/0
  3451 ;;		On exit  : 0/0
  3452 ;;		Unchanged: 0/0
  3453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3454 ;;      Params:         0       0       0       0       0       0       0
  3455 ;;      Locals:         5       0       0       0       0       0       0
  3456 ;;      Temps:          2       0       0       0       0       0       0
  3457 ;;      Totals:         7       0       0       0       0       0       0
  3458 ;;Total ram usage:        7 bytes
  3459 ;; Hardware stack levels used: 1
  3460 ;; Hardware stack levels required when called: 6
  3461 ;; This function calls:
  3462 ;;		_atraso_ms
  3463 ;;		_kpDebounce
  3464 ;;		_kpRead
  3465 ;;		_kpReadKey
  3466 ;;		_lcdChar
  3467 ;;		_lcdCommand
  3468 ;;		_lcdString
  3469 ;;		_turnOff
  3470 ;;		_turnOn
  3471 ;; This function is called by:
  3472 ;;		_main
  3473 ;; This function uses a non-reentrant model
  3474 ;;
  3475                           
  3476                           	psect	text24
  3477  000FA6                     __ptext24:
  3478                           	callstack 0
  3479  000FA6                     _checkPassword:
  3480                           	callstack 24
  3481  000FA6                     
  3482                           ;main.c: 36:     int correct;;main.c: 37:     char i = 0;
  3483  000FA6  0E00               	movlw	0
  3484  000FA8  6E39               	movwf	checkPassword@i^0,c
  3485                           
  3486                           ;main.c: 38:     unsigned int newkey = 0;
  3487  000FAA  0E00               	movlw	0
  3488  000FAC  6E36               	movwf	(checkPassword@newkey+1)^0,c
  3489  000FAE  0E00               	movlw	0
  3490  000FB0  6E35               	movwf	checkPassword@newkey^0,c
  3491  000FB2                     
  3492                           ;main.c: 39:     lcdCommand(0x01);
  3493  000FB2  0E01               	movlw	1
  3494  000FB4  ECCA  F00E         	call	_lcdCommand
  3495  000FB8                     
  3496                           ;main.c: 40:     lcdString("Password:");
  3497  000FB8  0E73               	movlw	low STR_2
  3498  000FBA  6E2D               	movwf	lcdString@msg^0,c
  3499  000FBC  0E06               	movlw	high STR_2
  3500  000FBE  6E2E               	movwf	(lcdString@msg+1)^0,c
  3501  000FC0  EC65  F00D         	call	_lcdString	;wreg free
  3502  000FC4                     
  3503                           ;main.c: 41:     lcdCommand(0xC0);
  3504  000FC4  0EC0               	movlw	192
  3505  000FC6  ECCA  F00E         	call	_lcdCommand
  3506  000FCA                     
  3507                           ;main.c: 42:     correct = 1;
  3508  000FCA  0E00               	movlw	0
  3509  000FCC  6E38               	movwf	(checkPassword@correct+1)^0,c
  3510  000FCE  0E01               	movlw	1
  3511  000FD0  6E37               	movwf	checkPassword@correct^0,c
  3512                           
  3513                           ;main.c: 43:     while (i < 8) {
  3514  000FD2  EF31  F008         	goto	l2753
  3515  000FD6                     l2735:
  3516                           
  3517                           ;main.c: 44:         kpDebounce();
  3518  000FD6  EC81  F008         	call	_kpDebounce	;wreg free
  3519  000FDA                     
  3520                           ;main.c: 45:         if ((kpReadKey() != 0) && (kpRead() != newkey)) {
  3521  000FDA  EC69  F00B         	call	_kpReadKey	;wreg free
  3522  000FDE  0900               	iorlw	0
  3523  000FE0  B4D8               	btfsc	status,2,c
  3524  000FE2  EFF5  F007         	goto	u2481
  3525  000FE6  EFF7  F007         	goto	u2480
  3526  000FEA                     u2481:
  3527  000FEA  EF31  F008         	goto	l2753
  3528  000FEE                     u2480:
  3529  000FEE  ECF9  F00E         	call	_kpRead	;wreg free
  3530  000FF2  5035               	movf	checkPassword@newkey^0,w,c
  3531  000FF4  181F               	xorwf	?_kpRead^0,w,c
  3532  000FF6  E109               	bnz	u2490
  3533  000FF8  5036               	movf	(checkPassword@newkey+1)^0,w,c
  3534  000FFA  1820               	xorwf	(?_kpRead+1)^0,w,c
  3535  000FFC  B4D8               	btfsc	status,2,c
  3536  000FFE  EF03  F008         	goto	u2491
  3537  001002  EF05  F008         	goto	u2490
  3538  001006                     u2491:
  3539  001006  EF31  F008         	goto	l2753
  3540  00100A                     u2490:
  3541  00100A                     
  3542                           ;main.c: 46:             newkey = kpRead();
  3543  00100A  ECF9  F00E         	call	_kpRead	;wreg free
  3544  00100E  C01F  F035         	movff	?_kpRead,checkPassword@newkey
  3545  001012  C020  F036         	movff	?_kpRead+1,checkPassword@newkey+1
  3546  001016                     
  3547                           ;main.c: 47:             input[i] = kpReadKey();
  3548  001016  0E01               	movlw	low _input
  3549  001018  2439               	addwf	checkPassword@i^0,w,c
  3550  00101A  6ED9               	movwf	fsr2l,c
  3551  00101C  6ADA               	clrf	fsr2h,c
  3552  00101E  0E00               	movlw	high _input
  3553  001020  22DA               	addwfc	fsr2h,f,c
  3554  001022  EC69  F00B         	call	_kpReadKey	;wreg free
  3555  001026  6EDF               	movwf	indf2,c
  3556  001028                     
  3557                           ;main.c: 48:             lcdChar('*');
  3558  001028  0E2A               	movlw	42
  3559  00102A  ECBB  F00E         	call	_lcdChar
  3560  00102E                     
  3561                           ;main.c: 49:             if (input[i] != password[i]) {
  3562  00102E  0E09               	movlw	low _password
  3563  001030  2439               	addwf	checkPassword@i^0,w,c
  3564  001032  6ED9               	movwf	fsr2l,c
  3565  001034  6ADA               	clrf	fsr2h,c
  3566  001036  0E00               	movlw	high _password
  3567  001038  22DA               	addwfc	fsr2h,f,c
  3568  00103A  0E01               	movlw	low _input
  3569  00103C  2439               	addwf	checkPassword@i^0,w,c
  3570  00103E  6EE1               	movwf	fsr1l,c
  3571  001040  6AE2               	clrf	fsr1h,c
  3572  001042  0E00               	movlw	high _input
  3573  001044  22E2               	addwfc	fsr1h,f,c
  3574  001046  50DE               	movf	postinc2,w,c
  3575  001048  18E6               	xorwf	postinc1,w,c
  3576  00104A  B4D8               	btfsc	status,2,c
  3577  00104C  EF2A  F008         	goto	u2501
  3578  001050  EF2C  F008         	goto	u2500
  3579  001054                     u2501:
  3580  001054  EF30  F008         	goto	l2751
  3581  001058                     u2500:
  3582  001058                     
  3583                           ;main.c: 50:                 correct = 0;
  3584  001058  0E00               	movlw	0
  3585  00105A  6E38               	movwf	(checkPassword@correct+1)^0,c
  3586  00105C  0E00               	movlw	0
  3587  00105E  6E37               	movwf	checkPassword@correct^0,c
  3588  001060                     l2751:
  3589                           
  3590                           ;main.c: 52:             i++;
  3591  001060  2A39               	incf	checkPassword@i^0,f,c
  3592  001062                     l2753:
  3593                           
  3594                           ;main.c: 43:     while (i < 8) {
  3595  001062  0E07               	movlw	7
  3596  001064  6439               	cpfsgt	checkPassword@i^0,c
  3597  001066  EF37  F008         	goto	u2511
  3598  00106A  EF39  F008         	goto	u2510
  3599  00106E                     u2511:
  3600  00106E  EFEB  F007         	goto	l2735
  3601  001072                     u2510:
  3602  001072                     
  3603                           ;main.c: 55:     atraso_ms(1000);
  3604  001072  0E03               	movlw	3
  3605  001074  6E20               	movwf	(atraso_ms@num+1)^0,c
  3606  001076  0EE8               	movlw	232
  3607  001078  6E1F               	movwf	atraso_ms@num^0,c
  3608  00107A  ECAF  F00C         	call	_atraso_ms	;wreg free
  3609                           
  3610                           ;main.c: 56:     lcdCommand(0x01);
  3611  00107E  0E01               	movlw	1
  3612  001080  ECCA  F00E         	call	_lcdCommand
  3613  001084                     
  3614                           ;main.c: 58:     if (correct) {
  3615  001084  5037               	movf	checkPassword@correct^0,w,c
  3616  001086  1038               	iorwf	(checkPassword@correct+1)^0,w,c
  3617  001088  B4D8               	btfsc	status,2,c
  3618  00108A  EF49  F008         	goto	u2521
  3619  00108E  EF4B  F008         	goto	u2520
  3620  001092                     u2521:
  3621  001092  EF67  F008         	goto	l2769
  3622  001096                     u2520:
  3623  001096                     
  3624                           ;main.c: 59:         lcdString("Access Granted");
  3625  001096  0E2F               	movlw	low STR_3
  3626  001098  6E2D               	movwf	lcdString@msg^0,c
  3627  00109A  0E06               	movlw	high STR_3
  3628  00109C  6E2E               	movwf	(lcdString@msg+1)^0,c
  3629  00109E  EC65  F00D         	call	_lcdString	;wreg free
  3630  0010A2                     
  3631                           ;main.c: 60:         try = 0;
  3632  0010A2  0E00               	movlw	0
  3633  0010A4  6E17               	movwf	_try^0,c
  3634  0010A6                     
  3635                           ;main.c: 61:         turnOn(2);
  3636  0010A6  0E00               	movlw	0
  3637  0010A8  6E26               	movwf	(turnOn@led+1)^0,c
  3638  0010AA  0E02               	movlw	2
  3639  0010AC  6E25               	movwf	turnOn@led^0,c
  3640  0010AE  EC15  F00C         	call	_turnOn	;wreg free
  3641  0010B2                     
  3642                           ;main.c: 62:         atraso_ms(10000);
  3643  0010B2  0E27               	movlw	39
  3644  0010B4  6E20               	movwf	(atraso_ms@num+1)^0,c
  3645  0010B6  0E10               	movlw	16
  3646  0010B8  6E1F               	movwf	atraso_ms@num^0,c
  3647  0010BA  ECAF  F00C         	call	_atraso_ms	;wreg free
  3648  0010BE                     
  3649                           ;main.c: 63:         turnOff(2);
  3650  0010BE  0E00               	movlw	0
  3651  0010C0  6E26               	movwf	(turnOff@led+1)^0,c
  3652  0010C2  0E02               	movlw	2
  3653  0010C4  6E25               	movwf	turnOff@led^0,c
  3654  0010C6  EC49  F00C         	call	_turnOff	;wreg free
  3655                           
  3656                           ;main.c: 64:     } else {
  3657  0010CA  EF80  F008         	goto	l431
  3658  0010CE                     l2769:
  3659                           
  3660                           ;main.c: 65:         lcdString("Access Denied");
  3661  0010CE  0E4D               	movlw	low STR_4
  3662  0010D0  6E2D               	movwf	lcdString@msg^0,c
  3663  0010D2  0E06               	movlw	high STR_4
  3664  0010D4  6E2E               	movwf	(lcdString@msg+1)^0,c
  3665  0010D6  EC65  F00D         	call	_lcdString	;wreg free
  3666  0010DA                     
  3667                           ;main.c: 66:         try++;
  3668  0010DA  2A17               	incf	_try^0,f,c
  3669  0010DC                     
  3670                           ;main.c: 67:         turnOn(1);
  3671  0010DC  0E00               	movlw	0
  3672  0010DE  6E26               	movwf	(turnOn@led+1)^0,c
  3673  0010E0  0E01               	movlw	1
  3674  0010E2  6E25               	movwf	turnOn@led^0,c
  3675  0010E4  EC15  F00C         	call	_turnOn	;wreg free
  3676  0010E8                     
  3677                           ;main.c: 68:         atraso_ms(3000);
  3678  0010E8  0E0B               	movlw	11
  3679  0010EA  6E20               	movwf	(atraso_ms@num+1)^0,c
  3680  0010EC  0EB8               	movlw	184
  3681  0010EE  6E1F               	movwf	atraso_ms@num^0,c
  3682  0010F0  ECAF  F00C         	call	_atraso_ms	;wreg free
  3683  0010F4                     
  3684                           ;main.c: 69:         turnOff(1);
  3685  0010F4  0E00               	movlw	0
  3686  0010F6  6E26               	movwf	(turnOff@led+1)^0,c
  3687  0010F8  0E01               	movlw	1
  3688  0010FA  6E25               	movwf	turnOff@led^0,c
  3689  0010FC  EC49  F00C         	call	_turnOff	;wreg free
  3690  001100                     l431:
  3691  001100  0012               	return		;funcret
  3692  001102                     __end_of_checkPassword:
  3693                           	callstack 0
  3694                           
  3695 ;; *************** function _turnOn *****************
  3696 ;; Defined at:
  3697 ;;		line 21 in file "rgb.c"
  3698 ;; Parameters:    Size  Location     Type
  3699 ;;  led             2    6[COMRAM] int 
  3700 ;; Auto vars:     Size  Location     Type
  3701 ;;		None
  3702 ;; Return value:  Size  Location     Type
  3703 ;;                  1    wreg      void 
  3704 ;; Registers used:
  3705 ;;		wreg, status,2, status,0, cstack
  3706 ;; Tracked objects:
  3707 ;;		On entry : 0/0
  3708 ;;		On exit  : 0/0
  3709 ;;		Unchanged: 0/0
  3710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3711 ;;      Params:         2       0       0       0       0       0       0
  3712 ;;      Locals:         0       0       0       0       0       0       0
  3713 ;;      Temps:          0       0       0       0       0       0       0
  3714 ;;      Totals:         2       0       0       0       0       0       0
  3715 ;;Total ram usage:        2 bytes
  3716 ;; Hardware stack levels used: 1
  3717 ;; Hardware stack levels required when called: 1
  3718 ;; This function calls:
  3719 ;;		_digitalWrite
  3720 ;; This function is called by:
  3721 ;;		_checkPassword
  3722 ;; This function uses a non-reentrant model
  3723 ;;
  3724                           
  3725                           	psect	text25
  3726  00182A                     __ptext25:
  3727                           	callstack 0
  3728  00182A                     _turnOn:
  3729                           	callstack 28
  3730  00182A                     
  3731                           ;rgb.c: 22:  if (led & 1) {
  3732  00182A  A025               	btfss	turnOn@led^0,0,c
  3733  00182C  EF1A  F00C         	goto	u2201
  3734  001830  EF1C  F00C         	goto	u2200
  3735  001834                     u2201:
  3736  001834  EF26  F00C         	goto	l2495
  3737  001838                     u2200:
  3738  001838                     
  3739                           ;rgb.c: 23:   digitalWrite(PIN_D0, 1);
  3740  001838  0E00               	movlw	0
  3741  00183A  6E20               	movwf	(digitalWrite@pin+1)^0,c
  3742  00183C  0E18               	movlw	24
  3743  00183E  6E1F               	movwf	digitalWrite@pin^0,c
  3744  001840  0E00               	movlw	0
  3745  001842  6E22               	movwf	(digitalWrite@value+1)^0,c
  3746  001844  0E01               	movlw	1
  3747  001846  6E21               	movwf	digitalWrite@value^0,c
  3748  001848  EC6A  F004         	call	_digitalWrite	;wreg free
  3749  00184C                     l2495:
  3750                           
  3751                           ;rgb.c: 25:  if (led & 2) {
  3752  00184C  A225               	btfss	turnOn@led^0,1,c
  3753  00184E  EF2B  F00C         	goto	u2211
  3754  001852  EF2D  F00C         	goto	u2210
  3755  001856                     u2211:
  3756  001856  EF37  F00C         	goto	l2499
  3757  00185A                     u2210:
  3758  00185A                     
  3759                           ;rgb.c: 26:   digitalWrite(PIN_D1, 1);
  3760  00185A  0E00               	movlw	0
  3761  00185C  6E20               	movwf	(digitalWrite@pin+1)^0,c
  3762  00185E  0E19               	movlw	25
  3763  001860  6E1F               	movwf	digitalWrite@pin^0,c
  3764  001862  0E00               	movlw	0
  3765  001864  6E22               	movwf	(digitalWrite@value+1)^0,c
  3766  001866  0E01               	movlw	1
  3767  001868  6E21               	movwf	digitalWrite@value^0,c
  3768  00186A  EC6A  F004         	call	_digitalWrite	;wreg free
  3769  00186E                     l2499:
  3770                           
  3771                           ;rgb.c: 28:  if (led & 4) {
  3772  00186E  A425               	btfss	turnOn@led^0,2,c
  3773  001870  EF3C  F00C         	goto	u2221
  3774  001874  EF3E  F00C         	goto	u2220
  3775  001878                     u2221:
  3776  001878  EF48  F00C         	goto	l490
  3777  00187C                     u2220:
  3778  00187C                     
  3779                           ;rgb.c: 29:   digitalWrite(PIN_D2, 1);
  3780  00187C  0E00               	movlw	0
  3781  00187E  6E20               	movwf	(digitalWrite@pin+1)^0,c
  3782  001880  0E1A               	movlw	26
  3783  001882  6E1F               	movwf	digitalWrite@pin^0,c
  3784  001884  0E00               	movlw	0
  3785  001886  6E22               	movwf	(digitalWrite@value+1)^0,c
  3786  001888  0E01               	movlw	1
  3787  00188A  6E21               	movwf	digitalWrite@value^0,c
  3788  00188C  EC6A  F004         	call	_digitalWrite	;wreg free
  3789  001890                     l490:
  3790  001890  0012               	return		;funcret
  3791  001892                     __end_of_turnOn:
  3792                           	callstack 0
  3793                           
  3794 ;; *************** function _turnOff *****************
  3795 ;; Defined at:
  3796 ;;		line 33 in file "rgb.c"
  3797 ;; Parameters:    Size  Location     Type
  3798 ;;  led             2    6[COMRAM] int 
  3799 ;; Auto vars:     Size  Location     Type
  3800 ;;		None
  3801 ;; Return value:  Size  Location     Type
  3802 ;;                  1    wreg      void 
  3803 ;; Registers used:
  3804 ;;		wreg, status,2, status,0, cstack
  3805 ;; Tracked objects:
  3806 ;;		On entry : 0/0
  3807 ;;		On exit  : 0/0
  3808 ;;		Unchanged: 0/0
  3809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3810 ;;      Params:         2       0       0       0       0       0       0
  3811 ;;      Locals:         0       0       0       0       0       0       0
  3812 ;;      Temps:          0       0       0       0       0       0       0
  3813 ;;      Totals:         2       0       0       0       0       0       0
  3814 ;;Total ram usage:        2 bytes
  3815 ;; Hardware stack levels used: 1
  3816 ;; Hardware stack levels required when called: 1
  3817 ;; This function calls:
  3818 ;;		_digitalWrite
  3819 ;; This function is called by:
  3820 ;;		_checkPassword
  3821 ;;		_main
  3822 ;; This function uses a non-reentrant model
  3823 ;;
  3824                           
  3825                           	psect	text26
  3826  001892                     __ptext26:
  3827                           	callstack 0
  3828  001892                     _turnOff:
  3829                           	callstack 29
  3830  001892                     
  3831                           ;rgb.c: 34:  if (led & 1) {
  3832  001892  A025               	btfss	turnOff@led^0,0,c
  3833  001894  EF4E  F00C         	goto	u2231
  3834  001898  EF50  F00C         	goto	u2230
  3835  00189C                     u2231:
  3836  00189C  EF5A  F00C         	goto	l2507
  3837  0018A0                     u2230:
  3838  0018A0                     
  3839                           ;rgb.c: 35:   digitalWrite(PIN_D0, 0);
  3840  0018A0  0E00               	movlw	0
  3841  0018A2  6E20               	movwf	(digitalWrite@pin+1)^0,c
  3842  0018A4  0E18               	movlw	24
  3843  0018A6  6E1F               	movwf	digitalWrite@pin^0,c
  3844  0018A8  0E00               	movlw	0
  3845  0018AA  6E22               	movwf	(digitalWrite@value+1)^0,c
  3846  0018AC  0E00               	movlw	0
  3847  0018AE  6E21               	movwf	digitalWrite@value^0,c
  3848  0018B0  EC6A  F004         	call	_digitalWrite	;wreg free
  3849  0018B4                     l2507:
  3850                           
  3851                           ;rgb.c: 37:  if (led & 2) {
  3852  0018B4  A225               	btfss	turnOff@led^0,1,c
  3853  0018B6  EF5F  F00C         	goto	u2241
  3854  0018BA  EF61  F00C         	goto	u2240
  3855  0018BE                     u2241:
  3856  0018BE  EF6B  F00C         	goto	l2511
  3857  0018C2                     u2240:
  3858  0018C2                     
  3859                           ;rgb.c: 38:   digitalWrite(PIN_D1, 0);
  3860  0018C2  0E00               	movlw	0
  3861  0018C4  6E20               	movwf	(digitalWrite@pin+1)^0,c
  3862  0018C6  0E19               	movlw	25
  3863  0018C8  6E1F               	movwf	digitalWrite@pin^0,c
  3864  0018CA  0E00               	movlw	0
  3865  0018CC  6E22               	movwf	(digitalWrite@value+1)^0,c
  3866  0018CE  0E00               	movlw	0
  3867  0018D0  6E21               	movwf	digitalWrite@value^0,c
  3868  0018D2  EC6A  F004         	call	_digitalWrite	;wreg free
  3869  0018D6                     l2511:
  3870                           
  3871                           ;rgb.c: 40:  if (led & 4) {
  3872  0018D6  A425               	btfss	turnOff@led^0,2,c
  3873  0018D8  EF70  F00C         	goto	u2251
  3874  0018DC  EF72  F00C         	goto	u2250
  3875  0018E0                     u2251:
  3876  0018E0  EF7C  F00C         	goto	l496
  3877  0018E4                     u2250:
  3878  0018E4                     
  3879                           ;rgb.c: 41:   digitalWrite(PIN_D2, 0);
  3880  0018E4  0E00               	movlw	0
  3881  0018E6  6E20               	movwf	(digitalWrite@pin+1)^0,c
  3882  0018E8  0E1A               	movlw	26
  3883  0018EA  6E1F               	movwf	digitalWrite@pin^0,c
  3884  0018EC  0E00               	movlw	0
  3885  0018EE  6E22               	movwf	(digitalWrite@value+1)^0,c
  3886  0018F0  0E00               	movlw	0
  3887  0018F2  6E21               	movwf	digitalWrite@value^0,c
  3888  0018F4  EC6A  F004         	call	_digitalWrite	;wreg free
  3889  0018F8                     l496:
  3890  0018F8  0012               	return		;funcret
  3891  0018FA                     __end_of_turnOff:
  3892                           	callstack 0
  3893                           
  3894 ;; *************** function _lcdString *****************
  3895 ;; Defined at:
  3896 ;;		line 57 in file "lcd.c"
  3897 ;; Parameters:    Size  Location     Type
  3898 ;;  msg             2   14[COMRAM] PTR unsigned char 
  3899 ;;		 -> STR_8(11), STR_7(7), STR_6(13), STR_5(15), 
  3900 ;;		 -> STR_4(14), STR_3(15), STR_2(10), STR_1(19), 
  3901 ;; Auto vars:     Size  Location     Type
  3902 ;;  i               2   18[COMRAM] int 
  3903 ;; Return value:  Size  Location     Type
  3904 ;;                  1    wreg      void 
  3905 ;; Registers used:
  3906 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3907 ;; Tracked objects:
  3908 ;;		On entry : 0/0
  3909 ;;		On exit  : 0/0
  3910 ;;		Unchanged: 0/0
  3911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3912 ;;      Params:         2       0       0       0       0       0       0
  3913 ;;      Locals:         2       0       0       0       0       0       0
  3914 ;;      Temps:          2       0       0       0       0       0       0
  3915 ;;      Totals:         6       0       0       0       0       0       0
  3916 ;;Total ram usage:        6 bytes
  3917 ;; Hardware stack levels used: 1
  3918 ;; Hardware stack levels required when called: 5
  3919 ;; This function calls:
  3920 ;;		_lcdChar
  3921 ;; This function is called by:
  3922 ;;		_checkPassword
  3923 ;;		_explosion
  3924 ;;		_main
  3925 ;;		_opened
  3926 ;; This function uses a non-reentrant model
  3927 ;;
  3928                           
  3929                           	psect	text27
  3930  001ACA                     __ptext27:
  3931                           	callstack 0
  3932  001ACA                     _lcdString:
  3933                           	callstack 25
  3934  001ACA                     
  3935                           ;lcd.c: 58:  int i = 0;
  3936  001ACA  0E00               	movlw	0
  3937  001ACC  6E32               	movwf	(lcdString@i+1)^0,c
  3938  001ACE  0E00               	movlw	0
  3939  001AD0  6E31               	movwf	lcdString@i^0,c
  3940                           
  3941                           ;lcd.c: 59:  while (msg[i] != 0) {
  3942  001AD2  EF7B  F00D         	goto	l2399
  3943  001AD6                     l2395:
  3944                           
  3945                           ;lcd.c: 60:   lcdChar(msg[i]);
  3946  001AD6  5031               	movf	lcdString@i^0,w,c
  3947  001AD8  242D               	addwf	lcdString@msg^0,w,c
  3948  001ADA  6E2F               	movwf	??_lcdString^0,c
  3949  001ADC  5032               	movf	(lcdString@i+1)^0,w,c
  3950  001ADE  202E               	addwfc	(lcdString@msg+1)^0,w,c
  3951  001AE0  6E30               	movwf	(??_lcdString+1)^0,c
  3952  001AE2  C02F  FFF6         	movff	??_lcdString,tblptrl
  3953  001AE6  C030  FFF7         	movff	??_lcdString+1,tblptrh
  3954  001AEA                     	if	0	;tblptru may be non-zero
  3955  001AEA                     	endif
  3956  001AEA                     	if	0	;tblptru may be non-zero
  3957  001AEA                     	endif
  3958  001AEA  0008               	tblrd		*
  3959  001AEC  50F5               	movf	tablat,w,c
  3960  001AEE  ECBB  F00E         	call	_lcdChar
  3961  001AF2                     
  3962                           ;lcd.c: 61:   i++;
  3963  001AF2  4A31               	infsnz	lcdString@i^0,f,c
  3964  001AF4  2A32               	incf	(lcdString@i+1)^0,f,c
  3965  001AF6                     l2399:
  3966                           
  3967                           ;lcd.c: 59:  while (msg[i] != 0) {
  3968  001AF6  5031               	movf	lcdString@i^0,w,c
  3969  001AF8  242D               	addwf	lcdString@msg^0,w,c
  3970  001AFA  6E2F               	movwf	??_lcdString^0,c
  3971  001AFC  5032               	movf	(lcdString@i+1)^0,w,c
  3972  001AFE  202E               	addwfc	(lcdString@msg+1)^0,w,c
  3973  001B00  6E30               	movwf	(??_lcdString+1)^0,c
  3974  001B02  C02F  FFF6         	movff	??_lcdString,tblptrl
  3975  001B06  C030  FFF7         	movff	??_lcdString+1,tblptrh
  3976  001B0A                     	if	0	;tblptru may be non-zero
  3977  001B0A                     	endif
  3978  001B0A                     	if	0	;tblptru may be non-zero
  3979  001B0A                     	endif
  3980  001B0A  0008               	tblrd		*
  3981  001B0C  50F5               	movf	tablat,w,c
  3982  001B0E  0900               	iorlw	0
  3983  001B10  A4D8               	btfss	status,2,c
  3984  001B12  EF8D  F00D         	goto	u2121
  3985  001B16  EF8F  F00D         	goto	u2120
  3986  001B1A                     u2121:
  3987  001B1A  EF6B  F00D         	goto	l2395
  3988  001B1E                     u2120:
  3989  001B1E  0012               	return		;funcret
  3990  001B20                     __end_of_lcdString:
  3991                           	callstack 0
  3992                           
  3993 ;; *************** function _lcdChar *****************
  3994 ;; Defined at:
  3995 ;;		line 52 in file "lcd.c"
  3996 ;; Parameters:    Size  Location     Type
  3997 ;;  value           1    wreg     unsigned char 
  3998 ;; Auto vars:     Size  Location     Type
  3999 ;;  value           1   13[COMRAM] unsigned char 
  4000 ;; Return value:  Size  Location     Type
  4001 ;;                  1    wreg      void 
  4002 ;; Registers used:
  4003 ;;		wreg, status,2, status,0, cstack
  4004 ;; Tracked objects:
  4005 ;;		On entry : 0/0
  4006 ;;		On exit  : 0/0
  4007 ;;		Unchanged: 0/0
  4008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4009 ;;      Params:         0       0       0       0       0       0       0
  4010 ;;      Locals:         1       0       0       0       0       0       0
  4011 ;;      Temps:          0       0       0       0       0       0       0
  4012 ;;      Totals:         1       0       0       0       0       0       0
  4013 ;;Total ram usage:        1 bytes
  4014 ;; Hardware stack levels used: 1
  4015 ;; Hardware stack levels required when called: 4
  4016 ;; This function calls:
  4017 ;;		_delayMicro
  4018 ;;		_pushByte
  4019 ;; This function is called by:
  4020 ;;		_lcdString
  4021 ;;		_checkPassword
  4022 ;;		_setPassword
  4023 ;;		_lcdNumber
  4024 ;; This function uses a non-reentrant model
  4025 ;;
  4026                           
  4027                           	psect	text28
  4028  001D76                     __ptext28:
  4029                           	callstack 0
  4030  001D76                     _lcdChar:
  4031                           	callstack 25
  4032                           
  4033                           ;incstack = 0
  4034                           ;lcdChar@value stored from wreg
  4035  001D76  6E2C               	movwf	lcdChar@value^0,c
  4036  001D78                     
  4037                           ;lcd.c: 53:  pushByte(value, 1);
  4038  001D78  0E00               	movlw	0
  4039  001D7A  6E29               	movwf	(pushByte@rs+1)^0,c
  4040  001D7C  0E01               	movlw	1
  4041  001D7E  6E28               	movwf	pushByte@rs^0,c
  4042  001D80  502C               	movf	lcdChar@value^0,w,c
  4043  001D82  ECE1  F00C         	call	_pushByte
  4044  001D86                     
  4045                           ;lcd.c: 54:  delayMicro(80);
  4046  001D86  0E00               	movlw	0
  4047  001D88  6E20               	movwf	(delayMicro@a+1)^0,c
  4048  001D8A  0E50               	movlw	80
  4049  001D8C  6E1F               	movwf	delayMicro@a^0,c
  4050  001D8E  EC02  F00F         	call	_delayMicro	;wreg free
  4051  001D92  0012               	return		;funcret
  4052  001D94                     __end_of_lcdChar:
  4053                           	callstack 0
  4054                           
  4055 ;; *************** function _lcdCommand *****************
  4056 ;; Defined at:
  4057 ;;		line 40 in file "lcd.c"
  4058 ;; Parameters:    Size  Location     Type
  4059 ;;  value           1    wreg     unsigned char 
  4060 ;; Auto vars:     Size  Location     Type
  4061 ;;  value           1   13[COMRAM] unsigned char 
  4062 ;; Return value:  Size  Location     Type
  4063 ;;                  1    wreg      void 
  4064 ;; Registers used:
  4065 ;;		wreg, status,2, status,0, cstack
  4066 ;; Tracked objects:
  4067 ;;		On entry : 0/0
  4068 ;;		On exit  : 0/0
  4069 ;;		Unchanged: 0/0
  4070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4071 ;;      Params:         0       0       0       0       0       0       0
  4072 ;;      Locals:         1       0       0       0       0       0       0
  4073 ;;      Temps:          0       0       0       0       0       0       0
  4074 ;;      Totals:         1       0       0       0       0       0       0
  4075 ;;Total ram usage:        1 bytes
  4076 ;; Hardware stack levels used: 1
  4077 ;; Hardware stack levels required when called: 4
  4078 ;; This function calls:
  4079 ;;		_delayMili
  4080 ;;		_pushByte
  4081 ;; This function is called by:
  4082 ;;		_lcdInit
  4083 ;;		_checkPassword
  4084 ;;		_explosion
  4085 ;;		_setPassword
  4086 ;;		_main
  4087 ;;		_lcdPosition
  4088 ;;		_opened
  4089 ;; This function uses a non-reentrant model
  4090 ;;
  4091                           
  4092                           	psect	text29
  4093  001D94                     __ptext29:
  4094                           	callstack 0
  4095  001D94                     _lcdCommand:
  4096                           	callstack 25
  4097                           
  4098                           ;incstack = 0
  4099                           ;lcdCommand@value stored from wreg
  4100  001D94  6E2C               	movwf	lcdCommand@value^0,c
  4101  001D96                     
  4102                           ;lcd.c: 41:  pushByte(value, 0);
  4103  001D96  0E00               	movlw	0
  4104  001D98  6E29               	movwf	(pushByte@rs+1)^0,c
  4105  001D9A  0E00               	movlw	0
  4106  001D9C  6E28               	movwf	pushByte@rs^0,c
  4107  001D9E  502C               	movf	lcdCommand@value^0,w,c
  4108  001DA0  ECE1  F00C         	call	_pushByte
  4109                           
  4110                           ;lcd.c: 42:  delayMili(2);
  4111  001DA4  0E00               	movlw	0
  4112  001DA6  6E20               	movwf	(delayMili@a+1)^0,c
  4113  001DA8  0E02               	movlw	2
  4114  001DAA  6E1F               	movwf	delayMili@a^0,c
  4115  001DAC  EC2F  F00E         	call	_delayMili	;wreg free
  4116  001DB0  0012               	return		;funcret
  4117  001DB2                     __end_of_lcdCommand:
  4118                           	callstack 0
  4119                           
  4120 ;; *************** function _pushByte *****************
  4121 ;; Defined at:
  4122 ;;		line 31 in file "lcd.c"
  4123 ;; Parameters:    Size  Location     Type
  4124 ;;  value           1    wreg     unsigned char 
  4125 ;;  rs              2    9[COMRAM] int 
  4126 ;; Auto vars:     Size  Location     Type
  4127 ;;  value           1   12[COMRAM] unsigned char 
  4128 ;; Return value:  Size  Location     Type
  4129 ;;                  1    wreg      void 
  4130 ;; Registers used:
  4131 ;;		wreg, status,2, status,0, cstack
  4132 ;; Tracked objects:
  4133 ;;		On entry : 0/0
  4134 ;;		On exit  : 0/0
  4135 ;;		Unchanged: 0/0
  4136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4137 ;;      Params:         2       0       0       0       0       0       0
  4138 ;;      Locals:         1       0       0       0       0       0       0
  4139 ;;      Temps:          1       0       0       0       0       0       0
  4140 ;;      Totals:         4       0       0       0       0       0       0
  4141 ;;Total ram usage:        4 bytes
  4142 ;; Hardware stack levels used: 1
  4143 ;; Hardware stack levels required when called: 3
  4144 ;; This function calls:
  4145 ;;		_digitalWrite
  4146 ;;		_pulseEnablePin
  4147 ;;		_soWrite
  4148 ;; This function is called by:
  4149 ;;		_lcdCommand
  4150 ;;		_lcdChar
  4151 ;; This function uses a non-reentrant model
  4152 ;;
  4153                           
  4154                           	psect	text30
  4155  0019C2                     __ptext30:
  4156                           	callstack 0
  4157  0019C2                     _pushByte:
  4158                           	callstack 25
  4159                           
  4160                           ;incstack = 0
  4161                           ;pushByte@value stored from wreg
  4162  0019C2  6E2B               	movwf	pushByte@value^0,c
  4163  0019C4                     
  4164                           ;lcd.c: 32:  soWrite(value >> 4);
  4165  0019C4  C02B  F02A         	movff	pushByte@value,??_pushByte
  4166  0019C8  3A2A               	swapf	??_pushByte^0,f,c
  4167  0019CA  0E0F               	movlw	15
  4168  0019CC  162A               	andwf	??_pushByte^0,f,c
  4169  0019CE  502A               	movf	??_pushByte^0,w,c
  4170  0019D0  6E25               	movwf	soWrite@value^0,c
  4171  0019D2  6A26               	clrf	(soWrite@value+1)^0,c
  4172  0019D4  EC90  F00D         	call	_soWrite	;wreg free
  4173                           
  4174                           ;lcd.c: 33:  digitalWrite(PIN_D5, rs);
  4175  0019D8  0E00               	movlw	0
  4176  0019DA  6E20               	movwf	(digitalWrite@pin+1)^0,c
  4177  0019DC  0E1D               	movlw	29
  4178  0019DE  6E1F               	movwf	digitalWrite@pin^0,c
  4179  0019E0  C028  F021         	movff	pushByte@rs,digitalWrite@value
  4180  0019E4  C029  F022         	movff	pushByte@rs+1,digitalWrite@value+1
  4181  0019E8  EC6A  F004         	call	_digitalWrite	;wreg free
  4182                           
  4183                           ;lcd.c: 34:  pulseEnablePin();
  4184  0019EC  ECB7  F00D         	call	_pulseEnablePin	;wreg free
  4185                           
  4186                           ;lcd.c: 36:  soWrite(value & 0x0F);
  4187  0019F0  C02B  F02A         	movff	pushByte@value,??_pushByte
  4188  0019F4  0E0F               	movlw	15
  4189  0019F6  162A               	andwf	??_pushByte^0,f,c
  4190  0019F8  502A               	movf	??_pushByte^0,w,c
  4191  0019FA  6E25               	movwf	soWrite@value^0,c
  4192  0019FC  6A26               	clrf	(soWrite@value+1)^0,c
  4193  0019FE  EC90  F00D         	call	_soWrite	;wreg free
  4194                           
  4195                           ;lcd.c: 37:  digitalWrite(PIN_D5, rs);
  4196  001A02  0E00               	movlw	0
  4197  001A04  6E20               	movwf	(digitalWrite@pin+1)^0,c
  4198  001A06  0E1D               	movlw	29
  4199  001A08  6E1F               	movwf	digitalWrite@pin^0,c
  4200  001A0A  C028  F021         	movff	pushByte@rs,digitalWrite@value
  4201  001A0E  C029  F022         	movff	pushByte@rs+1,digitalWrite@value+1
  4202  001A12  EC6A  F004         	call	_digitalWrite	;wreg free
  4203                           
  4204                           ;lcd.c: 38:  pulseEnablePin();
  4205  001A16  ECB7  F00D         	call	_pulseEnablePin	;wreg free
  4206  001A1A  0012               	return		;funcret
  4207  001A1C                     __end_of_pushByte:
  4208                           	callstack 0
  4209                           
  4210 ;; *************** function _pulseEnablePin *****************
  4211 ;; Defined at:
  4212 ;;		line 18 in file "lcd.c"
  4213 ;; Parameters:    Size  Location     Type
  4214 ;;		None
  4215 ;; Auto vars:     Size  Location     Type
  4216 ;;		None
  4217 ;; Return value:  Size  Location     Type
  4218 ;;                  1    wreg      void 
  4219 ;; Registers used:
  4220 ;;		wreg, status,2, status,0, cstack
  4221 ;; Tracked objects:
  4222 ;;		On entry : 0/0
  4223 ;;		On exit  : 0/0
  4224 ;;		Unchanged: 0/0
  4225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4226 ;;      Params:         0       0       0       0       0       0       0
  4227 ;;      Locals:         0       0       0       0       0       0       0
  4228 ;;      Temps:          0       0       0       0       0       0       0
  4229 ;;      Totals:         0       0       0       0       0       0       0
  4230 ;;Total ram usage:        0 bytes
  4231 ;; Hardware stack levels used: 1
  4232 ;; Hardware stack levels required when called: 1
  4233 ;; This function calls:
  4234 ;;		_delayMicro
  4235 ;;		_digitalWrite
  4236 ;; This function is called by:
  4237 ;;		_pushNibble
  4238 ;;		_pushByte
  4239 ;; This function uses a non-reentrant model
  4240 ;;
  4241                           
  4242                           	psect	text31
  4243  001B6E                     __ptext31:
  4244                           	callstack 0
  4245  001B6E                     _pulseEnablePin:
  4246                           	callstack 26
  4247  001B6E                     
  4248                           ;lcd.c: 19:  digitalWrite(PIN_D4, 1);
  4249  001B6E  0E00               	movlw	0
  4250  001B70  6E20               	movwf	(digitalWrite@pin+1)^0,c
  4251  001B72  0E1C               	movlw	28
  4252  001B74  6E1F               	movwf	digitalWrite@pin^0,c
  4253  001B76  0E00               	movlw	0
  4254  001B78  6E22               	movwf	(digitalWrite@value+1)^0,c
  4255  001B7A  0E01               	movlw	1
  4256  001B7C  6E21               	movwf	digitalWrite@value^0,c
  4257  001B7E  EC6A  F004         	call	_digitalWrite	;wreg free
  4258  001B82                     
  4259                           ;lcd.c: 20:  delayMicro(5);
  4260  001B82  0E00               	movlw	0
  4261  001B84  6E20               	movwf	(delayMicro@a+1)^0,c
  4262  001B86  0E05               	movlw	5
  4263  001B88  6E1F               	movwf	delayMicro@a^0,c
  4264  001B8A  EC02  F00F         	call	_delayMicro	;wreg free
  4265  001B8E                     
  4266                           ;lcd.c: 21:  digitalWrite(PIN_D4, 0);
  4267  001B8E  0E00               	movlw	0
  4268  001B90  6E20               	movwf	(digitalWrite@pin+1)^0,c
  4269  001B92  0E1C               	movlw	28
  4270  001B94  6E1F               	movwf	digitalWrite@pin^0,c
  4271  001B96  0E00               	movlw	0
  4272  001B98  6E22               	movwf	(digitalWrite@value+1)^0,c
  4273  001B9A  0E00               	movlw	0
  4274  001B9C  6E21               	movwf	digitalWrite@value^0,c
  4275  001B9E  EC6A  F004         	call	_digitalWrite	;wreg free
  4276                           
  4277                           ;lcd.c: 22:  delayMicro(5);
  4278  001BA2  0E00               	movlw	0
  4279  001BA4  6E20               	movwf	(delayMicro@a+1)^0,c
  4280  001BA6  0E05               	movlw	5
  4281  001BA8  6E1F               	movwf	delayMicro@a^0,c
  4282  001BAA  EC02  F00F         	call	_delayMicro	;wreg free
  4283  001BAE  0012               	return		;funcret
  4284  001BB0                     __end_of_pulseEnablePin:
  4285                           	callstack 0
  4286                           
  4287 ;; *************** function _delayMicro *****************
  4288 ;; Defined at:
  4289 ;;		line 5 in file "lcd.c"
  4290 ;; Parameters:    Size  Location     Type
  4291 ;;  a               2    0[COMRAM] int 
  4292 ;; Auto vars:     Size  Location     Type
  4293 ;;  i               2    0        volatile int 
  4294 ;; Return value:  Size  Location     Type
  4295 ;;                  1    wreg      void 
  4296 ;; Registers used:
  4297 ;;		None
  4298 ;; Tracked objects:
  4299 ;;		On entry : 0/0
  4300 ;;		On exit  : 0/0
  4301 ;;		Unchanged: 0/0
  4302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4303 ;;      Params:         2       0       0       0       0       0       0
  4304 ;;      Locals:         0       0       0       0       0       0       0
  4305 ;;      Temps:          0       0       0       0       0       0       0
  4306 ;;      Totals:         2       0       0       0       0       0       0
  4307 ;;Total ram usage:        2 bytes
  4308 ;; Hardware stack levels used: 1
  4309 ;; This function calls:
  4310 ;;		Nothing
  4311 ;; This function is called by:
  4312 ;;		_pulseEnablePin
  4313 ;;		_lcdChar
  4314 ;;		_lcdInit
  4315 ;; This function uses a non-reentrant model
  4316 ;;
  4317                           
  4318                           	psect	text32
  4319  001E04                     __ptext32:
  4320                           	callstack 0
  4321  001E04                     _delayMicro:
  4322                           	callstack 26
  4323  001E04  0012               	return		;funcret
  4324  001E06                     __end_of_delayMicro:
  4325                           	callstack 0
  4326                           
  4327 ;; *************** function _delayMili *****************
  4328 ;; Defined at:
  4329 ;;		line 10 in file "lcd.c"
  4330 ;; Parameters:    Size  Location     Type
  4331 ;;  a               2    0[COMRAM] int 
  4332 ;; Auto vars:     Size  Location     Type
  4333 ;;  i               2    3[COMRAM] volatile int 
  4334 ;; Return value:  Size  Location     Type
  4335 ;;                  1    wreg      void 
  4336 ;; Registers used:
  4337 ;;		wreg, status,2, status,0
  4338 ;; Tracked objects:
  4339 ;;		On entry : 0/0
  4340 ;;		On exit  : 0/0
  4341 ;;		Unchanged: 0/0
  4342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4343 ;;      Params:         2       0       0       0       0       0       0
  4344 ;;      Locals:         2       0       0       0       0       0       0
  4345 ;;      Temps:          1       0       0       0       0       0       0
  4346 ;;      Totals:         5       0       0       0       0       0       0
  4347 ;;Total ram usage:        5 bytes
  4348 ;; Hardware stack levels used: 1
  4349 ;; This function calls:
  4350 ;;		Nothing
  4351 ;; This function is called by:
  4352 ;;		_lcdCommand
  4353 ;;		_lcdInit
  4354 ;; This function uses a non-reentrant model
  4355 ;;
  4356                           
  4357                           	psect	text33
  4358  001C5E                     __ptext33:
  4359                           	callstack 0
  4360  001C5E                     _delayMili:
  4361                           	callstack 28
  4362  001C5E                     
  4363                           ;lcd.c: 11:  volatile int i;;lcd.c: 12:  for (i = 0; i < a; i++) {
  4364  001C5E  0E00               	movlw	0
  4365  001C60  6E23               	movwf	(delayMili@i+1)^0,c	;volatile
  4366  001C62  0E00               	movlw	0
  4367  001C64  6E22               	movwf	delayMili@i^0,c	;volatile
  4368  001C66  EF37  F00E         	goto	l2267
  4369  001C6A                     l2265:
  4370                           
  4371                           ;lcd.c: 15:  }
  4372  001C6A  4A22               	infsnz	delayMili@i^0,f,c	;volatile
  4373  001C6C  2A23               	incf	(delayMili@i+1)^0,f,c	;volatile
  4374  001C6E                     l2267:
  4375  001C6E  501F               	movf	delayMili@a^0,w,c
  4376  001C70  5C22               	subwf	delayMili@i^0,w,c	;volatile
  4377  001C72  5023               	movf	(delayMili@i+1)^0,w,c	;volatile
  4378  001C74  0A80               	xorlw	128
  4379  001C76  6E21               	movwf	??_delayMili^0,c
  4380  001C78  5020               	movf	(delayMili@a+1)^0,w,c
  4381  001C7A  0A80               	xorlw	128
  4382  001C7C  5821               	subwfb	??_delayMili^0,w,c
  4383  001C7E  A0D8               	btfss	status,0,c
  4384  001C80  EF44  F00E         	goto	u1901
  4385  001C84  EF46  F00E         	goto	u1900
  4386  001C88                     u1901:
  4387  001C88  EF35  F00E         	goto	l2265
  4388  001C8C                     u1900:
  4389  001C8C  0012               	return		;funcret
  4390  001C8E                     __end_of_delayMili:
  4391                           	callstack 0
  4392                           
  4393 ;; *************** function _kpReadKey *****************
  4394 ;; Defined at:
  4395 ;;		line 17 in file "keypad.c"
  4396 ;; Parameters:    Size  Location     Type
  4397 ;;		None
  4398 ;; Auto vars:     Size  Location     Type
  4399 ;;  i               2    3[COMRAM] int 
  4400 ;; Return value:  Size  Location     Type
  4401 ;;                  1    wreg      unsigned char 
  4402 ;; Registers used:
  4403 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  4404 ;; Tracked objects:
  4405 ;;		On entry : 0/0
  4406 ;;		On exit  : 0/0
  4407 ;;		Unchanged: 0/0
  4408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4409 ;;      Params:         0       0       0       0       0       0       0
  4410 ;;      Locals:         2       0       0       0       0       0       0
  4411 ;;      Temps:          3       0       0       0       0       0       0
  4412 ;;      Totals:         5       0       0       0       0       0       0
  4413 ;;Total ram usage:        5 bytes
  4414 ;; Hardware stack levels used: 1
  4415 ;; This function calls:
  4416 ;;		Nothing
  4417 ;; This function is called by:
  4418 ;;		_checkPassword
  4419 ;;		_setPassword
  4420 ;;		_opened
  4421 ;; This function uses a non-reentrant model
  4422 ;;
  4423                           
  4424                           	psect	text34
  4425  0016D2                     __ptext34:
  4426                           	callstack 0
  4427  0016D2                     _kpReadKey:
  4428                           	callstack 29
  4429  0016D2                     
  4430                           ;keypad.c: 18:  int i;;keypad.c: 19:  for(i=0;i<10;i++){
  4431  0016D2  0E00               	movlw	0
  4432  0016D4  6E23               	movwf	(kpReadKey@i+1)^0,c
  4433  0016D6  0E00               	movlw	0
  4434  0016D8  6E22               	movwf	kpReadKey@i^0,c
  4435  0016DA                     l1425:
  4436                           
  4437                           ;keypad.c: 20:   if (((keys) & (1<<(i)))){
  4438  0016DA  C022  F01F         	movff	kpReadKey@i,??_kpReadKey
  4439  0016DE  0E01               	movlw	1
  4440  0016E0  6E20               	movwf	(??_kpReadKey+1)^0,c
  4441  0016E2  0E00               	movlw	0
  4442  0016E4  6E21               	movwf	(??_kpReadKey+2)^0,c
  4443  0016E6  2A1F               	incf	??_kpReadKey^0,f,c
  4444  0016E8  EF79  F00B         	goto	u664
  4445  0016EC                     u665:
  4446  0016EC  90D8               	bcf	status,0,c
  4447  0016EE  3620               	rlcf	(??_kpReadKey+1)^0,f,c
  4448  0016F0  3621               	rlcf	(??_kpReadKey+2)^0,f,c
  4449  0016F2                     u664:
  4450  0016F2  2E1F               	decfsz	??_kpReadKey^0,f,c
  4451  0016F4  EF76  F00B         	goto	u665
  4452  0016F8  5015               	movf	_keys^0,w,c
  4453  0016FA  1620               	andwf	(??_kpReadKey+1)^0,f,c
  4454  0016FC  5016               	movf	(_keys+1)^0,w,c
  4455  0016FE  1621               	andwf	(??_kpReadKey+2)^0,f,c
  4456  001700  5020               	movf	(??_kpReadKey+1)^0,w,c
  4457  001702  1021               	iorwf	(??_kpReadKey+2)^0,w,c
  4458  001704  B4D8               	btfsc	status,2,c
  4459  001706  EF87  F00B         	goto	u671
  4460  00170A  EF89  F00B         	goto	u670
  4461  00170E                     u671:
  4462  00170E  EF93  F00B         	goto	l1431
  4463  001712                     u670:
  4464  001712                     
  4465                           ;keypad.c: 21:    return charKey[i];
  4466  001712  0E12               	movlw	low _charKey
  4467  001714  2422               	addwf	kpReadKey@i^0,w,c
  4468  001716  6EF6               	movwf	tblptrl,c
  4469  001718  0E06               	movlw	high _charKey
  4470  00171A  2023               	addwfc	(kpReadKey@i+1)^0,w,c
  4471  00171C  6EF7               	movwf	tblptrh,c
  4472  00171E                     	if	0	;There are less than 3 active tblptr bytes
  4473  00171E                     	endif
  4474  00171E  0008               	tblrd		*
  4475  001720  50F5               	movf	tablat,w,c
  4476  001722  EFA4  F00B         	goto	l196
  4477  001726                     l1431:
  4478                           
  4479                           ;keypad.c: 23:  }
  4480  001726  4A22               	infsnz	kpReadKey@i^0,f,c
  4481  001728  2A23               	incf	(kpReadKey@i+1)^0,f,c
  4482  00172A  BE23               	btfsc	(kpReadKey@i+1)^0,7,c
  4483  00172C  EFA1  F00B         	goto	u681
  4484  001730  5023               	movf	(kpReadKey@i+1)^0,w,c
  4485  001732  E109               	bnz	u680
  4486  001734  0E0A               	movlw	10
  4487  001736  5C22               	subwf	kpReadKey@i^0,w,c
  4488  001738  A0D8               	btfss	status,0,c
  4489  00173A  EFA1  F00B         	goto	u681
  4490  00173E  EFA3  F00B         	goto	u680
  4491  001742                     u681:
  4492  001742  EF6D  F00B         	goto	l1425
  4493  001746                     u680:
  4494  001746                     
  4495                           ;keypad.c: 25:  return 0;
  4496  001746  0E00               	movlw	0
  4497  001748                     l196:
  4498  001748  0012               	return		;funcret
  4499  00174A                     __end_of_kpReadKey:
  4500                           	callstack 0
  4501                           
  4502 ;; *************** function _kpRead *****************
  4503 ;; Defined at:
  4504 ;;		line 14 in file "keypad.c"
  4505 ;; Parameters:    Size  Location     Type
  4506 ;;		None
  4507 ;; Auto vars:     Size  Location     Type
  4508 ;;		None
  4509 ;; Return value:  Size  Location     Type
  4510 ;;                  2    0[COMRAM] unsigned int 
  4511 ;; Registers used:
  4512 ;;		None
  4513 ;; Tracked objects:
  4514 ;;		On entry : 0/0
  4515 ;;		On exit  : 0/0
  4516 ;;		Unchanged: 0/0
  4517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4518 ;;      Params:         2       0       0       0       0       0       0
  4519 ;;      Locals:         0       0       0       0       0       0       0
  4520 ;;      Temps:          0       0       0       0       0       0       0
  4521 ;;      Totals:         2       0       0       0       0       0       0
  4522 ;;Total ram usage:        2 bytes
  4523 ;; Hardware stack levels used: 1
  4524 ;; This function calls:
  4525 ;;		Nothing
  4526 ;; This function is called by:
  4527 ;;		_checkPassword
  4528 ;;		_setPassword
  4529 ;; This function uses a non-reentrant model
  4530 ;;
  4531                           
  4532                           	psect	text35
  4533  001DF2                     __ptext35:
  4534                           	callstack 0
  4535  001DF2                     _kpRead:
  4536                           	callstack 29
  4537  001DF2                     
  4538                           ;keypad.c: 15:     return keys;
  4539  001DF2  C015  F01F         	movff	_keys,?_kpRead
  4540  001DF6  C016  F020         	movff	_keys+1,?_kpRead+1
  4541  001DFA  0012               	return		;funcret
  4542  001DFC                     __end_of_kpRead:
  4543                           	callstack 0
  4544                           
  4545 ;; *************** function _kpDebounce *****************
  4546 ;; Defined at:
  4547 ;;		line 27 in file "keypad.c"
  4548 ;; Parameters:    Size  Location     Type
  4549 ;;		None
  4550 ;; Auto vars:     Size  Location     Type
  4551 ;;  i               2   12[COMRAM] int 
  4552 ;; Return value:  Size  Location     Type
  4553 ;;                  1    wreg      void 
  4554 ;; Registers used:
  4555 ;;		wreg, status,2, status,0, cstack
  4556 ;; Tracked objects:
  4557 ;;		On entry : 0/0
  4558 ;;		On exit  : 0/0
  4559 ;;		Unchanged: 0/0
  4560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4561 ;;      Params:         0       0       0       0       0       0       0
  4562 ;;      Locals:         2       0       0       0       0       0       0
  4563 ;;      Temps:          3       0       0       0       0       0       0
  4564 ;;      Totals:         5       0       0       0       0       0       0
  4565 ;;Total ram usage:        5 bytes
  4566 ;; Hardware stack levels used: 1
  4567 ;; Hardware stack levels required when called: 3
  4568 ;; This function calls:
  4569 ;;		_digitalRead
  4570 ;;		_soWrite
  4571 ;; This function is called by:
  4572 ;;		_checkPassword
  4573 ;;		_setPassword
  4574 ;;		_main
  4575 ;;		_opened
  4576 ;; This function uses a non-reentrant model
  4577 ;;
  4578                           
  4579                           	psect	text36
  4580  001102                     __ptext36:
  4581                           	callstack 0
  4582  001102                     _kpDebounce:
  4583                           	callstack 26
  4584  001102                     
  4585                           ;keypad.c: 28:     int i;;keypad.c: 29:     static unsigned char tempo;;keypad.c: 30:   
      +                            static unsigned int newRead;;keypad.c: 31:     static unsigned int oldRead;;keypad.c: 
      +                          32:     newRead = 0;
  4586  001102  0E00               	movlw	0
  4587  001104  6E14               	movwf	(kpDebounce@newRead+1)^0,c
  4588  001106  0E00               	movlw	0
  4589  001108  6E13               	movwf	kpDebounce@newRead^0,c
  4590                           
  4591                           ;keypad.c: 33:     for(i = 0; i<5; i++){
  4592  00110A  0E00               	movlw	0
  4593  00110C  6E2C               	movwf	(kpDebounce@i+1)^0,c
  4594  00110E  0E00               	movlw	0
  4595  001110  6E2B               	movwf	kpDebounce@i^0,c
  4596  001112                     l2361:
  4597  001112  BE2C               	btfsc	(kpDebounce@i+1)^0,7,c
  4598  001114  EF95  F008         	goto	u2041
  4599  001118  502C               	movf	(kpDebounce@i+1)^0,w,c
  4600  00111A  E109               	bnz	u2040
  4601  00111C  0E05               	movlw	5
  4602  00111E  5C2B               	subwf	kpDebounce@i^0,w,c
  4603  001120  A0D8               	btfss	status,0,c
  4604  001122  EF95  F008         	goto	u2041
  4605  001126  EF97  F008         	goto	u2040
  4606  00112A                     u2041:
  4607  00112A  EF99  F008         	goto	l2365
  4608  00112E                     u2040:
  4609  00112E  EFFA  F008         	goto	l2377
  4610  001132                     l2365:
  4611                           
  4612                           ;keypad.c: 35:       soWrite(1<<(i+3));
  4613  001132  C02B  F028         	movff	kpDebounce@i,??_kpDebounce
  4614  001136  0E03               	movlw	3
  4615  001138  2628               	addwf	??_kpDebounce^0,f,c
  4616  00113A  0E01               	movlw	1
  4617  00113C  6E29               	movwf	(??_kpDebounce+1)^0,c
  4618  00113E  0E00               	movlw	0
  4619  001140  6E2A               	movwf	(??_kpDebounce+2)^0,c
  4620  001142  2A28               	incf	??_kpDebounce^0,f,c
  4621  001144  EFA7  F008         	goto	u2054
  4622  001148                     u2055:
  4623  001148  90D8               	bcf	status,0,c
  4624  00114A  3629               	rlcf	(??_kpDebounce+1)^0,f,c
  4625  00114C  362A               	rlcf	(??_kpDebounce+2)^0,f,c
  4626  00114E                     u2054:
  4627  00114E  2E28               	decfsz	??_kpDebounce^0,f,c
  4628  001150  EFA4  F008         	goto	u2055
  4629  001154  C029  F025         	movff	??_kpDebounce+1,soWrite@value
  4630  001158  C02A  F026         	movff	??_kpDebounce+2,soWrite@value+1
  4631  00115C  EC90  F00D         	call	_soWrite	;wreg free
  4632                           
  4633                           ;keypad.c: 36:       if(digitalRead(PIN_B2)){
  4634  001160  0E00               	movlw	0
  4635  001162  6E20               	movwf	(digitalRead@pin+1)^0,c
  4636  001164  0E0A               	movlw	10
  4637  001166  6E1F               	movwf	digitalRead@pin^0,c
  4638  001168  EC1E  F007         	call	_digitalRead	;wreg free
  4639  00116C  501F               	movf	?_digitalRead^0,w,c
  4640  00116E  1020               	iorwf	(?_digitalRead+1)^0,w,c
  4641  001170  B4D8               	btfsc	status,2,c
  4642  001172  EFBD  F008         	goto	u2061
  4643  001176  EFBF  F008         	goto	u2060
  4644  00117A                     u2061:
  4645  00117A  EFD2  F008         	goto	l2369
  4646  00117E                     u2060:
  4647  00117E                     
  4648                           ;keypad.c: 37:         ((newRead) |= (1<<(i)));
  4649  00117E  C02B  F028         	movff	kpDebounce@i,??_kpDebounce
  4650  001182  0E01               	movlw	1
  4651  001184  6E29               	movwf	(??_kpDebounce+1)^0,c
  4652  001186  0E00               	movlw	0
  4653  001188  6E2A               	movwf	(??_kpDebounce+2)^0,c
  4654  00118A  2A28               	incf	??_kpDebounce^0,f,c
  4655  00118C  EFCB  F008         	goto	u2074
  4656  001190                     u2075:
  4657  001190  90D8               	bcf	status,0,c
  4658  001192  3629               	rlcf	(??_kpDebounce+1)^0,f,c
  4659  001194  362A               	rlcf	(??_kpDebounce+2)^0,f,c
  4660  001196                     u2074:
  4661  001196  2E28               	decfsz	??_kpDebounce^0,f,c
  4662  001198  EFC8  F008         	goto	u2075
  4663  00119C  5029               	movf	(??_kpDebounce+1)^0,w,c
  4664  00119E  1213               	iorwf	kpDebounce@newRead^0,f,c
  4665  0011A0  502A               	movf	(??_kpDebounce+2)^0,w,c
  4666  0011A2  1214               	iorwf	(kpDebounce@newRead+1)^0,f,c
  4667  0011A4                     l2369:
  4668                           
  4669                           ;keypad.c: 39:       if(digitalRead(PIN_B1)){
  4670  0011A4  0E00               	movlw	0
  4671  0011A6  6E20               	movwf	(digitalRead@pin+1)^0,c
  4672  0011A8  0E09               	movlw	9
  4673  0011AA  6E1F               	movwf	digitalRead@pin^0,c
  4674  0011AC  EC1E  F007         	call	_digitalRead	;wreg free
  4675  0011B0  501F               	movf	?_digitalRead^0,w,c
  4676  0011B2  1020               	iorwf	(?_digitalRead+1)^0,w,c
  4677  0011B4  B4D8               	btfsc	status,2,c
  4678  0011B6  EFDF  F008         	goto	u2081
  4679  0011BA  EFE1  F008         	goto	u2080
  4680  0011BE                     u2081:
  4681  0011BE  EFF6  F008         	goto	l2373
  4682  0011C2                     u2080:
  4683  0011C2                     
  4684                           ;keypad.c: 40:         ((newRead) |= (1<<((i+5))));
  4685  0011C2  C02B  F028         	movff	kpDebounce@i,??_kpDebounce
  4686  0011C6  0E05               	movlw	5
  4687  0011C8  2628               	addwf	??_kpDebounce^0,f,c
  4688  0011CA  0E01               	movlw	1
  4689  0011CC  6E29               	movwf	(??_kpDebounce+1)^0,c
  4690  0011CE  0E00               	movlw	0
  4691  0011D0  6E2A               	movwf	(??_kpDebounce+2)^0,c
  4692  0011D2  2A28               	incf	??_kpDebounce^0,f,c
  4693  0011D4  EFEF  F008         	goto	u2094
  4694  0011D8                     u2095:
  4695  0011D8  90D8               	bcf	status,0,c
  4696  0011DA  3629               	rlcf	(??_kpDebounce+1)^0,f,c
  4697  0011DC  362A               	rlcf	(??_kpDebounce+2)^0,f,c
  4698  0011DE                     u2094:
  4699  0011DE  2E28               	decfsz	??_kpDebounce^0,f,c
  4700  0011E0  EFEC  F008         	goto	u2095
  4701  0011E4  5029               	movf	(??_kpDebounce+1)^0,w,c
  4702  0011E6  1213               	iorwf	kpDebounce@newRead^0,f,c
  4703  0011E8  502A               	movf	(??_kpDebounce+2)^0,w,c
  4704  0011EA  1214               	iorwf	(kpDebounce@newRead+1)^0,f,c
  4705  0011EC                     l2373:
  4706                           
  4707                           ;keypad.c: 42:     }
  4708  0011EC  4A2B               	infsnz	kpDebounce@i^0,f,c
  4709  0011EE  2A2C               	incf	(kpDebounce@i+1)^0,f,c
  4710  0011F0  EF89  F008         	goto	l2361
  4711  0011F4                     l2377:
  4712                           
  4713                           ;keypad.c: 43:     if (oldRead == newRead) {
  4714  0011F4  5013               	movf	kpDebounce@newRead^0,w,c
  4715  0011F6  1811               	xorwf	kpDebounce@oldRead^0,w,c
  4716  0011F8  E107               	bnz	u2101
  4717  0011FA  5014               	movf	(kpDebounce@newRead+1)^0,w,c
  4718  0011FC  1812               	xorwf	(kpDebounce@oldRead+1)^0,w,c
  4719  0011FE  A4D8               	btfss	status,2,c
  4720  001200  EF04  F009         	goto	u2101
  4721  001204  EF06  F009         	goto	u2100
  4722  001208                     u2101:
  4723  001208  EF09  F009         	goto	l2381
  4724  00120C                     u2100:
  4725  00120C                     
  4726                           ;keypad.c: 44:         tempo--;
  4727  00120C  061D               	decf	kpDebounce@tempo^0,f,c
  4728                           
  4729                           ;keypad.c: 45:     } else {
  4730  00120E  EF0F  F009         	goto	l210
  4731  001212                     l2381:
  4732                           
  4733                           ;keypad.c: 46:         tempo = 1;
  4734  001212  0E01               	movlw	1
  4735  001214  6E1D               	movwf	kpDebounce@tempo^0,c
  4736  001216                     
  4737                           ;keypad.c: 47:         oldRead = newRead;
  4738  001216  C013  F011         	movff	kpDebounce@newRead,kpDebounce@oldRead
  4739  00121A  C014  F012         	movff	kpDebounce@newRead+1,kpDebounce@oldRead+1
  4740  00121E                     l210:
  4741                           
  4742                           ;keypad.c: 49:     if (tempo == 0) {
  4743  00121E  501D               	movf	kpDebounce@tempo^0,w,c
  4744  001220  A4D8               	btfss	status,2,c
  4745  001222  EF15  F009         	goto	u2111
  4746  001226  EF17  F009         	goto	u2110
  4747  00122A                     u2111:
  4748  00122A  EF1B  F009         	goto	l212
  4749  00122E                     u2110:
  4750  00122E                     
  4751                           ;keypad.c: 50:         keys = oldRead;
  4752  00122E  C011  F015         	movff	kpDebounce@oldRead,_keys
  4753  001232  C012  F016         	movff	kpDebounce@oldRead+1,_keys+1
  4754  001236                     l212:
  4755  001236  0012               	return		;funcret
  4756  001238                     __end_of_kpDebounce:
  4757                           	callstack 0
  4758                           
  4759 ;; *************** function _soWrite *****************
  4760 ;; Defined at:
  4761 ;;		line 18 in file "so.c"
  4762 ;; Parameters:    Size  Location     Type
  4763 ;;  value           2    6[COMRAM] int 
  4764 ;; Auto vars:     Size  Location     Type
  4765 ;;  i               1    8[COMRAM] unsigned char 
  4766 ;; Return value:  Size  Location     Type
  4767 ;;                  1    wreg      void 
  4768 ;; Registers used:
  4769 ;;		wreg, status,2, status,0, cstack
  4770 ;; Tracked objects:
  4771 ;;		On entry : 0/0
  4772 ;;		On exit  : 0/0
  4773 ;;		Unchanged: 0/0
  4774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4775 ;;      Params:         2       0       0       0       0       0       0
  4776 ;;      Locals:         1       0       0       0       0       0       0
  4777 ;;      Temps:          0       0       0       0       0       0       0
  4778 ;;      Totals:         3       0       0       0       0       0       0
  4779 ;;Total ram usage:        3 bytes
  4780 ;; Hardware stack levels used: 1
  4781 ;; Hardware stack levels required when called: 2
  4782 ;; This function calls:
  4783 ;;		_PulseClockData
  4784 ;;		_PulseEnClock
  4785 ;;		_digitalWrite
  4786 ;; This function is called by:
  4787 ;;		_kpDebounce
  4788 ;;		_pushNibble
  4789 ;;		_pushByte
  4790 ;;		_ssdUpdate
  4791 ;; This function uses a non-reentrant model
  4792 ;;
  4793                           
  4794                           	psect	text37
  4795  001B20                     __ptext37:
  4796                           	callstack 0
  4797  001B20                     _soWrite:
  4798                           	callstack 27
  4799  001B20                     
  4800                           ;so.c: 19:  char i;;so.c: 20:  digitalWrite(PIN_B0, 0);
  4801  001B20  0E00               	movlw	0
  4802  001B22  6E20               	movwf	(digitalWrite@pin+1)^0,c
  4803  001B24  0E08               	movlw	8
  4804  001B26  6E1F               	movwf	digitalWrite@pin^0,c
  4805  001B28  0E00               	movlw	0
  4806  001B2A  6E22               	movwf	(digitalWrite@value+1)^0,c
  4807  001B2C  0E00               	movlw	0
  4808  001B2E  6E21               	movwf	digitalWrite@value^0,c
  4809  001B30  EC6A  F004         	call	_digitalWrite	;wreg free
  4810  001B34                     
  4811                           ;so.c: 21:  for (i = 0; i < 8; i++) {
  4812  001B34  0E00               	movlw	0
  4813  001B36  6E27               	movwf	soWrite@i^0,c
  4814  001B38                     l2167:
  4815                           
  4816                           ;so.c: 22:   digitalWrite(PIN_D6, value & 0x80);
  4817  001B38  0E00               	movlw	0
  4818  001B3A  6E20               	movwf	(digitalWrite@pin+1)^0,c
  4819  001B3C  0E1E               	movlw	30
  4820  001B3E  6E1F               	movwf	digitalWrite@pin^0,c
  4821  001B40  0E80               	movlw	128
  4822  001B42  1425               	andwf	soWrite@value^0,w,c
  4823  001B44  6E21               	movwf	digitalWrite@value^0,c
  4824  001B46  6A22               	clrf	(digitalWrite@value+1)^0,c
  4825  001B48  EC6A  F004         	call	_digitalWrite	;wreg free
  4826                           
  4827                           ;so.c: 23:   PulseClockData();
  4828  001B4C  EC5C  F00E         	call	_PulseClockData	;wreg free
  4829  001B50                     
  4830                           ;so.c: 24:   value <<= 1;
  4831  001B50  90D8               	bcf	status,0,c
  4832  001B52  3625               	rlcf	soWrite@value^0,f,c
  4833  001B54  3626               	rlcf	(soWrite@value+1)^0,f,c
  4834  001B56                     
  4835                           ;so.c: 25:  }
  4836  001B56  2A27               	incf	soWrite@i^0,f,c
  4837  001B58  0E07               	movlw	7
  4838  001B5A  6427               	cpfsgt	soWrite@i^0,c
  4839  001B5C  EFB2  F00D         	goto	u1591
  4840  001B60  EFB4  F00D         	goto	u1590
  4841  001B64                     u1591:
  4842  001B64  EF9C  F00D         	goto	l2167
  4843  001B68                     u1590:
  4844  001B68                     
  4845                           ;so.c: 26:  PulseEnClock();
  4846  001B68  EC47  F00E         	call	_PulseEnClock	;wreg free
  4847  001B6C  0012               	return		;funcret
  4848  001B6E                     __end_of_soWrite:
  4849                           	callstack 0
  4850                           
  4851 ;; *************** function _PulseEnClock *****************
  4852 ;; Defined at:
  4853 ;;		line 9 in file "so.c"
  4854 ;; Parameters:    Size  Location     Type
  4855 ;;		None
  4856 ;; Auto vars:     Size  Location     Type
  4857 ;;		None
  4858 ;; Return value:  Size  Location     Type
  4859 ;;                  1    wreg      void 
  4860 ;; Registers used:
  4861 ;;		wreg, status,2, status,0, cstack
  4862 ;; Tracked objects:
  4863 ;;		On entry : 0/0
  4864 ;;		On exit  : 0/0
  4865 ;;		Unchanged: 0/0
  4866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4867 ;;      Params:         0       0       0       0       0       0       0
  4868 ;;      Locals:         0       0       0       0       0       0       0
  4869 ;;      Temps:          0       0       0       0       0       0       0
  4870 ;;      Totals:         0       0       0       0       0       0       0
  4871 ;;Total ram usage:        0 bytes
  4872 ;; Hardware stack levels used: 1
  4873 ;; Hardware stack levels required when called: 1
  4874 ;; This function calls:
  4875 ;;		_digitalWrite
  4876 ;; This function is called by:
  4877 ;;		_soWrite
  4878 ;; This function uses a non-reentrant model
  4879 ;;
  4880                           
  4881                           	psect	text38
  4882  001C8E                     __ptext38:
  4883                           	callstack 0
  4884  001C8E                     _PulseEnClock:
  4885                           	callstack 27
  4886  001C8E                     
  4887                           ;so.c: 10:  digitalWrite(PIN_D7, 1);
  4888  001C8E  0E00               	movlw	0
  4889  001C90  6E20               	movwf	(digitalWrite@pin+1)^0,c
  4890  001C92  0E1F               	movlw	31
  4891  001C94  6E1F               	movwf	digitalWrite@pin^0,c
  4892  001C96  0E00               	movlw	0
  4893  001C98  6E22               	movwf	(digitalWrite@value+1)^0,c
  4894  001C9A  0E01               	movlw	1
  4895  001C9C  6E21               	movwf	digitalWrite@value^0,c
  4896  001C9E  EC6A  F004         	call	_digitalWrite	;wreg free
  4897                           
  4898                           ;so.c: 11:  digitalWrite(PIN_D7, 0);
  4899  001CA2  0E00               	movlw	0
  4900  001CA4  6E20               	movwf	(digitalWrite@pin+1)^0,c
  4901  001CA6  0E1F               	movlw	31
  4902  001CA8  6E1F               	movwf	digitalWrite@pin^0,c
  4903  001CAA  0E00               	movlw	0
  4904  001CAC  6E22               	movwf	(digitalWrite@value+1)^0,c
  4905  001CAE  0E00               	movlw	0
  4906  001CB0  6E21               	movwf	digitalWrite@value^0,c
  4907  001CB2  EC6A  F004         	call	_digitalWrite	;wreg free
  4908  001CB6  0012               	return		;funcret
  4909  001CB8                     __end_of_PulseEnClock:
  4910                           	callstack 0
  4911                           
  4912 ;; *************** function _PulseClockData *****************
  4913 ;; Defined at:
  4914 ;;		line 14 in file "so.c"
  4915 ;; Parameters:    Size  Location     Type
  4916 ;;		None
  4917 ;; Auto vars:     Size  Location     Type
  4918 ;;		None
  4919 ;; Return value:  Size  Location     Type
  4920 ;;                  1    wreg      void 
  4921 ;; Registers used:
  4922 ;;		wreg, status,2, status,0, cstack
  4923 ;; Tracked objects:
  4924 ;;		On entry : 0/0
  4925 ;;		On exit  : 0/0
  4926 ;;		Unchanged: 0/0
  4927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4928 ;;      Params:         0       0       0       0       0       0       0
  4929 ;;      Locals:         0       0       0       0       0       0       0
  4930 ;;      Temps:          0       0       0       0       0       0       0
  4931 ;;      Totals:         0       0       0       0       0       0       0
  4932 ;;Total ram usage:        0 bytes
  4933 ;; Hardware stack levels used: 1
  4934 ;; Hardware stack levels required when called: 1
  4935 ;; This function calls:
  4936 ;;		_digitalWrite
  4937 ;; This function is called by:
  4938 ;;		_soWrite
  4939 ;; This function uses a non-reentrant model
  4940 ;;
  4941                           
  4942                           	psect	text39
  4943  001CB8                     __ptext39:
  4944                           	callstack 0
  4945  001CB8                     _PulseClockData:
  4946                           	callstack 27
  4947  001CB8                     
  4948                           ;so.c: 15:  digitalWrite(PIN_B0, 1);
  4949  001CB8  0E00               	movlw	0
  4950  001CBA  6E20               	movwf	(digitalWrite@pin+1)^0,c
  4951  001CBC  0E08               	movlw	8
  4952  001CBE  6E1F               	movwf	digitalWrite@pin^0,c
  4953  001CC0  0E00               	movlw	0
  4954  001CC2  6E22               	movwf	(digitalWrite@value+1)^0,c
  4955  001CC4  0E01               	movlw	1
  4956  001CC6  6E21               	movwf	digitalWrite@value^0,c
  4957  001CC8  EC6A  F004         	call	_digitalWrite	;wreg free
  4958                           
  4959                           ;so.c: 16:  digitalWrite(PIN_B0, 0);
  4960  001CCC  0E00               	movlw	0
  4961  001CCE  6E20               	movwf	(digitalWrite@pin+1)^0,c
  4962  001CD0  0E08               	movlw	8
  4963  001CD2  6E1F               	movwf	digitalWrite@pin^0,c
  4964  001CD4  0E00               	movlw	0
  4965  001CD6  6E22               	movwf	(digitalWrite@value+1)^0,c
  4966  001CD8  0E00               	movlw	0
  4967  001CDA  6E21               	movwf	digitalWrite@value^0,c
  4968  001CDC  EC6A  F004         	call	_digitalWrite	;wreg free
  4969  001CE0  0012               	return		;funcret
  4970  001CE2                     __end_of_PulseClockData:
  4971                           	callstack 0
  4972                           
  4973 ;; *************** function _digitalWrite *****************
  4974 ;; Defined at:
  4975 ;;		line 14 in file "io.c"
  4976 ;; Parameters:    Size  Location     Type
  4977 ;;  pin             2    0[COMRAM] int 
  4978 ;;  value           2    2[COMRAM] int 
  4979 ;; Auto vars:     Size  Location     Type
  4980 ;;		None
  4981 ;; Return value:  Size  Location     Type
  4982 ;;                  1    wreg      void 
  4983 ;; Registers used:
  4984 ;;		wreg, status,2, status,0
  4985 ;; Tracked objects:
  4986 ;;		On entry : 0/0
  4987 ;;		On exit  : 0/0
  4988 ;;		Unchanged: 0/0
  4989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4990 ;;      Params:         4       0       0       0       0       0       0
  4991 ;;      Locals:         0       0       0       0       0       0       0
  4992 ;;      Temps:          2       0       0       0       0       0       0
  4993 ;;      Totals:         6       0       0       0       0       0       0
  4994 ;;Total ram usage:        6 bytes
  4995 ;; Hardware stack levels used: 1
  4996 ;; This function calls:
  4997 ;;		Nothing
  4998 ;; This function is called by:
  4999 ;;		_pulseEnablePin
  5000 ;;		_pushNibble
  5001 ;;		_pushByte
  5002 ;;		_PulseEnClock
  5003 ;;		_PulseClockData
  5004 ;;		_soWrite
  5005 ;;		_ssdUpdate
  5006 ;;		_turnOn
  5007 ;;		_turnOff
  5008 ;;		_clear_SCL
  5009 ;;		_clear_SDA
  5010 ;;		_rgbColor
  5011 ;; This function uses a non-reentrant model
  5012 ;;
  5013                           
  5014                           	psect	text40
  5015  0008D4                     __ptext40:
  5016                           	callstack 0
  5017  0008D4                     _digitalWrite:
  5018                           	callstack 29
  5019  0008D4                     
  5020                           ;io.c: 16:     if(pin <8){
  5021  0008D4  BE20               	btfsc	(digitalWrite@pin+1)^0,7,c
  5022  0008D6  EF78  F004         	goto	u1390
  5023  0008DA  5020               	movf	(digitalWrite@pin+1)^0,w,c
  5024  0008DC  E107               	bnz	u1391
  5025  0008DE  0E08               	movlw	8
  5026  0008E0  5C1F               	subwf	digitalWrite@pin^0,w,c
  5027  0008E2  B0D8               	btfsc	status,0,c
  5028  0008E4  EF76  F004         	goto	u1391
  5029  0008E8  EF78  F004         	goto	u1390
  5030  0008EC                     u1391:
  5031  0008EC  EFA2  F004         	goto	l2123
  5032  0008F0                     u1390:
  5033  0008F0                     
  5034                           ;io.c: 17:         if (value){ ((PORTA) |= (1<<(pin)));}
  5035  0008F0  5021               	movf	digitalWrite@value^0,w,c
  5036  0008F2  1022               	iorwf	(digitalWrite@value+1)^0,w,c
  5037  0008F4  B4D8               	btfsc	status,2,c
  5038  0008F6  EF7F  F004         	goto	u1401
  5039  0008FA  EF81  F004         	goto	u1400
  5040  0008FE                     u1401:
  5041  0008FE  EF91  F004         	goto	l2121
  5042  000902                     u1400:
  5043  000902  C01F  F023         	movff	digitalWrite@pin,??_digitalWrite
  5044  000906  0E01               	movlw	1
  5045  000908  6E24               	movwf	(??_digitalWrite+1)^0,c
  5046  00090A  2A23               	incf	??_digitalWrite^0,f,c
  5047  00090C  EF8A  F004         	goto	u1414
  5048  000910                     u1415:
  5049  000910  90D8               	bcf	status,0,c
  5050  000912  3624               	rlcf	(??_digitalWrite+1)^0,f,c
  5051  000914                     u1414:
  5052  000914  2E23               	decfsz	??_digitalWrite^0,f,c
  5053  000916  EF88  F004         	goto	u1415
  5054  00091A  5024               	movf	(??_digitalWrite+1)^0,w,c
  5055  00091C  1280               	iorwf	128,f,c	;volatile
  5056  00091E  EF90  F005         	goto	l139
  5057  000922                     l2121:
  5058  000922  C01F  F023         	movff	digitalWrite@pin,??_digitalWrite
  5059  000926  0E01               	movlw	1
  5060  000928  6E24               	movwf	(??_digitalWrite+1)^0,c
  5061  00092A  2A23               	incf	??_digitalWrite^0,f,c
  5062  00092C  EF9A  F004         	goto	u1424
  5063  000930                     u1425:
  5064  000930  90D8               	bcf	status,0,c
  5065  000932  3624               	rlcf	(??_digitalWrite+1)^0,f,c
  5066  000934                     u1424:
  5067  000934  2E23               	decfsz	??_digitalWrite^0,f,c
  5068  000936  EF98  F004         	goto	u1425
  5069  00093A  5024               	movf	(??_digitalWrite+1)^0,w,c
  5070  00093C  0AFF               	xorlw	255
  5071  00093E  1680               	andwf	128,f,c	;volatile
  5072  000940  EF90  F005         	goto	l139
  5073  000944                     l2123:
  5074  000944  BE20               	btfsc	(digitalWrite@pin+1)^0,7,c
  5075  000946  EFB0  F004         	goto	u1430
  5076  00094A  5020               	movf	(digitalWrite@pin+1)^0,w,c
  5077  00094C  E107               	bnz	u1431
  5078  00094E  0E10               	movlw	16
  5079  000950  5C1F               	subwf	digitalWrite@pin^0,w,c
  5080  000952  B0D8               	btfsc	status,0,c
  5081  000954  EFAE  F004         	goto	u1431
  5082  000958  EFB0  F004         	goto	u1430
  5083  00095C                     u1431:
  5084  00095C  EFDE  F004         	goto	l2131
  5085  000960                     u1430:
  5086  000960                     
  5087                           ;io.c: 20:         pin -=8;
  5088  000960  0EF8               	movlw	248
  5089  000962  261F               	addwf	digitalWrite@pin^0,f,c
  5090  000964  0EFF               	movlw	255
  5091  000966  2220               	addwfc	(digitalWrite@pin+1)^0,f,c
  5092                           
  5093                           ;io.c: 21:         if (value){ ((PORTB) |= (1<<(pin)));}
  5094  000968  5021               	movf	digitalWrite@value^0,w,c
  5095  00096A  1022               	iorwf	(digitalWrite@value+1)^0,w,c
  5096  00096C  B4D8               	btfsc	status,2,c
  5097  00096E  EFBB  F004         	goto	u1441
  5098  000972  EFBD  F004         	goto	u1440
  5099  000976                     u1441:
  5100  000976  EFCD  F004         	goto	l2129
  5101  00097A                     u1440:
  5102  00097A  C01F  F023         	movff	digitalWrite@pin,??_digitalWrite
  5103  00097E  0E01               	movlw	1
  5104  000980  6E24               	movwf	(??_digitalWrite+1)^0,c
  5105  000982  2A23               	incf	??_digitalWrite^0,f,c
  5106  000984  EFC6  F004         	goto	u1454
  5107  000988                     u1455:
  5108  000988  90D8               	bcf	status,0,c
  5109  00098A  3624               	rlcf	(??_digitalWrite+1)^0,f,c
  5110  00098C                     u1454:
  5111  00098C  2E23               	decfsz	??_digitalWrite^0,f,c
  5112  00098E  EFC4  F004         	goto	u1455
  5113  000992  5024               	movf	(??_digitalWrite+1)^0,w,c
  5114  000994  1281               	iorwf	129,f,c	;volatile
  5115  000996  EF90  F005         	goto	l139
  5116  00099A                     l2129:
  5117  00099A  C01F  F023         	movff	digitalWrite@pin,??_digitalWrite
  5118  00099E  0E01               	movlw	1
  5119  0009A0  6E24               	movwf	(??_digitalWrite+1)^0,c
  5120  0009A2  2A23               	incf	??_digitalWrite^0,f,c
  5121  0009A4  EFD6  F004         	goto	u1464
  5122  0009A8                     u1465:
  5123  0009A8  90D8               	bcf	status,0,c
  5124  0009AA  3624               	rlcf	(??_digitalWrite+1)^0,f,c
  5125  0009AC                     u1464:
  5126  0009AC  2E23               	decfsz	??_digitalWrite^0,f,c
  5127  0009AE  EFD4  F004         	goto	u1465
  5128  0009B2  5024               	movf	(??_digitalWrite+1)^0,w,c
  5129  0009B4  0AFF               	xorlw	255
  5130  0009B6  1681               	andwf	129,f,c	;volatile
  5131  0009B8  EF90  F005         	goto	l139
  5132  0009BC                     l2131:
  5133  0009BC  BE20               	btfsc	(digitalWrite@pin+1)^0,7,c
  5134  0009BE  EFEC  F004         	goto	u1470
  5135  0009C2  5020               	movf	(digitalWrite@pin+1)^0,w,c
  5136  0009C4  E107               	bnz	u1471
  5137  0009C6  0E18               	movlw	24
  5138  0009C8  5C1F               	subwf	digitalWrite@pin^0,w,c
  5139  0009CA  B0D8               	btfsc	status,0,c
  5140  0009CC  EFEA  F004         	goto	u1471
  5141  0009D0  EFEC  F004         	goto	u1470
  5142  0009D4                     u1471:
  5143  0009D4  EF1A  F005         	goto	l2139
  5144  0009D8                     u1470:
  5145  0009D8                     
  5146                           ;io.c: 24:         pin -=16;
  5147  0009D8  0EF0               	movlw	240
  5148  0009DA  261F               	addwf	digitalWrite@pin^0,f,c
  5149  0009DC  0EFF               	movlw	255
  5150  0009DE  2220               	addwfc	(digitalWrite@pin+1)^0,f,c
  5151                           
  5152                           ;io.c: 25:         if (value){ ((PORTC) |= (1<<(pin)));}
  5153  0009E0  5021               	movf	digitalWrite@value^0,w,c
  5154  0009E2  1022               	iorwf	(digitalWrite@value+1)^0,w,c
  5155  0009E4  B4D8               	btfsc	status,2,c
  5156  0009E6  EFF7  F004         	goto	u1481
  5157  0009EA  EFF9  F004         	goto	u1480
  5158  0009EE                     u1481:
  5159  0009EE  EF09  F005         	goto	l2137
  5160  0009F2                     u1480:
  5161  0009F2  C01F  F023         	movff	digitalWrite@pin,??_digitalWrite
  5162  0009F6  0E01               	movlw	1
  5163  0009F8  6E24               	movwf	(??_digitalWrite+1)^0,c
  5164  0009FA  2A23               	incf	??_digitalWrite^0,f,c
  5165  0009FC  EF02  F005         	goto	u1494
  5166  000A00                     u1495:
  5167  000A00  90D8               	bcf	status,0,c
  5168  000A02  3624               	rlcf	(??_digitalWrite+1)^0,f,c
  5169  000A04                     u1494:
  5170  000A04  2E23               	decfsz	??_digitalWrite^0,f,c
  5171  000A06  EF00  F005         	goto	u1495
  5172  000A0A  5024               	movf	(??_digitalWrite+1)^0,w,c
  5173  000A0C  1282               	iorwf	130,f,c	;volatile
  5174  000A0E  EF90  F005         	goto	l139
  5175  000A12                     l2137:
  5176  000A12  C01F  F023         	movff	digitalWrite@pin,??_digitalWrite
  5177  000A16  0E01               	movlw	1
  5178  000A18  6E24               	movwf	(??_digitalWrite+1)^0,c
  5179  000A1A  2A23               	incf	??_digitalWrite^0,f,c
  5180  000A1C  EF12  F005         	goto	u1504
  5181  000A20                     u1505:
  5182  000A20  90D8               	bcf	status,0,c
  5183  000A22  3624               	rlcf	(??_digitalWrite+1)^0,f,c
  5184  000A24                     u1504:
  5185  000A24  2E23               	decfsz	??_digitalWrite^0,f,c
  5186  000A26  EF10  F005         	goto	u1505
  5187  000A2A  5024               	movf	(??_digitalWrite+1)^0,w,c
  5188  000A2C  0AFF               	xorlw	255
  5189  000A2E  1682               	andwf	130,f,c	;volatile
  5190  000A30  EF90  F005         	goto	l139
  5191  000A34                     l2139:
  5192  000A34  BE20               	btfsc	(digitalWrite@pin+1)^0,7,c
  5193  000A36  EF28  F005         	goto	u1510
  5194  000A3A  5020               	movf	(digitalWrite@pin+1)^0,w,c
  5195  000A3C  E107               	bnz	u1511
  5196  000A3E  0E20               	movlw	32
  5197  000A40  5C1F               	subwf	digitalWrite@pin^0,w,c
  5198  000A42  B0D8               	btfsc	status,0,c
  5199  000A44  EF26  F005         	goto	u1511
  5200  000A48  EF28  F005         	goto	u1510
  5201  000A4C                     u1511:
  5202  000A4C  EF56  F005         	goto	l2147
  5203  000A50                     u1510:
  5204  000A50                     
  5205                           ;io.c: 28:         pin -=24;
  5206  000A50  0EE8               	movlw	232
  5207  000A52  261F               	addwf	digitalWrite@pin^0,f,c
  5208  000A54  0EFF               	movlw	255
  5209  000A56  2220               	addwfc	(digitalWrite@pin+1)^0,f,c
  5210                           
  5211                           ;io.c: 29:         if (value){ ((PORTD) |= (1<<(pin)));}
  5212  000A58  5021               	movf	digitalWrite@value^0,w,c
  5213  000A5A  1022               	iorwf	(digitalWrite@value+1)^0,w,c
  5214  000A5C  B4D8               	btfsc	status,2,c
  5215  000A5E  EF33  F005         	goto	u1521
  5216  000A62  EF35  F005         	goto	u1520
  5217  000A66                     u1521:
  5218  000A66  EF45  F005         	goto	l2145
  5219  000A6A                     u1520:
  5220  000A6A  C01F  F023         	movff	digitalWrite@pin,??_digitalWrite
  5221  000A6E  0E01               	movlw	1
  5222  000A70  6E24               	movwf	(??_digitalWrite+1)^0,c
  5223  000A72  2A23               	incf	??_digitalWrite^0,f,c
  5224  000A74  EF3E  F005         	goto	u1534
  5225  000A78                     u1535:
  5226  000A78  90D8               	bcf	status,0,c
  5227  000A7A  3624               	rlcf	(??_digitalWrite+1)^0,f,c
  5228  000A7C                     u1534:
  5229  000A7C  2E23               	decfsz	??_digitalWrite^0,f,c
  5230  000A7E  EF3C  F005         	goto	u1535
  5231  000A82  5024               	movf	(??_digitalWrite+1)^0,w,c
  5232  000A84  1283               	iorwf	131,f,c	;volatile
  5233  000A86  EF90  F005         	goto	l139
  5234  000A8A                     l2145:
  5235  000A8A  C01F  F023         	movff	digitalWrite@pin,??_digitalWrite
  5236  000A8E  0E01               	movlw	1
  5237  000A90  6E24               	movwf	(??_digitalWrite+1)^0,c
  5238  000A92  2A23               	incf	??_digitalWrite^0,f,c
  5239  000A94  EF4E  F005         	goto	u1544
  5240  000A98                     u1545:
  5241  000A98  90D8               	bcf	status,0,c
  5242  000A9A  3624               	rlcf	(??_digitalWrite+1)^0,f,c
  5243  000A9C                     u1544:
  5244  000A9C  2E23               	decfsz	??_digitalWrite^0,f,c
  5245  000A9E  EF4C  F005         	goto	u1545
  5246  000AA2  5024               	movf	(??_digitalWrite+1)^0,w,c
  5247  000AA4  0AFF               	xorlw	255
  5248  000AA6  1683               	andwf	131,f,c	;volatile
  5249  000AA8  EF90  F005         	goto	l139
  5250  000AAC                     l2147:
  5251  000AAC  BE20               	btfsc	(digitalWrite@pin+1)^0,7,c
  5252  000AAE  EF64  F005         	goto	u1550
  5253  000AB2  5020               	movf	(digitalWrite@pin+1)^0,w,c
  5254  000AB4  E107               	bnz	u1551
  5255  000AB6  0E28               	movlw	40
  5256  000AB8  5C1F               	subwf	digitalWrite@pin^0,w,c
  5257  000ABA  B0D8               	btfsc	status,0,c
  5258  000ABC  EF62  F005         	goto	u1551
  5259  000AC0  EF64  F005         	goto	u1550
  5260  000AC4                     u1551:
  5261  000AC4  EF90  F005         	goto	l139
  5262  000AC8                     u1550:
  5263  000AC8                     
  5264                           ;io.c: 32:         pin -=32;
  5265  000AC8  0EE0               	movlw	224
  5266  000ACA  261F               	addwf	digitalWrite@pin^0,f,c
  5267  000ACC  0EFF               	movlw	255
  5268  000ACE  2220               	addwfc	(digitalWrite@pin+1)^0,f,c
  5269                           
  5270                           ;io.c: 33:         if (value){ ((PORTE) |= (1<<(pin)));}
  5271  000AD0  5021               	movf	digitalWrite@value^0,w,c
  5272  000AD2  1022               	iorwf	(digitalWrite@value+1)^0,w,c
  5273  000AD4  B4D8               	btfsc	status,2,c
  5274  000AD6  EF6F  F005         	goto	u1561
  5275  000ADA  EF71  F005         	goto	u1560
  5276  000ADE                     u1561:
  5277  000ADE  EF81  F005         	goto	l2153
  5278  000AE2                     u1560:
  5279  000AE2  C01F  F023         	movff	digitalWrite@pin,??_digitalWrite
  5280  000AE6  0E01               	movlw	1
  5281  000AE8  6E24               	movwf	(??_digitalWrite+1)^0,c
  5282  000AEA  2A23               	incf	??_digitalWrite^0,f,c
  5283  000AEC  EF7A  F005         	goto	u1574
  5284  000AF0                     u1575:
  5285  000AF0  90D8               	bcf	status,0,c
  5286  000AF2  3624               	rlcf	(??_digitalWrite+1)^0,f,c
  5287  000AF4                     u1574:
  5288  000AF4  2E23               	decfsz	??_digitalWrite^0,f,c
  5289  000AF6  EF78  F005         	goto	u1575
  5290  000AFA  5024               	movf	(??_digitalWrite+1)^0,w,c
  5291  000AFC  1284               	iorwf	132,f,c	;volatile
  5292  000AFE  EF90  F005         	goto	l139
  5293  000B02                     l2153:
  5294  000B02  C01F  F023         	movff	digitalWrite@pin,??_digitalWrite
  5295  000B06  0E01               	movlw	1
  5296  000B08  6E24               	movwf	(??_digitalWrite+1)^0,c
  5297  000B0A  2A23               	incf	??_digitalWrite^0,f,c
  5298  000B0C  EF8A  F005         	goto	u1584
  5299  000B10                     u1585:
  5300  000B10  90D8               	bcf	status,0,c
  5301  000B12  3624               	rlcf	(??_digitalWrite+1)^0,f,c
  5302  000B14                     u1584:
  5303  000B14  2E23               	decfsz	??_digitalWrite^0,f,c
  5304  000B16  EF88  F005         	goto	u1585
  5305  000B1A  5024               	movf	(??_digitalWrite+1)^0,w,c
  5306  000B1C  0AFF               	xorlw	255
  5307  000B1E  1684               	andwf	132,f,c	;volatile
  5308  000B20                     l139:
  5309  000B20  0012               	return		;funcret
  5310  000B22                     __end_of_digitalWrite:
  5311                           	callstack 0
  5312                           
  5313 ;; *************** function _digitalRead *****************
  5314 ;; Defined at:
  5315 ;;		line 39 in file "io.c"
  5316 ;; Parameters:    Size  Location     Type
  5317 ;;  pin             2    0[COMRAM] int 
  5318 ;; Auto vars:     Size  Location     Type
  5319 ;;		None
  5320 ;; Return value:  Size  Location     Type
  5321 ;;                  2    0[COMRAM] int 
  5322 ;; Registers used:
  5323 ;;		wreg, status,2, status,0
  5324 ;; Tracked objects:
  5325 ;;		On entry : 0/0
  5326 ;;		On exit  : 0/0
  5327 ;;		Unchanged: 0/0
  5328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5329 ;;      Params:         2       0       0       0       0       0       0
  5330 ;;      Locals:         0       0       0       0       0       0       0
  5331 ;;      Temps:          3       0       0       0       0       0       0
  5332 ;;      Totals:         5       0       0       0       0       0       0
  5333 ;;Total ram usage:        5 bytes
  5334 ;; Hardware stack levels used: 1
  5335 ;; This function calls:
  5336 ;;		Nothing
  5337 ;; This function is called by:
  5338 ;;		_kpDebounce
  5339 ;;		_read_SCL
  5340 ;;		_read_SDA
  5341 ;; This function uses a non-reentrant model
  5342 ;;
  5343                           
  5344                           	psect	text41
  5345  000E3C                     __ptext41:
  5346                           	callstack 0
  5347  000E3C                     _digitalRead:
  5348                           	callstack 28
  5349  000E3C                     
  5350                           ;io.c: 40:     if(pin <8){
  5351  000E3C  BE20               	btfsc	(digitalRead@pin+1)^0,7,c
  5352  000E3E  EF2C  F007         	goto	u1800
  5353  000E42  5020               	movf	(digitalRead@pin+1)^0,w,c
  5354  000E44  E107               	bnz	u1801
  5355  000E46  0E08               	movlw	8
  5356  000E48  5C1F               	subwf	digitalRead@pin^0,w,c
  5357  000E4A  B0D8               	btfsc	status,0,c
  5358  000E4C  EF2A  F007         	goto	u1801
  5359  000E50  EF2C  F007         	goto	u1800
  5360  000E54                     u1801:
  5361  000E54  EF40  F007         	goto	l2233
  5362  000E58                     u1800:
  5363  000E58                     
  5364                           ;io.c: 41:         return ((PORTA) & (1<<(pin)));
  5365  000E58  C01F  F021         	movff	digitalRead@pin,??_digitalRead
  5366  000E5C  0E01               	movlw	1
  5367  000E5E  6E22               	movwf	(??_digitalRead+1)^0,c
  5368  000E60  2A21               	incf	??_digitalRead^0,f,c
  5369  000E62  EF35  F007         	goto	u1814
  5370  000E66                     u1815:
  5371  000E66  90D8               	bcf	status,0,c
  5372  000E68  3622               	rlcf	(??_digitalRead+1)^0,f,c
  5373  000E6A                     u1814:
  5374  000E6A  2E21               	decfsz	??_digitalRead^0,f,c
  5375  000E6C  EF33  F007         	goto	u1815
  5376  000E70  5022               	movf	(??_digitalRead+1)^0,w,c
  5377  000E72  1480               	andwf	128,w,c	;volatile
  5378  000E74  6E23               	movwf	(??_digitalRead+2)^0,c
  5379  000E76  5023               	movf	(??_digitalRead+2)^0,w,c
  5380  000E78  6E1F               	movwf	?_digitalRead^0,c
  5381  000E7A  6A20               	clrf	(?_digitalRead+1)^0,c
  5382  000E7C  EFD2  F007         	goto	l143
  5383  000E80                     l2233:
  5384  000E80  BE20               	btfsc	(digitalRead@pin+1)^0,7,c
  5385  000E82  EF4E  F007         	goto	u1820
  5386  000E86  5020               	movf	(digitalRead@pin+1)^0,w,c
  5387  000E88  E107               	bnz	u1821
  5388  000E8A  0E10               	movlw	16
  5389  000E8C  5C1F               	subwf	digitalRead@pin^0,w,c
  5390  000E8E  B0D8               	btfsc	status,0,c
  5391  000E90  EF4C  F007         	goto	u1821
  5392  000E94  EF4E  F007         	goto	u1820
  5393  000E98                     u1821:
  5394  000E98  EF64  F007         	goto	l2241
  5395  000E9C                     u1820:
  5396  000E9C                     
  5397                           ;io.c: 43:         return ((PORTB) & (1<<(pin-8)));
  5398  000E9C  C01F  F021         	movff	digitalRead@pin,??_digitalRead
  5399  000EA0  0EF8               	movlw	-8
  5400  000EA2  2621               	addwf	??_digitalRead^0,f,c
  5401  000EA4  0E01               	movlw	1
  5402  000EA6  6E22               	movwf	(??_digitalRead+1)^0,c
  5403  000EA8  2A21               	incf	??_digitalRead^0,f,c
  5404  000EAA  EF59  F007         	goto	u1834
  5405  000EAE                     u1835:
  5406  000EAE  90D8               	bcf	status,0,c
  5407  000EB0  3622               	rlcf	(??_digitalRead+1)^0,f,c
  5408  000EB2                     u1834:
  5409  000EB2  2E21               	decfsz	??_digitalRead^0,f,c
  5410  000EB4  EF57  F007         	goto	u1835
  5411  000EB8  5022               	movf	(??_digitalRead+1)^0,w,c
  5412  000EBA  1481               	andwf	129,w,c	;volatile
  5413  000EBC  6E23               	movwf	(??_digitalRead+2)^0,c
  5414  000EBE  5023               	movf	(??_digitalRead+2)^0,w,c
  5415  000EC0  6E1F               	movwf	?_digitalRead^0,c
  5416  000EC2  6A20               	clrf	(?_digitalRead+1)^0,c
  5417  000EC4  EFD2  F007         	goto	l143
  5418  000EC8                     l2241:
  5419  000EC8  BE20               	btfsc	(digitalRead@pin+1)^0,7,c
  5420  000ECA  EF72  F007         	goto	u1840
  5421  000ECE  5020               	movf	(digitalRead@pin+1)^0,w,c
  5422  000ED0  E107               	bnz	u1841
  5423  000ED2  0E18               	movlw	24
  5424  000ED4  5C1F               	subwf	digitalRead@pin^0,w,c
  5425  000ED6  B0D8               	btfsc	status,0,c
  5426  000ED8  EF70  F007         	goto	u1841
  5427  000EDC  EF72  F007         	goto	u1840
  5428  000EE0                     u1841:
  5429  000EE0  EF88  F007         	goto	l2249
  5430  000EE4                     u1840:
  5431  000EE4                     
  5432                           ;io.c: 45:         return ((PORTC) & (1<<(pin-16)));
  5433  000EE4  C01F  F021         	movff	digitalRead@pin,??_digitalRead
  5434  000EE8  0EF0               	movlw	-16
  5435  000EEA  2621               	addwf	??_digitalRead^0,f,c
  5436  000EEC  0E01               	movlw	1
  5437  000EEE  6E22               	movwf	(??_digitalRead+1)^0,c
  5438  000EF0  2A21               	incf	??_digitalRead^0,f,c
  5439  000EF2  EF7D  F007         	goto	u1854
  5440  000EF6                     u1855:
  5441  000EF6  90D8               	bcf	status,0,c
  5442  000EF8  3622               	rlcf	(??_digitalRead+1)^0,f,c
  5443  000EFA                     u1854:
  5444  000EFA  2E21               	decfsz	??_digitalRead^0,f,c
  5445  000EFC  EF7B  F007         	goto	u1855
  5446  000F00  5022               	movf	(??_digitalRead+1)^0,w,c
  5447  000F02  1482               	andwf	130,w,c	;volatile
  5448  000F04  6E23               	movwf	(??_digitalRead+2)^0,c
  5449  000F06  5023               	movf	(??_digitalRead+2)^0,w,c
  5450  000F08  6E1F               	movwf	?_digitalRead^0,c
  5451  000F0A  6A20               	clrf	(?_digitalRead+1)^0,c
  5452  000F0C  EFD2  F007         	goto	l143
  5453  000F10                     l2249:
  5454  000F10  BE20               	btfsc	(digitalRead@pin+1)^0,7,c
  5455  000F12  EF96  F007         	goto	u1860
  5456  000F16  5020               	movf	(digitalRead@pin+1)^0,w,c
  5457  000F18  E107               	bnz	u1861
  5458  000F1A  0E20               	movlw	32
  5459  000F1C  5C1F               	subwf	digitalRead@pin^0,w,c
  5460  000F1E  B0D8               	btfsc	status,0,c
  5461  000F20  EF94  F007         	goto	u1861
  5462  000F24  EF96  F007         	goto	u1860
  5463  000F28                     u1861:
  5464  000F28  EFAC  F007         	goto	l2257
  5465  000F2C                     u1860:
  5466  000F2C                     
  5467                           ;io.c: 47:         return ((PORTD) & (1<<(pin-24)));
  5468  000F2C  C01F  F021         	movff	digitalRead@pin,??_digitalRead
  5469  000F30  0EE8               	movlw	-24
  5470  000F32  2621               	addwf	??_digitalRead^0,f,c
  5471  000F34  0E01               	movlw	1
  5472  000F36  6E22               	movwf	(??_digitalRead+1)^0,c
  5473  000F38  2A21               	incf	??_digitalRead^0,f,c
  5474  000F3A  EFA1  F007         	goto	u1874
  5475  000F3E                     u1875:
  5476  000F3E  90D8               	bcf	status,0,c
  5477  000F40  3622               	rlcf	(??_digitalRead+1)^0,f,c
  5478  000F42                     u1874:
  5479  000F42  2E21               	decfsz	??_digitalRead^0,f,c
  5480  000F44  EF9F  F007         	goto	u1875
  5481  000F48  5022               	movf	(??_digitalRead+1)^0,w,c
  5482  000F4A  1483               	andwf	131,w,c	;volatile
  5483  000F4C  6E23               	movwf	(??_digitalRead+2)^0,c
  5484  000F4E  5023               	movf	(??_digitalRead+2)^0,w,c
  5485  000F50  6E1F               	movwf	?_digitalRead^0,c
  5486  000F52  6A20               	clrf	(?_digitalRead+1)^0,c
  5487  000F54  EFD2  F007         	goto	l143
  5488  000F58                     l2257:
  5489  000F58  BE20               	btfsc	(digitalRead@pin+1)^0,7,c
  5490  000F5A  EFBA  F007         	goto	u1880
  5491  000F5E  5020               	movf	(digitalRead@pin+1)^0,w,c
  5492  000F60  E107               	bnz	u1881
  5493  000F62  0E28               	movlw	40
  5494  000F64  5C1F               	subwf	digitalRead@pin^0,w,c
  5495  000F66  B0D8               	btfsc	status,0,c
  5496  000F68  EFB8  F007         	goto	u1881
  5497  000F6C  EFBA  F007         	goto	u1880
  5498  000F70                     u1881:
  5499  000F70  EFD0  F007         	goto	l148
  5500  000F74                     u1880:
  5501  000F74                     
  5502                           ;io.c: 49:         return ((PORTE) & (1<<(pin-32)));
  5503  000F74  C01F  F021         	movff	digitalRead@pin,??_digitalRead
  5504  000F78  0EE0               	movlw	-32
  5505  000F7A  2621               	addwf	??_digitalRead^0,f,c
  5506  000F7C  0E01               	movlw	1
  5507  000F7E  6E22               	movwf	(??_digitalRead+1)^0,c
  5508  000F80  2A21               	incf	??_digitalRead^0,f,c
  5509  000F82  EFC5  F007         	goto	u1894
  5510  000F86                     u1895:
  5511  000F86  90D8               	bcf	status,0,c
  5512  000F88  3622               	rlcf	(??_digitalRead+1)^0,f,c
  5513  000F8A                     u1894:
  5514  000F8A  2E21               	decfsz	??_digitalRead^0,f,c
  5515  000F8C  EFC3  F007         	goto	u1895
  5516  000F90  5022               	movf	(??_digitalRead+1)^0,w,c
  5517  000F92  1484               	andwf	132,w,c	;volatile
  5518  000F94  6E23               	movwf	(??_digitalRead+2)^0,c
  5519  000F96  5023               	movf	(??_digitalRead+2)^0,w,c
  5520  000F98  6E1F               	movwf	?_digitalRead^0,c
  5521  000F9A  6A20               	clrf	(?_digitalRead+1)^0,c
  5522  000F9C  EFD2  F007         	goto	l143
  5523  000FA0                     l148:
  5524  000FA0                     
  5525                           ;io.c: 51:     return -1;
  5526  000FA0  681F               	setf	?_digitalRead^0,c
  5527  000FA2  6820               	setf	(?_digitalRead+1)^0,c
  5528  000FA4                     l143:
  5529  000FA4  0012               	return		;funcret
  5530  000FA6                     __end_of_digitalRead:
  5531                           	callstack 0
  5532                           
  5533 ;; *************** function _atraso_ms *****************
  5534 ;; Defined at:
  5535 ;;		line 2 in file "atraso.c"
  5536 ;; Parameters:    Size  Location     Type
  5537 ;;  num             2    0[COMRAM] unsigned int 
  5538 ;; Auto vars:     Size  Location     Type
  5539 ;;  i               2    2[COMRAM] int 
  5540 ;;  k               1    5[COMRAM] volatile unsigned char 
  5541 ;;  j               1    4[COMRAM] volatile unsigned char 
  5542 ;; Return value:  Size  Location     Type
  5543 ;;                  1    wreg      void 
  5544 ;; Registers used:
  5545 ;;		wreg, status,2, status,0
  5546 ;; Tracked objects:
  5547 ;;		On entry : 0/0
  5548 ;;		On exit  : 0/0
  5549 ;;		Unchanged: 0/0
  5550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5551 ;;      Params:         2       0       0       0       0       0       0
  5552 ;;      Locals:         4       0       0       0       0       0       0
  5553 ;;      Temps:          0       0       0       0       0       0       0
  5554 ;;      Totals:         6       0       0       0       0       0       0
  5555 ;;Total ram usage:        6 bytes
  5556 ;; Hardware stack levels used: 1
  5557 ;; This function calls:
  5558 ;;		Nothing
  5559 ;; This function is called by:
  5560 ;;		_checkPassword
  5561 ;;		_explosion
  5562 ;;		_setPassword
  5563 ;; This function uses a non-reentrant model
  5564 ;;
  5565                           
  5566                           	psect	text42
  5567  00195E                     __ptext42:
  5568                           	callstack 0
  5569  00195E                     _atraso_ms:
  5570                           	callstack 29
  5571  00195E                     
  5572                           ;atraso.c: 3:     volatile unsigned char j, k;;atraso.c: 4:     for (int i = 0; i < num;
      +                           i++) {
  5573  00195E  0E00               	movlw	0
  5574  001960  6E22               	movwf	(atraso_ms@i+1)^0,c
  5575  001962  0E00               	movlw	0
  5576  001964  6E21               	movwf	atraso_ms@i^0,c
  5577  001966  EFD5  F00C         	goto	l2489
  5578  00196A                     l2467:
  5579                           
  5580                           ;atraso.c: 5:         for (j = 0; j < 41; j++) {
  5581  00196A  0E00               	movlw	0
  5582  00196C  6E23               	movwf	atraso_ms@j^0,c	;volatile
  5583  00196E                     l2469:
  5584  00196E  0E28               	movlw	40
  5585  001970  6423               	cpfsgt	atraso_ms@j^0,c	;volatile
  5586  001972  EFBD  F00C         	goto	u2171
  5587  001976  EFBF  F00C         	goto	u2170
  5588  00197A                     u2171:
  5589  00197A  EFC1  F00C         	goto	l2473
  5590  00197E                     u2170:
  5591  00197E  EFD3  F00C         	goto	l2487
  5592  001982                     l2473:
  5593                           
  5594                           ;atraso.c: 6:             for (k = 0; k < 3; k++);
  5595  001982  0E00               	movlw	0
  5596  001984  6E24               	movwf	atraso_ms@k^0,c	;volatile
  5597  001986                     l2475:
  5598  001986  0E02               	movlw	2
  5599  001988  6424               	cpfsgt	atraso_ms@k^0,c	;volatile
  5600  00198A  EFC9  F00C         	goto	u2181
  5601  00198E  EFCB  F00C         	goto	u2180
  5602  001992                     u2181:
  5603  001992  EFCD  F00C         	goto	l2479
  5604  001996                     u2180:
  5605  001996  EFD0  F00C         	goto	l2483
  5606  00199A                     l2479:
  5607  00199A  2A24               	incf	atraso_ms@k^0,f,c	;volatile
  5608  00199C  EFC3  F00C         	goto	l2475
  5609  0019A0                     l2483:
  5610                           
  5611                           ;atraso.c: 7:         }
  5612  0019A0  2A23               	incf	atraso_ms@j^0,f,c	;volatile
  5613  0019A2  EFB7  F00C         	goto	l2469
  5614  0019A6                     l2487:
  5615                           
  5616                           ;atraso.c: 9:     }
  5617  0019A6  4A21               	infsnz	atraso_ms@i^0,f,c
  5618  0019A8  2A22               	incf	(atraso_ms@i+1)^0,f,c
  5619  0019AA                     l2489:
  5620  0019AA  501F               	movf	atraso_ms@num^0,w,c
  5621  0019AC  5C21               	subwf	atraso_ms@i^0,w,c
  5622  0019AE  5020               	movf	(atraso_ms@num+1)^0,w,c
  5623  0019B0  5822               	subwfb	(atraso_ms@i+1)^0,w,c
  5624  0019B2  A0D8               	btfss	status,0,c
  5625  0019B4  EFDE  F00C         	goto	u2191
  5626  0019B8  EFE0  F00C         	goto	u2190
  5627  0019BC                     u2191:
  5628  0019BC  EFB5  F00C         	goto	l2467
  5629  0019C0                     u2190:
  5630  0019C0  0012               	return		;funcret
  5631  0019C2                     __end_of_atraso_ms:
  5632                           	callstack 0
  5633                           
  5634                           	psect	rparam
  5635  0000                     
  5636                           	psect	idloc
  5637                           
  5638                           ;Config register IDLOC0 @ 0x200000
  5639                           ;	unspecified, using default values
  5640  200000                     	org	2097152
  5641  200000  FF                 	db	255
  5642                           
  5643                           ;Config register IDLOC1 @ 0x200001
  5644                           ;	unspecified, using default values
  5645  200001                     	org	2097153
  5646  200001  FF                 	db	255
  5647                           
  5648                           ;Config register IDLOC2 @ 0x200002
  5649                           ;	unspecified, using default values
  5650  200002                     	org	2097154
  5651  200002  FF                 	db	255
  5652                           
  5653                           ;Config register IDLOC3 @ 0x200003
  5654                           ;	unspecified, using default values
  5655  200003                     	org	2097155
  5656  200003  FF                 	db	255
  5657                           
  5658                           ;Config register IDLOC4 @ 0x200004
  5659                           ;	unspecified, using default values
  5660  200004                     	org	2097156
  5661  200004  FF                 	db	255
  5662                           
  5663                           ;Config register IDLOC5 @ 0x200005
  5664                           ;	unspecified, using default values
  5665  200005                     	org	2097157
  5666  200005  FF                 	db	255
  5667                           
  5668                           ;Config register IDLOC6 @ 0x200006
  5669                           ;	unspecified, using default values
  5670  200006                     	org	2097158
  5671  200006  FF                 	db	255
  5672                           
  5673                           ;Config register IDLOC7 @ 0x200007
  5674                           ;	unspecified, using default values
  5675  200007                     	org	2097159
  5676  200007  FF                 	db	255
  5677                           
  5678                           	psect	config
  5679                           
  5680                           ; Padding undefined space
  5681  300000                     	org	3145728
  5682  300000  FF                 	db	255
  5683                           
  5684                           ;Config register CONFIG1H @ 0x300001
  5685                           ;	Oscillator Selection bits
  5686                           ;	OSC = HS, HS oscillator
  5687                           ;	Fail-Safe Clock Monitor Enable bit
  5688                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  5689                           ;	Internal/External Oscillator Switchover bit
  5690                           ;	IESO = OFF, Oscillator Switchover mode disabled
  5691  300001                     	org	3145729
  5692  300001  02                 	db	2
  5693                           
  5694                           ;Config register CONFIG2L @ 0x300002
  5695                           ;	Power-up Timer Enable bit
  5696                           ;	PWRT = OFF, PWRT disabled
  5697                           ;	Brown-out Reset Enable bits
  5698                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  5699                           ;	Brown Out Reset Voltage bits
  5700                           ;	BORV = 0x2E, user specified literal
  5701  300002                     	org	3145730
  5702  300002  71                 	db	369
  5703                           
  5704                           ;Config register CONFIG2H @ 0x300003
  5705                           ;	Watchdog Timer Enable bit
  5706                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  5707                           ;	Watchdog Timer Postscale Select bits
  5708                           ;	WDTPS = 1, 1:1
  5709  300003                     	org	3145731
  5710  300003  00                 	db	0
  5711                           
  5712                           ; Padding undefined space
  5713  300004                     	org	3145732
  5714  300004  FF                 	db	255
  5715                           
  5716                           ;Config register CONFIG3H @ 0x300005
  5717                           ;	CCP2 MUX bit
  5718                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  5719                           ;	PORTB A/D Enable bit
  5720                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  5721                           ;	Low-Power Timer1 Oscillator Enable bit
  5722                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  5723                           ;	MCLR Pin Enable bit
  5724                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  5725  300005                     	org	3145733
  5726  300005  83                 	db	131
  5727                           
  5728                           ;Config register CONFIG4L @ 0x300006
  5729                           ;	Stack Full/Underflow Reset Enable bit
  5730                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  5731                           ;	Single-Supply ICSP Enable bit
  5732                           ;	LVP = OFF, Single-Supply ICSP disabled
  5733                           ;	Extended Instruction Set Enable bit
  5734                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  5735                           ;	Background Debugger Enable bit
  5736                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  5737  300006                     	org	3145734
  5738  300006  80                 	db	128
  5739                           
  5740                           ; Padding undefined space
  5741  300007                     	org	3145735
  5742  300007  FF                 	db	255
  5743                           
  5744                           ;Config register CONFIG5L @ 0x300008
  5745                           ;	Code Protection bit
  5746                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  5747                           ;	Code Protection bit
  5748                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  5749                           ;	Code Protection bit
  5750                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  5751                           ;	Code Protection bit
  5752                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  5753  300008                     	org	3145736
  5754  300008  0F                 	db	15
  5755                           
  5756                           ;Config register CONFIG5H @ 0x300009
  5757                           ;	Boot Block Code Protection bit
  5758                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  5759                           ;	Data EEPROM Code Protection bit
  5760                           ;	CPD = OFF, Data EEPROM not code-protected
  5761  300009                     	org	3145737
  5762  300009  C0                 	db	192
  5763                           
  5764                           ;Config register CONFIG6L @ 0x30000A
  5765                           ;	Write Protection bit
  5766                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  5767                           ;	Write Protection bit
  5768                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  5769                           ;	Write Protection bit
  5770                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  5771                           ;	Write Protection bit
  5772                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  5773  30000A                     	org	3145738
  5774  30000A  0F                 	db	15
  5775                           
  5776                           ;Config register CONFIG6H @ 0x30000B
  5777                           ;	Configuration Register Write Protection bit
  5778                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  5779                           ;	Boot Block Write Protection bit
  5780                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  5781                           ;	Data EEPROM Write Protection bit
  5782                           ;	WRTD = OFF, Data EEPROM not write-protected
  5783  30000B                     	org	3145739
  5784  30000B  E0                 	db	224
  5785                           
  5786                           ;Config register CONFIG7L @ 0x30000C
  5787                           ;	Table Read Protection bit
  5788                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  5789                           ;	Table Read Protection bit
  5790                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  5791                           ;	Table Read Protection bit
  5792                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  5793                           ;	Table Read Protection bit
  5794                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  5795  30000C                     	org	3145740
  5796  30000C  0F                 	db	15
  5797                           
  5798                           ;Config register CONFIG7H @ 0x30000D
  5799                           ;	Boot Block Table Read Protection bit
  5800                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  5801  30000D                     	org	3145741
  5802  30000D  40                 	db	64
  5803                           tosu	equ	0xFFF
  5804                           tosh	equ	0xFFE
  5805                           tosl	equ	0xFFD
  5806                           stkptr	equ	0xFFC
  5807                           pclatu	equ	0xFFB
  5808                           pclath	equ	0xFFA
  5809                           pcl	equ	0xFF9
  5810                           tblptru	equ	0xFF8
  5811                           tblptrh	equ	0xFF7
  5812                           tblptrl	equ	0xFF6
  5813                           tablat	equ	0xFF5
  5814                           prodh	equ	0xFF4
  5815                           prodl	equ	0xFF3
  5816                           indf0	equ	0xFEF
  5817                           postinc0	equ	0xFEE
  5818                           postdec0	equ	0xFED
  5819                           preinc0	equ	0xFEC
  5820                           plusw0	equ	0xFEB
  5821                           fsr0h	equ	0xFEA
  5822                           fsr0l	equ	0xFE9
  5823                           wreg	equ	0xFE8
  5824                           indf1	equ	0xFE7
  5825                           postinc1	equ	0xFE6
  5826                           postdec1	equ	0xFE5
  5827                           preinc1	equ	0xFE4
  5828                           plusw1	equ	0xFE3
  5829                           fsr1h	equ	0xFE2
  5830                           fsr1l	equ	0xFE1
  5831                           bsr	equ	0xFE0
  5832                           indf2	equ	0xFDF
  5833                           postinc2	equ	0xFDE
  5834                           postdec2	equ	0xFDD
  5835                           preinc2	equ	0xFDC
  5836                           plusw2	equ	0xFDB
  5837                           fsr2h	equ	0xFDA
  5838                           fsr2l	equ	0xFD9
  5839                           status	equ	0xFD8

Data Sizes:
    Strings     104
    Constant    27
    Data        0
    BSS         30
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     30      60
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    lcdString@msg	PTR unsigned char  size(2) Largest target is 19
		 -> STR_8(CODE[11]), STR_7(CODE[7]), STR_6(CODE[13]), STR_5(CODE[15]), 
		 -> STR_4(CODE[14]), STR_3(CODE[15]), STR_2(CODE[10]), STR_1(CODE[19]), 


Critical Paths under _main in COMRAM

    _main->_checkPassword
    _ssdInit->_pinMode
    _setPassword->_kpDebounce
    _setPassword->_lcdChar
    _setPassword->_lcdCommand
    _rgbInit->_pinMode
    _pwmInit->_pwmFrequency
    _lcdInit->_lcdCommand
    _pushNibble->_soWrite
    _kpInit->_pinMode
    _soInit->_pinMode
    _explosion->_lcdString
    _ssdUpdate->_soWrite
    _ssdDigit->___awmod
    _pwmSet->___lwdiv
    _pwmFrequency->___aldiv
    ___lwmod->___lwdiv
    ___awmod->___awdiv
    _checkPassword->_lcdString
    _turnOn->_digitalWrite
    _turnOff->_digitalWrite
    _lcdString->_lcdChar
    _lcdChar->_pushByte
    _lcdCommand->_pushByte
    _pushByte->_soWrite
    _pulseEnablePin->_digitalWrite
    _kpDebounce->_soWrite
    _soWrite->_digitalWrite
    _PulseEnClock->_digitalWrite
    _PulseClockData->_digitalWrite

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0  471474
                                             27 COMRAM     3     3      0
                      _checkPassword
                          _explosion
                         _kpDebounce
                             _kpInit
                         _lcdCommand
                            _lcdInit
                          _lcdString
                            _pwmInit
                            _rgbInit
                        _setPassword
                            _ssdInit
                          _ssdUpdate
                          _timerInit
                         _timerReset
                          _timerWait
                            _turnOff
 ---------------------------------------------------------------------------------
 (1) _timerWait                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _timerReset                                           4     2      2     167
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _timerInit                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ssdInit                                              0     0      0    6960
                            _pinMode
                             _soInit
 ---------------------------------------------------------------------------------
 (1) _setPassword                                          3     3      0   76689
                                             14 COMRAM     3     3      0
                          _atraso_ms
                         _kpDebounce
                             _kpRead
                          _kpReadKey
                            _lcdChar
                         _lcdCommand
 ---------------------------------------------------------------------------------
 (1) _rgbInit                                              0     0      0    3480
                            _pinMode
 ---------------------------------------------------------------------------------
 (1) _pwmInit                                              0     0      0     626
                       _pwmFrequency
 ---------------------------------------------------------------------------------
 (1) _lcdInit                                              0     0      0   65516
                         _delayMicro
                          _delayMili
                         _lcdCommand
                            _pinMode
                         _pushNibble
                             _soInit
 ---------------------------------------------------------------------------------
 (2) _pushNibble                                           3     1      2   28781
                                              9 COMRAM     3     1      2
                       _digitalWrite
                     _pulseEnablePin
                            _soWrite
 ---------------------------------------------------------------------------------
 (1) _kpInit                                               0     0      0    6960
                            _pinMode
                             _soInit
 ---------------------------------------------------------------------------------
 (2) _soInit                                               0     0      0    3480
                            _pinMode
 ---------------------------------------------------------------------------------
 (3) _pinMode                                              6     2      4    3480
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _explosion                                            4     4      0   87844
                                             20 COMRAM     4     4      0
                            ___awdiv
                            ___awmod
                            ___lwdiv
                            ___lwmod
                          _atraso_ms
                         _lcdCommand
                          _lcdString
                       _pwmFrequency
                             _pwmSet
                           _ssdDigit
                          _ssdUpdate
 ---------------------------------------------------------------------------------
 (1) _ssdUpdate                                            2     2      0   22593
                                              9 COMRAM     2     2      0
                       _digitalWrite
                            _soWrite
 ---------------------------------------------------------------------------------
 (2) _ssdDigit                                             2     1      1     784
                                             14 COMRAM     2     1      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _pwmSet                                               5     5      0    1172
                                              7 COMRAM     5     5      0
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     463
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     618
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _pwmFrequency                                         2     0      2     626
                                             14 COMRAM     2     0      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     452
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     463
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     904
                                              8 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4    1060
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _checkPassword                                        7     7      0  118120
                                             20 COMRAM     7     7      0
                          _atraso_ms
                         _kpDebounce
                             _kpRead
                          _kpReadKey
                            _lcdChar
                         _lcdCommand
                          _lcdString
                            _turnOff
                             _turnOn
 ---------------------------------------------------------------------------------
 (2) _turnOn                                               2     0      2    5678
                                              6 COMRAM     2     0      2
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (1) _turnOff                                              2     0      2    5906
                                              6 COMRAM     2     0      2
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (1) _lcdString                                            6     4      2   29773
                                             14 COMRAM     6     4      2
                            _lcdChar
 ---------------------------------------------------------------------------------
 (2) _lcdChar                                              1     1      0   29075
                                             13 COMRAM     1     1      0
                         _delayMicro
                           _pushByte
 ---------------------------------------------------------------------------------
 (2) _lcdCommand                                           1     1      0   29045
                                             13 COMRAM     1     1      0
                          _delayMili
                           _pushByte
 ---------------------------------------------------------------------------------
 (3) _pushByte                                             4     2      2   28673
                                              9 COMRAM     4     2      2
                       _digitalWrite
                     _pulseEnablePin
                            _soWrite
 ---------------------------------------------------------------------------------
 (4) _pulseEnablePin                                       0     0      0    5840
                         _delayMicro
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (5) _delayMicro                                           4     2      2     380
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _delayMili                                            5     3      2     350
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _kpReadKey                                            5     5      0      60
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (2) _kpRead                                               2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _kpDebounce                                           5     5      0   17769
                                              9 COMRAM     5     5      0
                        _digitalRead
                            _soWrite
 ---------------------------------------------------------------------------------
 (2) _soWrite                                              3     1      2   17133
                                              6 COMRAM     3     1      2
                     _PulseClockData
                       _PulseEnClock
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (3) _PulseEnClock                                         0     0      0    5460
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (3) _PulseClockData                                       0     0      0    5460
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (2) _digitalWrite                                         6     2      4    5460
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _digitalRead                                          5     3      2     524
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _atraso_ms                                            6     4      2     670
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _checkPassword
     _atraso_ms
     _kpDebounce
       _digitalRead
       _soWrite
         _PulseClockData
           _digitalWrite
         _PulseEnClock
           _digitalWrite
         _digitalWrite
     _kpRead
     _kpReadKey
     _lcdChar
       _delayMicro
       _pushByte
         _digitalWrite
         _pulseEnablePin
           _delayMicro
           _digitalWrite
         _soWrite
     _lcdCommand
       _delayMili
       _pushByte
     _lcdString
       _lcdChar
     _turnOff
       _digitalWrite
     _turnOn
       _digitalWrite
   _explosion
     ___awdiv
     ___awmod
       ___awdiv (ARG)
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _atraso_ms
     _lcdCommand
     _lcdString
     _pwmFrequency
       ___aldiv
     _pwmSet
       ___lwdiv
       ___wmul
     _ssdDigit
       ___awdiv (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
       ___lwmod (ARG)
     _ssdUpdate
       _digitalWrite
       _soWrite
   _kpDebounce
   _kpInit
     _pinMode
     _soInit
       _pinMode
   _lcdCommand
   _lcdInit
     _delayMicro
     _delayMili
     _lcdCommand
     _pinMode
     _pushNibble
       _digitalWrite
       _pulseEnablePin
       _soWrite
     _soInit
   _lcdString
   _pwmInit
     _pwmFrequency
   _rgbInit
     _pinMode
   _setPassword
     _atraso_ms
     _kpDebounce
     _kpRead
     _kpReadKey
     _lcdChar
     _lcdCommand
   _ssdInit
     _pinMode
     _soInit
   _ssdUpdate
   _timerInit
   _timerReset
   _timerWait
   _turnOff

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     1E      3C       1       47.2%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      3C      15        0.0%
DATA                 0      0      3C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Dec 10 15:55:21 2021

         _pulseEnablePin 1B6E             lcdString@msg 002D    __end_of_checkPassword 1102  
           ___awdiv@sign 0024                       _v0 001B                       _v1 001A  
                     _v2 0019                       _v3 0018      ___wmul@multiplicand 0021  
                    l210 121E                      l212 1236                      l143 0FA4  
                    l215 1C5C                      l144 0FA0                      l304 1B6C  
                    l232 1C8C                      l241 1A1A                      l226 1E04  
                    l139 0B20                      l235 1BAE                      l331 1A72  
                    l148 0FA0                      l244 1DB0                      l252 1D92  
                    l341 0E3A                      l173 08D2                      l190 1DFA  
                    l502 1D2C                      l238 1D06                      l431 1100  
                    l280 1828                      l344 1AC8                      l441 0CCE  
                    l361 1DF0                      l258 1B1E                      l283 1D52  
                    l267 158C                      l196 1748                      l364 1D74  
                    l293 1C2A                      l286 1DCA                      l358 1DE2  
                    l471 19C0                      l367 1E02                      l296 1CB6  
                    l448 16D0                      l490 1890                      l299 1CE0  
                    l733 14D8                      l581 1342                      l496 18F8  
                    l746 163C                      l499 1BEC                      l993 17B4  
                    _PR2 000FCB                      u670 1712                      u671 170E  
                    u680 1746                      u664 16F2                      u681 1742  
                    u665 16EC                      _try 0017             ___awmod@sign 002C  
                    wreg 000FE8                     l1000 17BC                     l1010 195C  
                   l1003 1954                     l2121 0922                     l2201 076E  
                   l2131 09BC                     l2123 0944                     l2115 08D4  
                   l2211 0802                     l2203 078A                     l2141 0A50  
                   l2133 09D8                     l2125 0960                     l2117 08F0  
                   l2301 12BA                     l2221 088C                     l2213 0814  
                   l2205 079C                     l2151 0AE2                     l2143 0A6A  
                   l2135 09F2                     l2127 097A                     l2119 0902  
                   l1431 1726                     l2311 1302                     l2303 12C8  
                   l2223 08B0                     l2215 0838                     l2207 07C0  
                   l2241 0EC8                     l2233 0E80                     l2225 0E3C  
                   l2153 0B02                     l2145 0A8A                     l2137 0A12  
                   l2129 099A                     l2161 1B34                     l1433 172A  
                   l1425 16DA                     l2313 130C                     l2305 12D2  
                   l2401 17C0                     l2217 085E                     l2209 07E6  
                   l3025 13E8                     l2251 0F2C                     l2243 0EE4  
                   l2235 0E9C                     l2227 0E58                     l2147 0AAC  
                   l2139 0A34                     l2155 1C8E                     l2171 1B56  
                   l1435 1746                     l1427 1712                     l1419 16D2  
                   l2307 12F0                     l2315 1312                     l2411 1D2E  
                   l2331 1774                     l2323 174A                     l2403 17DE  
                   l3027 0E14                     l2219 087A                     l2149 0AC8  
                   l2157 1CB8                     l2173 1B58                     l2181 1B8E  
                   l2501 187C                     l2317 1322                     l2309 1300  
                   l2341 17A8                     l2333 1782                     l2325 1752  
                   l2405 17FA                     l2421 1A46                     l2413 1A1E  
                   l2175 1B68                     l2167 1B38                     l2159 1B20  
                   l2263 1C5E                     l2183 19C4                     l2271 1D86  
                   l2511 18D6                     l2503 1892                     l2319 1332  
                   l2343 17AE                     l2335 1788                     l2327 1764  
                   l2407 1802                     l2423 1A58                     l2415 1A2E  
                   l2431 0D30                     l2191 06D4                     l2257 0F58  
                   l2249 0F10                     l2169 1B50                     l2361 1112  
                   l2265 1C6A                     l2177 1B6E                     l2513 18E4  
                   l2505 18A0                     l2521 1430                     l2601 191C  
                   l2281 123C                     l2337 179E                     l2329 176C  
                   l2273 1D08                     l2409 181A                     l2425 1A5C  
                   l2417 1A32                     l2441 0D90                     l2433 0D48  
                   l2193 06F6                     l2185 0686                     l2259 0F74  
                   l2371 11C2                     l2267 1C6E                     l2179 1B82  
                   l2507 18B4                     l2531 1456                     l2523 1434  
                   l2515 1416                     l2603 192A                     l2291 127C  
                   l2283 124A                     l2339 17A6                     l2275 1D24  
                   l2427 1A6E                     l2419 1A42                     l2451 0DE4  
                   l2443 0D98                     l2435 0D5C                     l2195 0712  
                   l2187 06A2                     l2381 1212                     l2373 11EC  
                   l2365 1132                     l2357 1DF2                     l2269 1D78  
                   l2509 18C2                     l2541 148C                     l2533 1468  
                   l2525 1442                     l2517 141A                     l2605 1940  
                   l2293 1280                     l2285 125A                     l2453 0DF8  
                   l2445 0DB0                     l2437 0D64                     l2429 0CD0  
                   l2197 0724                     l2189 06B4                     l2701 1DB2  
                   l2383 1216                     l2367 117E                     l2359 1102  
                   l2391 1D96                     l2543 14A2                     l2535 1470  
                   l2551 14B8                     l2527 144A                     l2519 1428  
                   l2607 1948                     l2295 1290                     l2287 125E  
                   l2279 1238                     l2447 0DC4                     l2439 0D7C  
                   l2199 0748                     l2703 1DB4                     l2711 1A74  
                   l1807 1DFC                     l2473 1982                     l2465 195E  
                   l2385 122E                     l2369 11A4                     l2377 11F4  
                   l2393 1ACA                     l2553 14C8                     l2545 14AA  
                   l2537 1478                     l2529 144E                     l2561 1592  
                   l2609 194E                     l2297 12A6                     l2289 126C  
                   l2449 0DCC                     l2801 0B8E                     l2705 1DB8  
                   l1809 1E00                     l2721 1D6E                     l2713 1D54  
                   l2483 19A0                     l2475 1986                     l2467 196A  
                   l2379 120C                     l2395 1AD6                     l2491 182A  
                   l2731 0FC4                     l2555 14D0                     l2547 14AC  
                   l2539 1486                     l2571 15C2                     l2563 15A0  
                   l2299 12AE                     l2459 0E00                     l2811 0C4A  
                   l2803 0B96                     l2387 1BEE                     l2707 1DBA  
                   l2723 1D72                     l2715 1D5E                     l2469 196E  
                   l2397 1AF2                     l2493 1838                     l2741 100A  
                   l2733 0FCA                     l2725 0FA6                     l2549 14B2  
                   l2581 1608                     l2573 15D4                     l2565 15A8  
                   l2821 0C7E                     l2813 0C4E                     l2805 0BC8  
                   l2389 1CE4                     l2709 1DBE                     l2717 1D62  
                   l2479 199A                     l2487 19A6                     l2399 1AF6  
                   l2495 184C                     l2751 1060                     l2743 1016  
                   l2735 0FD6                     l2727 0FB2                     l2591 1634  
                   l2583 1610                     l2575 15DC                     l2567 15AC  
                   l2559 158E                     l2831 0CAA                     l2823 0C80  
                   l2807 0BFA                     l2815 0C5A                     l2719 1D6A  
                   l2489 19AA                     l2497 185A                     l2761 10A2  
                   l2745 1028                     l2737 0FDA                     l2753 1062  
                   l2729 0FB8                     l2585 1616                     l2577 15E4  
                   l2569 15BA                     l2833 0CB8                     l2825 0C8C  
                   l2817 0C6C                     l2809 0C2C                     l2681 1C2C  
                   l2841 1654                     l1793 1DE2                     l2499 186E  
                   l2771 10DA                     l2763 10A6                     l2755 1072  
                   l2747 102E                     l2739 0FEE                     l2579 15F2  
                   l2587 161C                     l2595 18FA                     l2835 0CC4  
                   l2827 0C96                     l2819 0C72                     l2683 1C58  
                   l2691 1560                     l2851 16A6                     l2843 1658  
                   l2773 10DC                     l2765 10B2                     l2757 1084  
                   l2749 1058                     l2589 162C                     l2597 190C  
                   l2829 0CA0                     l2781 0B22                     l2693 156E  
                   l2685 14DA                     l2853 16AC                     l2845 166C  
                   l2837 163E                     l2775 10E8                     l2767 10BE  
                   l2759 1096                     l2599 1914                     l2791 0B58  
                   l2783 0B2A                     l2695 157A                     l2687 153A  
                   l2847 1688                     l2855 16AE                     l2839 164A  
                   l2777 10F4                     l2769 10CE                     l2793 0B5E  
                   l2785 0B3A                     l2697 1580                     l2689 1546  
                   l2857 16BE                     l2849 1694                     l2961 1360  
                   l2795 0B6E                     l2787 0B40                     l2699 1586  
                   l2859 1BB0                     l2971 1388                     l2963 1366  
                   l2797 0B74                     l2789 0B4C                     l2981 13A8  
                   l2973 1390                     l2965 1372                     l2957 1344  
                   l2799 0B86                     l2983 13CC                     l2991 1406  
                   l2975 1394                     l2967 1378                     l2959 135C  
                   l2993 140A                     l2977 139C                     l2969 137C  
                   l2979 13A0                     l2989 13D4                     STR_1 061C  
                   STR_2 0673                     STR_3 062F                     STR_4 064D  
                   STR_5 063E                     STR_6 065B                     STR_7 067D  
                   STR_8 0668                     u1130 1DF0                     u1131 1DEC  
                   u2100 120C                     u2101 1208                     u2110 122E  
                   u2111 122A                     u1400 0902                     u2040 112E  
                   u2120 1B1E                     u2200 1838                     u1401 08FE  
                   u2041 112A                     u2121 1B1A                     u2201 1834  
                   u2210 185A                     u2130 1A2E                     u2211 1856  
                   u2131 1A2A                     u2060 117E                     u2220 187C  
                   u2300 14A2                     u2140 1A42                     u2061 117A  
                   u2221 1878                     u2301 149E                     u2141 1A3E  
                   u1510 0A50                     u1430 0960                     u1414 0914  
                   u2054 114E                     u2230 18A0                     u2310 14C8  
                   u2150 1A58                     u1511 0A4C                     u1431 095C  
                   u1415 0910                     u2055 1148                     u2231 189C  
                   u2311 14C4                     u2151 1A54                     u1520 0A6A  
                   u1504 0A24                     u1440 097A                     u1424 0934  
                   u2080 11C2                     u2240 18C2                     u2320 15A0  
                   u2400 1940                     u2160 1A6E                     u1600 06A2  
                   u1521 0A66                     u1505 0A20                     u1441 0976  
                   u1425 0930                     u2081 11BE                     u2241 18BE  
                   u2321 159C                     u2401 193C                     u2161 1A6A  
                   u1601 069E                     u2170 197E                     u2074 1196  
                   u2250 18E4                     u2330 15BA                     u1610 06B4  
                   u2171 197A                     u2075 1190                     u2251 18E0  
                   u2331 15B6                     u1611 06B0                     u2180 1996  
                   u2500 1058                     u2260 1428                     u2340 15D4  
                   u2181 1992                     u2501 1054                     u2261 1424  
                   u2341 15D0                     u2190 19C0                     u1550 0AC8  
                   u1534 0A7C                     u1470 09D8                     u1454 098C  
                   u1390 08F0                     u2094 11DE                     u2510 1072  
                   u2270 1442                     u2350 15F2                     u2191 19BC  
                   u1551 0AC4                     u1535 0A78                     u1471 09D4  
                   u1455 0988                     u1391 08EC                     u2095 11D8  
                   u2511 106E                     u2271 143E                     u2351 15EE  
                   u1800 0E58                     u1560 0AE2                     u1544 0A9C  
                   u1480 09F2                     u1464 09AC                     u2520 1096  
                   u2280 1468                     u2360 1608                     u1720 0802  
                   u1704 07B2                     u1640 0712                     u1624 06C6  
                   u1801 0E54                     u1561 0ADE                     u1545 0A98  
                   u1481 09EE                     u1465 09A8                     u2521 1092  
                   u2281 1464                     u2361 1604                     u1721 07FE  
                   u1705 07AE                     u1641 070E                     u1625 06C2  
                   u2290 1486                     u2370 162C                     u2530 0B3A  
                   u1730 0814                     u1714 07D6                     u1650 0724  
                   u1634 06E6                     u2291 1482                     u2371 1628  
                   u2531 0B36                     u1731 0810                     u1715 07D2  
                   u1651 0720                     u1635 06E2                     u1820 0E9C  
                   u1900 1C8C                     u2380 190C                     u2540 0B86  
                   u1821 0E98                     u1901 1C88                     u2381 1908  
                   u2541 0B82                     u1814 0E6A                     u1574 0AF4  
                   u1494 0A04                     u1590 1B68                     u2390 192A  
                   u1910 124A                     u2550 0C6C                     u1815 0E66  
                   u1575 0AF0                     u1495 0A00                     u1591 1B64  
                   u2391 1926                     u1911 1246                     u2551 0C68  
                   u1840 0EE4                     u1584 0B14                     u2480 0FEE  
                   u1920 126C                     u1760 087A                     u1744 082A  
                   u1680 078A                     u1664 073A                     u2560 166C  
                   u1841 0EE0                     u1585 0B10                     u2481 0FEA  
                   u1921 1268                     u1761 0876                     u1745 0826  
                   u1681 0786                     u1665 0736                     u2561 1668  
                   u1834 0EB2                     u2490 100A                     u1930 12A6  
                   u1770 088C                     u1754 084E                     u1690 079C  
                   u1674 075E                     u2570 1688                     u1835 0EAE  
                   u2491 1006                     u1931 12A2                     u1771 0888  
                   u1755 084A                     u1691 0798                     u1675 075A  
                   u2571 1684                     u1860 0F2C                     u1940 12C8  
                   u2580 16BE                     u1861 0F28                     u1941 12C4  
                   u2581 16BA                     u1854 0EFA                     u1950 12F0  
                   u1855 0EF6                     u1951 12EC                     u1880 0F74  
                   u1960 1322                     u1784 08A2                     u1881 0F70  
                   u1961 131E                     u1785 089E                     u1874 0F42  
                   u1970 1764                     u1794 08C6                     u1875 0F3E  
                   u1971 1760                     u1795 08C2                     u1980 1782  
                   u1981 177E                     u1894 0F8A                     u1990 179E  
                   u1895 0F86                     u1991 179A                     _main 1344  
                   _keys 0015         ??_PulseClockData 0025                     indf2 000FDF  
                   fsr1l 000FE1                     fsr2l 000FD9                     prodh 000FF4  
                   prodl 000FF3                     start 0000          pushNibble@value 002A  
           ___param_bank 000000   __end_of_pulseEnablePin 1BB0           pwmSet@porcento 0028  
    checkPassword@newkey 0035          __end_of___aldiv 1344                    ?_main 001F  
        __end_of___awdiv 14DA          __end_of___awmod 163E                    _T0CON 000FD5  
        ___awdiv@divisor 0021                    _T2CON 000FCA          __end_of___lwdiv 17BE  
        __end_of___lwmod 195E          ___awdiv@counter 0023                    _TMR0H 000FD7  
                  _TMR0L 000FD6                    _PORTA 000F80                    _PORTB 000F81  
                  _PORTC 000F82                    _PORTD 000F83                    _PORTE 000F84  
        __end_of_charKey 061C                    _TRISA 000F92                    _TRISB 000F93  
                  _TRISC 000F94                    _TRISD 000F95                    _TRISE 000F96  
        __end_of_lcdChar 1D94          __end_of_lcdInit 158E          __end_of_rgbInit 1BEE  
                  _input 0001          __end_of_pinMode 08D4                    _valor 0601  
        __end_of_soWrite 1B6E                    tablat 000FF5          __end_of_ssdInit 1ACA  
        __end_of_pwmInit 1DCC                    status 000FD8          __end_of_turnOff 18FA  
           pushNibble@rs 0028     __end_of_digitalWrite 0B22          __initialization 1DCC  
   checkPassword@correct 0037          ?_pulseEnablePin 001F             __end_of_main 1416  
                 ??_main 003A            __activetblptr 000002     __size_of_digitalRead 016A  
           ?_setPassword 001F                   _ADCON1 000FC1                   _CCPR2L 000FBB  
       ___awdiv@dividend 001F             atraso_ms@num 001F                   _INTCON 000FF2  
              ??___aldiv 0027                   ___wmul 1D08                ??___awdiv 0023  
              ??___awmod 002B                ??___lwdiv 0023                ??___lwmod 002A  
                 _kpInit 1C2C                   _kpRead 1DF2                   clear_0 1DD2  
                 _soInit 1BEE         ___awdiv@quotient 0025          ___awmod@divisor 0029  
              ??_lcdChar 002C                   isa$std 000001                ??_lcdInit 002D  
                 _pwmSet 17BE          ___awmod@counter 002B                   _turnOn 182A  
              ??_rgbInit 0025         __end_of_ssdDigit 1A74                ??_pinMode 0023  
           __mediumconst 0000                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8                ??_soWrite 0027                ??_ssdInit 0025  
              ??_pwmInit 002F         __end_of_pushByte 1A1C                ??_turnOff 0027  
             __accesstop 0080  __end_of__initialization 1DD8            ___rparam_used 000001  
          pushByte@value 002B              pinMode@type 0021           __pcstackCOMRAM 001F  
          __end_of_valor 0612       __size_of_delayMili 0030            explosion@cont 0033  
     __size_of_lcdString 0056       __size_of_kpReadKey 0078       __size_of_atraso_ms 0064  
  __size_of_digitalWrite 024E               _delayMicro 1E04       __size_of_explosion 01AE  
             _lcdCommand 1D94                  ?___wmul 001F                  ?_kpInit 001F  
                ?_kpRead 001F                  _CCP2CON 000FBA                  ?_soInit 001F  
             _kpDebounce 1102                  ?_pwmSet 001F                  ?_turnOn 0025  
     __size_of_timerInit 0008       __size_of_timerWait 0010       __size_of_ssdUpdate 016C  
           _digitalWrite 08D4     __size_of_setPassword 0094        __end_of_delayMili 1C8E  
 __size_of_checkPassword 015C         ??_pulseEnablePin 0025                  __Hparam 0000  
                __Lparam 0000                ?_ssdDigit 002D        __end_of_lcdString 1B20  
        kpDebounce@tempo 001D                  ___aldiv 1238        __end_of_kpReadKey 174A  
                ___awdiv 1416                  ___awmod 158E                ?_pushByte 0028  
        __size_of___wmul 0026                  ___lwdiv 174A                  ___lwmod 18FA  
      __end_of_atraso_ms 19C2             __psmallconst 0600          __size_of_kpInit 0032  
        __size_of_kpRead 000A                  _charKey 0612              ssdDigit@val 002E  
            ssdDigit@pos 002D                  __pcinit 1DCC                  _lcdChar 1D76  
                __ramtop 0600          __size_of_soInit 003E                  _lcdInit 14DA  
                __ptext0 1344                  __ptext1 1DE2                  __ptext2 1D54  
                __ptext3 1DFC                  __ptext4 1A74                  __ptext5 163E  
                __ptext6 1BB0                  __ptext7 1DB2                  __ptext8 14DA  
                __ptext9 1CE2          __size_of_pwmSet 006C                  _display 001C  
        __size_of_turnOn 0068                  _rgbInit 1BB0                  _pinMode 0686  
       ___awmod@dividend 0027         ___aldiv@dividend 001F               delayMili@a 001F  
             delayMili@i 0022                  _soWrite 1B20                  _ssdInit 1A74  
                _pwmInit 1DB2                  _started 001E        __end_of_explosion 0CD0  
                _turnOff 1892     end_of_initialization 1DD8            ?_PulseEnClock 001F  
          __Lmediumconst 0000           digitalRead@pin 001F            ?_pwmFrequency 002D  
            ?_delayMicro 001F        __end_of_timerInit 1E04        __end_of_timerWait 1DF2  
      __end_of_ssdUpdate 0E3C               ??_ssdDigit 002E         ___aldiv@quotient 0029  
         checkPassword@i 0039              ?_lcdCommand 001F                  postinc0 000FEE  
                postinc1 000FE6                  postinc2 000FDE               ??_pushByte 002A  
__size_of_PulseClockData 002A            ??_digitalRead 0021               _timerReset 1D54  
            ?_kpDebounce 001F            _checkPassword 0FA6               _pushNibble 1CE2  
             lcdString@i 0031           ??_PulseEnClock 0025           ??_pwmFrequency 002F  
             kpReadKey@i 0022               atraso_ms@i 0021               atraso_ms@j 0023  
             atraso_ms@k 0024           ?_checkPassword 001F           __end_of___wmul 1D2E  
         __end_of_kpInit 1C5E           __end_of_kpRead 1DFC           __end_of_soInit 1C2C  
         __end_of_pwmSet 182A           __end_of_turnOn 1892      __size_of_delayMicro 0002  
    start_initialization 1DCC      __end_of_digitalRead 0FA6      __size_of_lcdCommand 001E  
    __size_of_kpDebounce 0136        kpDebounce@oldRead 0011        kpDebounce@newRead 0013  
               ??___wmul 0023                 ??_kpInit 0025                 ??_kpRead 0021  
            ?_timerReset 001F                 ??_soInit 0025                 ??_pwmSet 0026  
               ??_turnOn 0027              __pbssCOMRAM 0001              ?_pushNibble 0028  
             pinMode@pin 001F               explosion@i 0035                _delayMili 1C5E  
       ___lwdiv@dividend 001F          ??_checkPassword 0033                 ?___aldiv 001F  
               ?___awdiv 001F                 ?___awmod 0027        __size_of_ssdDigit 0058  
         _PulseClockData 1CB8                 ?___lwdiv 001F                 ?___lwmod 0026  
   __end_of_PulseEnClock 1CB8                _lcdString 1ACA              _digitalRead 0E3C  
               ?_lcdChar 001F        __size_of_pushByte 005A                 ?_lcdInit 001F  
              _kpReadKey 16D2     __end_of_pwmFrequency 1D54                _atraso_ms 195E  
            __smallconst 0600                 ?_rgbInit 001F                 ?_pinMode 001F  
          ??_setPassword 002D                 ?_soWrite 0025                 ?_ssdInit 001F  
               ?_pwmInit 001F         ___lwdiv@quotient 0023                 ?_turnOff 0025  
       pwmFrequency@freq 002D          ___aldiv@divisor 0023          ___aldiv@counter 0027  
    __size_of_timerReset 0022                _explosion 0B22           ___wmul@product 0023  
           ??_delayMicro 0021               ?_delayMili 001F   __end_of_PulseClockData 1CE2  
    __size_of_pushNibble 0026             ??_lcdCommand 002C                _timerInit 1DFC  
              _timerWait 1DE2                _ssdUpdate 0CD0             setPassword@i 002F  
             ?_lcdString 002D             ??_kpDebounce 0028               ?_kpReadKey 001F  
      ___wmul@multiplier 001F               ?_atraso_ms 001F          lcdCommand@value 002C  
     __end_of_delayMicro 1E06         timerReset@ciclos 0021       __end_of_lcdCommand 1DB2  
             pushByte@rs 0028             lcdChar@value 002C      __end_of_setPassword 16D2  
             ?_explosion 001F       __end_of_kpDebounce 1238                 __Hrparam 0000  
               __Lrparam 0000          ?_PulseClockData 001F               ?_timerInit 001F  
             ?_timerWait 001F               ?_ssdUpdate 001F         __size_of___aldiv 010C  
       __size_of___awdiv 00C4         __size_of___awmod 00B0  __size_of_pulseEnablePin 0042  
       __size_of___lwdiv 0074         __size_of___lwmod 0064         __size_of_lcdChar 001E  
       __size_of_lcdInit 00B4         __size_of_rgbInit 003E         __size_of_pinMode 024E  
        ___lwdiv@divisor 0021          ___lwdiv@counter 0025                 __ptext10 1C2C  
               __ptext11 1BEE                 __ptext20 1238                 __ptext12 0686  
               __ptext21 18FA                 __ptext13 0B22                 __ptext30 19C2  
               __ptext22 158E                 __ptext14 0CD0                 __ptext31 1B6E  
               __ptext23 1416                 __ptext15 1A1C                 __ptext40 08D4  
               __ptext32 1E04                 __ptext24 0FA6                 __ptext16 17BE  
               __ptext41 0E3C                 __ptext33 1C5E                 __ptext25 182A  
               __ptext17 1D08                 __ptext42 195E                 __ptext34 16D2  
               __ptext26 1892                 __ptext18 174A                 __ptext35 1DF2  
               __ptext27 1ACA                 __ptext19 1D2E                 __ptext36 1102  
               __ptext28 1D76                 __ptext37 1B20                 __ptext29 1D94  
               __ptext38 1C8E                 __ptext39 1CB8         __size_of_soWrite 004E  
       __size_of_ssdInit 0056         __size_of_pwmInit 001A         __size_of_turnOff 0068  
          __size_of_main 00D2               turnOff@led 0025              ??_delayMili 0021  
               _password 0009    __size_of_PulseEnClock 002A                 _ssdDigit 1A1C  
            delayMicro@a 001F                 isa$xinst 000000             soWrite@value 0025  
  __size_of_pwmFrequency 0026                 _pushByte 19C2                pwmSet@val 0029  
            ??_lcdString 002F             ??_timerReset 0021                 main@slot 003C  
            ??_kpReadKey 001F              ??_atraso_ms 0021          timerReset@tempo 001F  
           ??_pushNibble 002A            ?_digitalWrite 001F              _setPassword 163E  
           _PulseEnClock 1C8E        digitalWrite@value 0021         ___lwmod@dividend 0026  
            ??_explosion 0033       __end_of_timerReset 1D76             _pwmFrequency 1D2E  
              turnOn@led 0025                 soWrite@i 0027              ??_timerInit 001F  
            ??_timerWait 001F              ??_ssdUpdate 0028       __end_of_pushNibble 1D08  
           ?_digitalRead 001F          ___lwmod@divisor 0028              kpDebounce@i 002B  
        ___lwmod@counter 002A           ??_digitalWrite 0023             ___aldiv@sign 0028  
         setPassword@key 002D          digitalWrite@pin 001F  
