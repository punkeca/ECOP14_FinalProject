Version 4.0 HI-TECH Software Intermediate Code
"45 ./io.h
[; ;./io.h: 45: void pinMode(int pin, int type);
[v _pinMode `(v ~T0 @X0 0 ef2`i`i ]
"16 i2c.c
[; ;i2c.c: 16:  pinMode(PIN_B4,1);
[c E10 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 .. ]
[n E10 pin_label PIN_A0 PIN_A1 PIN_A2 PIN_A3 PIN_A4 PIN_A5 PIN_A6 PIN_A7 PIN_B0 PIN_B1 PIN_B2 PIN_B3 PIN_B4 PIN_B5 PIN_B6 PIN_B7 PIN_C0 PIN_C1 PIN_C2 PIN_C3 PIN_C4 PIN_C5 PIN_C6 PIN_C7 PIN_D0 PIN_D1 PIN_D2 PIN_D3 PIN_D4 PIN_D5 PIN_D6 PIN_D7 PIN_E0 PIN_E1 PIN_E2 PIN_E3 PIN_E4 PIN_E5 PIN_E6 PIN_E7  ]
"44 ./io.h
[; ;./io.h: 44: int digitalRead(int pin);
[v _digitalRead `(i ~T0 @X0 0 ef1`i ]
"43
[; ;./io.h: 43: void digitalWrite(int pin, int value);
[v _digitalWrite `(v ~T0 @X0 0 ef2`i`i ]
"14 i2c.c
[; ;i2c.c: 14: void i2cInit(void) {
[v _i2cInit `(v ~T0 @X0 1 ef ]
{
[e :U _i2cInit ]
[f ]
"16
[; ;i2c.c: 16:  pinMode(PIN_B4,1);
[e ( _pinMode (2 , . `E10 12 -> 1 `i ]
"17
[; ;i2c.c: 17:  pinMode(PIN_B3,1);
[e ( _pinMode (2 , . `E10 11 -> 1 `i ]
"18
[; ;i2c.c: 18: }
[e :UE 1 ]
}
"22
[; ;i2c.c: 22: void I2C_delay(void) {
[v _I2C_delay `(v ~T0 @X0 1 ef ]
{
[e :U _I2C_delay ]
[f ]
"23
[; ;i2c.c: 23:  volatile int v;
[v _v `Vi ~T0 @X0 1 a ]
"24
[; ;i2c.c: 24:  int i;
[v _i `i ~T0 @X0 1 a ]
"27
[; ;i2c.c: 27: }
[e :UE 2 ]
}
"29
[; ;i2c.c: 29: unsigned char read_SCL(void)
[v _read_SCL `(uc ~T0 @X0 1 ef ]
"30
[; ;i2c.c: 30: {
{
[e :U _read_SCL ]
[f ]
"31
[; ;i2c.c: 31:  pinMode(PIN_B3,1);
[e ( _pinMode (2 , . `E10 11 -> 1 `i ]
"32
[; ;i2c.c: 32:  return !!digitalRead(PIN_B3);
[e ) -> -> ! ! != ( _digitalRead (1 . `E10 11 -> 0 `i `i `uc ]
[e $UE 3  ]
"33
[; ;i2c.c: 33: }
[e :UE 3 ]
}
"34
[; ;i2c.c: 34: unsigned char read_SDA(void)
[v _read_SDA `(uc ~T0 @X0 1 ef ]
"35
[; ;i2c.c: 35: {
{
[e :U _read_SDA ]
[f ]
"36
[; ;i2c.c: 36:  pinMode(PIN_B4,1);
[e ( _pinMode (2 , . `E10 12 -> 1 `i ]
"37
[; ;i2c.c: 37:  return !!digitalRead(PIN_B4);
[e ) -> -> ! ! != ( _digitalRead (1 . `E10 12 -> 0 `i `i `uc ]
[e $UE 4  ]
"38
[; ;i2c.c: 38: }
[e :UE 4 ]
}
"39
[; ;i2c.c: 39: void clear_SCL(void)
[v _clear_SCL `(v ~T0 @X0 1 ef ]
"40
[; ;i2c.c: 40: {
{
[e :U _clear_SCL ]
[f ]
"41
[; ;i2c.c: 41:  pinMode(PIN_B3,0);
[e ( _pinMode (2 , . `E10 11 -> 0 `i ]
"42
[; ;i2c.c: 42:  digitalWrite(PIN_B3,0);
[e ( _digitalWrite (2 , . `E10 11 -> 0 `i ]
"43
[; ;i2c.c: 43: }
[e :UE 5 ]
}
"45
[; ;i2c.c: 45: void clear_SDA(void)
[v _clear_SDA `(v ~T0 @X0 1 ef ]
"46
[; ;i2c.c: 46: {
{
[e :U _clear_SDA ]
[f ]
"47
[; ;i2c.c: 47:  pinMode(PIN_B4,0);
[e ( _pinMode (2 , . `E10 12 -> 0 `i ]
"48
[; ;i2c.c: 48:  digitalWrite(PIN_B4,0);
[e ( _digitalWrite (2 , . `E10 12 -> 0 `i ]
"49
[; ;i2c.c: 49: }
[e :UE 6 ]
}
"51
[; ;i2c.c: 51: unsigned char started = 0;
[v _started `uc ~T0 @X0 1 e ]
[i _started
-> -> 0 `i `uc
]
"52
[; ;i2c.c: 52: void i2c_start(void) {
[v _i2c_start `(v ~T0 @X0 1 ef ]
{
[e :U _i2c_start ]
[f ]
"54
[; ;i2c.c: 54:  if (started) {
[e $ ! != -> _started `i -> 0 `i 8  ]
{
"55
[; ;i2c.c: 55:   read_SDA();
[e ( _read_SDA ..  ]
"56
[; ;i2c.c: 56:   I2C_delay();
[e ( _I2C_delay ..  ]
"57
[; ;i2c.c: 57:   while (read_SCL() == 0);
[e $U 9  ]
[e :U 10 ]
[e :U 9 ]
[e $ == -> ( _read_SCL ..  `i -> 0 `i 10  ]
[e :U 11 ]
"59
[; ;i2c.c: 59:   I2C_delay();
[e ( _I2C_delay ..  ]
"60
[; ;i2c.c: 60:  }
}
[e :U 8 ]
"61
[; ;i2c.c: 61:  if (read_SDA() == 0) {
[e $ ! == -> ( _read_SDA ..  `i -> 0 `i 12  ]
{
"63
[; ;i2c.c: 63:  }
}
[e :U 12 ]
"65
[; ;i2c.c: 65:  clear_SDA();
[e ( _clear_SDA ..  ]
"66
[; ;i2c.c: 66:  I2C_delay();
[e ( _I2C_delay ..  ]
"67
[; ;i2c.c: 67:  clear_SCL();
[e ( _clear_SCL ..  ]
"68
[; ;i2c.c: 68:  started = 1;
[e = _started -> -> 1 `i `uc ]
"69
[; ;i2c.c: 69: }
[e :UE 7 ]
}
"71
[; ;i2c.c: 71: void i2c_stop(void) {
[v _i2c_stop `(v ~T0 @X0 1 ef ]
{
[e :U _i2c_stop ]
[f ]
"73
[; ;i2c.c: 73:  clear_SDA();
[e ( _clear_SDA ..  ]
"74
[; ;i2c.c: 74:  I2C_delay();
[e ( _I2C_delay ..  ]
"75
[; ;i2c.c: 75:  while (read_SCL() == 0);
[e $U 14  ]
[e :U 15 ]
[e :U 14 ]
[e $ == -> ( _read_SCL ..  `i -> 0 `i 15  ]
[e :U 16 ]
"76
[; ;i2c.c: 76:  I2C_delay();
[e ( _I2C_delay ..  ]
"77
[; ;i2c.c: 77:  if (read_SDA() == 0) {
[e $ ! == -> ( _read_SDA ..  `i -> 0 `i 17  ]
{
"79
[; ;i2c.c: 79:  }
}
[e :U 17 ]
"80
[; ;i2c.c: 80:  I2C_delay();
[e ( _I2C_delay ..  ]
"81
[; ;i2c.c: 81:  started = 0;
[e = _started -> -> 0 `i `uc ]
"82
[; ;i2c.c: 82: }
[e :UE 13 ]
}
"84
[; ;i2c.c: 84: void i2c_write_bit(unsigned char bit) {
[v _i2c_write_bit `(v ~T0 @X0 1 ef1`uc ]
{
[e :U _i2c_write_bit ]
[v _bit `uc ~T0 @X0 1 r1 ]
[f ]
"85
[; ;i2c.c: 85:  if (bit) {
[e $ ! != -> _bit `i -> 0 `i 19  ]
{
"86
[; ;i2c.c: 86:   read_SDA();
[e ( _read_SDA ..  ]
"87
[; ;i2c.c: 87:  } else {
}
[e $U 20  ]
[e :U 19 ]
{
"88
[; ;i2c.c: 88:   clear_SDA();
[e ( _clear_SDA ..  ]
"89
[; ;i2c.c: 89:  }
}
[e :U 20 ]
"90
[; ;i2c.c: 90:  I2C_delay();
[e ( _I2C_delay ..  ]
"91
[; ;i2c.c: 91:  while (read_SCL() == 0);
[e $U 21  ]
[e :U 22 ]
[e :U 21 ]
[e $ == -> ( _read_SCL ..  `i -> 0 `i 22  ]
[e :U 23 ]
"92
[; ;i2c.c: 92:  if (bit && read_SDA() == 0) {
[e $ ! && != -> _bit `i -> 0 `i == -> ( _read_SDA ..  `i -> 0 `i 24  ]
{
"94
[; ;i2c.c: 94:  }
}
[e :U 24 ]
"95
[; ;i2c.c: 95:  I2C_delay();
[e ( _I2C_delay ..  ]
"96
[; ;i2c.c: 96:  clear_SCL();
[e ( _clear_SCL ..  ]
"97
[; ;i2c.c: 97:  I2C_delay();
[e ( _I2C_delay ..  ]
"98
[; ;i2c.c: 98: }
[e :UE 18 ]
}
"100
[; ;i2c.c: 100: unsigned char i2c_read_bit(void) {
[v _i2c_read_bit `(uc ~T0 @X0 1 ef ]
{
[e :U _i2c_read_bit ]
[f ]
"101
[; ;i2c.c: 101:  unsigned char bit;
[v _bit `uc ~T0 @X0 1 a ]
"102
[; ;i2c.c: 102:  read_SDA();
[e ( _read_SDA ..  ]
"103
[; ;i2c.c: 103:  I2C_delay();
[e ( _I2C_delay ..  ]
"104
[; ;i2c.c: 104:  while (read_SCL() == 0);
[e $U 26  ]
[e :U 27 ]
[e :U 26 ]
[e $ == -> ( _read_SCL ..  `i -> 0 `i 27  ]
[e :U 28 ]
"105
[; ;i2c.c: 105:  bit = read_SDA();
[e = _bit ( _read_SDA ..  ]
"106
[; ;i2c.c: 106:  I2C_delay();
[e ( _I2C_delay ..  ]
"107
[; ;i2c.c: 107:  clear_SCL();
[e ( _clear_SCL ..  ]
"108
[; ;i2c.c: 108:  I2C_delay();
[e ( _I2C_delay ..  ]
"109
[; ;i2c.c: 109:  return bit;
[e ) _bit ]
[e $UE 25  ]
"110
[; ;i2c.c: 110: }
[e :UE 25 ]
}
"113
[; ;i2c.c: 113: unsigned char i2cWriteByte(unsigned char send_start, unsigned char send_stop, unsigned char byte) {
[v _i2cWriteByte `(uc ~T0 @X0 1 ef3`uc`uc`uc ]
{
[e :U _i2cWriteByte ]
[v _send_start `uc ~T0 @X0 1 r1 ]
[v _send_stop `uc ~T0 @X0 1 r2 ]
[v _byte `uc ~T0 @X0 1 r3 ]
[f ]
"114
[; ;i2c.c: 114:  unsigned char bit;
[v _bit `uc ~T0 @X0 1 a ]
"115
[; ;i2c.c: 115:  unsigned char nack;
[v _nack `uc ~T0 @X0 1 a ]
"116
[; ;i2c.c: 116:  if (send_start) {
[e $ ! != -> _send_start `i -> 0 `i 30  ]
{
"117
[; ;i2c.c: 117:   i2c_start();
[e ( _i2c_start ..  ]
"118
[; ;i2c.c: 118:  }
}
[e :U 30 ]
"119
[; ;i2c.c: 119:  for (bit = 0; bit < 8; bit++) {
{
[e = _bit -> -> 0 `i `uc ]
[e $ < -> _bit `i -> 8 `i 31  ]
[e $U 32  ]
[e :U 31 ]
{
"120
[; ;i2c.c: 120:   i2c_write_bit((byte & 0x80) != 0);
[e ( _i2c_write_bit (1 -> -> != & -> _byte `i -> 128 `i -> 0 `i `i `uc ]
"121
[; ;i2c.c: 121:   byte <<= 1;
[e =<< _byte -> -> 1 `i `uc ]
"122
[; ;i2c.c: 122:  }
}
[e ++ _bit -> -> 1 `i `uc ]
[e $ < -> _bit `i -> 8 `i 31  ]
[e :U 32 ]
}
"123
[; ;i2c.c: 123:  nack = i2c_read_bit();
[e = _nack ( _i2c_read_bit ..  ]
"124
[; ;i2c.c: 124:  if (send_stop) {
[e $ ! != -> _send_stop `i -> 0 `i 34  ]
{
"125
[; ;i2c.c: 125:   i2c_stop();
[e ( _i2c_stop ..  ]
"126
[; ;i2c.c: 126:  }
}
[e :U 34 ]
"127
[; ;i2c.c: 127:  return nack;
[e ) _nack ]
[e $UE 29  ]
"128
[; ;i2c.c: 128: }
[e :UE 29 ]
}
"131
[; ;i2c.c: 131: unsigned char i2cReadByte(unsigned char nack, unsigned char send_stop) {
[v _i2cReadByte `(uc ~T0 @X0 1 ef2`uc`uc ]
{
[e :U _i2cReadByte ]
[v _nack `uc ~T0 @X0 1 r1 ]
[v _send_stop `uc ~T0 @X0 1 r2 ]
[f ]
"132
[; ;i2c.c: 132:  unsigned char byte = 0;
[v _byte `uc ~T0 @X0 1 a ]
[e = _byte -> -> 0 `i `uc ]
"133
[; ;i2c.c: 133:  unsigned bit;
[v _bit `ui ~T0 @X0 1 a ]
"134
[; ;i2c.c: 134:  for (bit = 0; bit < 8; bit++) {
{
[e = _bit -> -> 0 `i `ui ]
[e $ < _bit -> -> 8 `i `ui 36  ]
[e $U 37  ]
[e :U 36 ]
{
"135
[; ;i2c.c: 135:   byte = (byte << 1) | i2c_read_bit();
[e = _byte -> | << -> _byte `i -> 1 `i -> ( _i2c_read_bit ..  `i `uc ]
"136
[; ;i2c.c: 136:  }
}
[e ++ _bit -> -> 1 `i `ui ]
[e $ < _bit -> -> 8 `i `ui 36  ]
[e :U 37 ]
}
"137
[; ;i2c.c: 137:  i2c_write_bit(nack);
[e ( _i2c_write_bit (1 _nack ]
"138
[; ;i2c.c: 138:  if (send_stop) {
[e $ ! != -> _send_stop `i -> 0 `i 39  ]
{
"139
[; ;i2c.c: 139:   i2c_stop();
[e ( _i2c_stop ..  ]
"140
[; ;i2c.c: 140:  }
}
[e :U 39 ]
"141
[; ;i2c.c: 141:  return byte;
[e ) _byte ]
[e $UE 35  ]
"142
[; ;i2c.c: 142: }
[e :UE 35 ]
}
